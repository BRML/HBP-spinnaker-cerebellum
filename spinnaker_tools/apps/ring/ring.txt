
ring.elf:     file format elf32-littlearm
ring.elf
architecture: armv5te, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000000

Program Header:
    LOAD off    0x00008000 vaddr 0x00000000 paddr 0x00000000 align 2**15
         filesz 0x00001ad9 memsz 0x00001ad9 flags r-x
    LOAD off    0x00010000 vaddr 0x00400000 paddr 0x00400000 align 2**15
         filesz 0x00000000 memsz 0x00000118 flags rw-
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 RO_DATA       00001ad9  00000000  00000000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 ZI_DATA       00000118  00400000  00400000  00010000  2**2
                  ALLOC
  2 .comment      00000030  00000000  00000000  00009ad9  2**0
                  CONTENTS, READONLY
  3 .ARM.attributes 00000027  00000000  00000000  00009b09  2**0
                  CONTENTS, READONLY
  4 .debug_frame  00000020  00000000  00000000  00009b30  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    d  RO_DATA	00000000 RO_DATA
00400000 l    d  ZI_DATA	00000000 ZI_DATA
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 sark_alib.o
00000001 l       *ABS*	00000000 GNU
00000000 l       *ABS*	00000000 NULL
80000000 l       *ABS*	00000000 BIT_31
00000001 l       *ABS*	00000000 BUF_WRITE
00000012 l       *ABS*	00000000 NUM_CPUS
00000006 l       *ABS*	00000000 NUM_LINKS
00000000 l       *ABS*	00000000 ITCM_BASE
00008000 l       *ABS*	00000000 ITCM_SIZE
00008000 l       *ABS*	00000000 ITCM_TOP
00400000 l       *ABS*	00000000 DTCM_BASE
00010000 l       *ABS*	00000000 DTCM_SIZE
00410000 l       *ABS*	00000000 DTCM_TOP
70000000 l       *ABS*	00000000 SDRAM_BASE_UNBUF
60000000 l       *ABS*	00000000 SDRAM_BASE_BUF
60000000 l       *ABS*	00000000 SDRAM_BASE
08000000 l       *ABS*	00000000 SDRAM_SIZE
68000000 l       *ABS*	00000000 SDRAM_TOP
f5000000 l       *ABS*	00000000 SYSRAM_BASE_UNBUF
e5000000 l       *ABS*	00000000 SYSRAM_BASE_BUF
e5000000 l       *ABS*	00000000 SYSRAM_BASE
00008000 l       *ABS*	00000000 SYSRAM_SIZE
e5008000 l       *ABS*	00000000 SYSRAM_TOP
f6000000 l       *ABS*	00000000 ROM_BASE
00008000 l       *ABS*	00000000 ROM_SIZE
f6008000 l       *ABS*	00000000 ROM_TOP
10000000 l       *ABS*	00000000 CC_BASE_UNBUF
20000000 l       *ABS*	00000000 CC_BASE_BUF
20000000 l       *ABS*	00000000 CC_BASE
00000000 l       *ABS*	00000000 CC_TCR
00000004 l       *ABS*	00000000 CC_TXDATA
00000008 l       *ABS*	00000000 CC_TXKEY
0000000c l       *ABS*	00000000 CC_RSR
00000010 l       *ABS*	00000000 CC_RXDATA
00000014 l       *ABS*	00000000 CC_RXKEY
00000018 l       *ABS*	00000000 CC_SAR
0000001c l       *ABS*	00000000 CC_TEST
11000000 l       *ABS*	00000000 TIMER_BASE_UNBUF
21000000 l       *ABS*	00000000 TIMER_BASE_BUF
21000000 l       *ABS*	00000000 TIMER_BASE
00000020 l       *ABS*	00000000 TIMER_OFFSET
21000000 l       *ABS*	00000000 TIMER1_BASE
21000020 l       *ABS*	00000000 TIMER2_BASE
00000000 l       *ABS*	00000000 TC_LOAD
00000004 l       *ABS*	00000000 TC_COUNT
00000008 l       *ABS*	00000000 TC_CONTROL
0000000c l       *ABS*	00000000 TC_INT_CLR
00000010 l       *ABS*	00000000 TC_RAW_INT
00000014 l       *ABS*	00000000 TC_MASK_INT
00000018 l       *ABS*	00000000 TC_BG_LOAD
00000000 l       *ABS*	00000000 T1_LOAD
00000004 l       *ABS*	00000000 T1_COUNT
00000008 l       *ABS*	00000000 T1_CONTROL
0000000c l       *ABS*	00000000 T1_INT_CLR
00000010 l       *ABS*	00000000 T1_RAW_INT
00000014 l       *ABS*	00000000 T1_MASK_INT
00000018 l       *ABS*	00000000 T1_BG_LOAD
00000020 l       *ABS*	00000000 T2_LOAD
00000024 l       *ABS*	00000000 T2_COUNT
00000028 l       *ABS*	00000000 T2_CONTROL
0000002c l       *ABS*	00000000 T2_INT_CLR
00000030 l       *ABS*	00000000 T2_RAW_INT
00000034 l       *ABS*	00000000 T2_MASK_INT
00000038 l       *ABS*	00000000 T2_BG_LOAD
1f000000 l       *ABS*	00000000 VIC_BASE_UNBUF
2f000000 l       *ABS*	00000000 VIC_BASE_BUF
2f000000 l       *ABS*	00000000 VIC_BASE
00000000 l       *ABS*	00000000 VIC_IRQST
00000004 l       *ABS*	00000000 VIC_FIQST
00000008 l       *ABS*	00000000 VIC_RAW
0000000c l       *ABS*	00000000 VIC_SELECT
00000010 l       *ABS*	00000000 VIC_ENABLE
00000014 l       *ABS*	00000000 VIC_DISABLE
00000018 l       *ABS*	00000000 VIC_SOFT_SET
0000001c l       *ABS*	00000000 VIC_SOFT_CLR
00000020 l       *ABS*	00000000 VIC_PROTECT
00000030 l       *ABS*	00000000 VIC_VADDR
00000034 l       *ABS*	00000000 VIC_DEFADDR
00000100 l       *ABS*	00000000 VIC_ADDR
00000100 l       *ABS*	00000000 VIC_ADDR0
00000104 l       *ABS*	00000000 VIC_ADDR1
00000108 l       *ABS*	00000000 VIC_ADDR2
0000010c l       *ABS*	00000000 VIC_ADDR3
00000110 l       *ABS*	00000000 VIC_ADDR4
00000114 l       *ABS*	00000000 VIC_ADDR5
00000118 l       *ABS*	00000000 VIC_ADDR6
0000011c l       *ABS*	00000000 VIC_ADDR7
00000120 l       *ABS*	00000000 VIC_ADDR8
00000124 l       *ABS*	00000000 VIC_ADDR9
00000128 l       *ABS*	00000000 VIC_ADDR10
0000012c l       *ABS*	00000000 VIC_ADDR11
00000130 l       *ABS*	00000000 VIC_ADDR12
00000134 l       *ABS*	00000000 VIC_ADDR13
00000138 l       *ABS*	00000000 VIC_ADDR14
0000013c l       *ABS*	00000000 VIC_ADDR15
00000200 l       *ABS*	00000000 VIC_CNTL
00000200 l       *ABS*	00000000 VIC_CNTL0
00000204 l       *ABS*	00000000 VIC_CNTL1
00000208 l       *ABS*	00000000 VIC_CNTL2
0000020c l       *ABS*	00000000 VIC_CNTL3
00000210 l       *ABS*	00000000 VIC_CNTL4
00000214 l       *ABS*	00000000 VIC_CNTL5
00000218 l       *ABS*	00000000 VIC_CNTL6
0000021c l       *ABS*	00000000 VIC_CNTL7
00000220 l       *ABS*	00000000 VIC_CNTL8
00000224 l       *ABS*	00000000 VIC_CNTL9
00000228 l       *ABS*	00000000 VIC_CNTL10
0000022c l       *ABS*	00000000 VIC_CNTL11
00000230 l       *ABS*	00000000 VIC_CNTL12
00000234 l       *ABS*	00000000 VIC_CNTL13
00000238 l       *ABS*	00000000 VIC_CNTL14
0000023c l       *ABS*	00000000 VIC_CNTL15
00000000 l       *ABS*	00000000 WDOG_INT
00000001 l       *ABS*	00000000 SOFTWARE_INT
00000002 l       *ABS*	00000000 COMM_RX_INT
00000003 l       *ABS*	00000000 COMM_TX_INT
00000004 l       *ABS*	00000000 TIMER1_INT
00000005 l       *ABS*	00000000 TIMER2_INT
00000006 l       *ABS*	00000000 CC_RDY_INT
00000007 l       *ABS*	00000000 CC_RPE_INT
00000008 l       *ABS*	00000000 CC_RFE_INT
00000009 l       *ABS*	00000000 CC_TFL_INT
0000000a l       *ABS*	00000000 CC_TOV_INT
0000000b l       *ABS*	00000000 CC_TMT_INT
0000000c l       *ABS*	00000000 DMA_DONE_INT
0000000d l       *ABS*	00000000 DMA_ERR_INT
0000000e l       *ABS*	00000000 DMA_TO_INT
0000000f l       *ABS*	00000000 RTR_DIAG_INT
00000010 l       *ABS*	00000000 RTR_DUMP_INT
00000011 l       *ABS*	00000000 RTR_ERR_INT
00000012 l       *ABS*	00000000 CPU_INT
00000013 l       *ABS*	00000000 ETH_TX_INT
00000014 l       *ABS*	00000000 ETH_RX_INT
00000015 l       *ABS*	00000000 ETH_PHY_INT
00000016 l       *ABS*	00000000 SLOW_CLK_INT
00000017 l       *ABS*	00000000 CC_TNF_INT
00000018 l       *ABS*	00000000 CC_MC_INT
00000019 l       *ABS*	00000000 CC_P2P_INT
0000001a l       *ABS*	00000000 CC_NN_INT
0000001b l       *ABS*	00000000 CC_FR_INT
0000001c l       *ABS*	00000000 INT0_INT
0000001d l       *ABS*	00000000 INT1_INT
0000001e l       *ABS*	00000000 GPIO8_INT
0000001f l       *ABS*	00000000 GPIO9_INT
30000000 l       *ABS*	00000000 DMA_BASE_UNBUF
40000000 l       *ABS*	00000000 DMA_BASE_BUF
40000000 l       *ABS*	00000000 DMA_BASE
00000004 l       *ABS*	00000000 DMA_ADRS
00000008 l       *ABS*	00000000 DMA_ADRT
0000000c l       *ABS*	00000000 DMA_DESC
00000010 l       *ABS*	00000000 DMA_CTRL
00000014 l       *ABS*	00000000 DMA_STAT
00000018 l       *ABS*	00000000 DMA_GCTL
0000001c l       *ABS*	00000000 DMA_CRCC
00000020 l       *ABS*	00000000 DMA_CRCR
00000024 l       *ABS*	00000000 DMA_TMTV
00000028 l       *ABS*	00000000 DMA_SCTL
00000040 l       *ABS*	00000000 DMA_STAT0
00000044 l       *ABS*	00000000 DMA_STAT1
00000048 l       *ABS*	00000000 DMA_STAT2
0000004c l       *ABS*	00000000 DMA_STAT3
00000050 l       *ABS*	00000000 DMA_STAT4
00000054 l       *ABS*	00000000 DMA_STAT5
00000058 l       *ABS*	00000000 DMA_STAT6
0000005c l       *ABS*	00000000 DMA_STAT7
00000104 l       *ABS*	00000000 DMA_AD2S
00000108 l       *ABS*	00000000 DMA_AD2T
0000010c l       *ABS*	00000000 DMA_DES2
00000180 l       *ABS*	00000000 DMA_CRCT
f0000000 l       *ABS*	00000000 PL340_BASE_UNBUF
e0000000 l       *ABS*	00000000 PL340_BASE_BUF
e0000000 l       *ABS*	00000000 PL340_BASE
00000000 l       *ABS*	00000000 MC_STAT
00000004 l       *ABS*	00000000 MC_CMD
00000008 l       *ABS*	00000000 MC_DIRC
0000000c l       *ABS*	00000000 MC_MCFG
00000010 l       *ABS*	00000000 MC_REFP
00000014 l       *ABS*	00000000 MC_CASL
00000018 l       *ABS*	00000000 MC_DQSS
0000001c l       *ABS*	00000000 MC_MRD
00000020 l       *ABS*	00000000 MC_RAS
00000024 l       *ABS*	00000000 MC_RC
00000028 l       *ABS*	00000000 MC_RCD
0000002c l       *ABS*	00000000 MC_RFC
00000030 l       *ABS*	00000000 MC_RP
00000034 l       *ABS*	00000000 MC_RRD
00000038 l       *ABS*	00000000 MC_WR
0000003c l       *ABS*	00000000 MC_WTR
00000040 l       *ABS*	00000000 MC_XP
00000044 l       *ABS*	00000000 MC_XSR
00000048 l       *ABS*	00000000 MC_ESR
0000004c l       *ABS*	00000000 MC_MCFG2
00000050 l       *ABS*	00000000 MC_MCFG3
00000100 l       *ABS*	00000000 MC_QOS0
00000104 l       *ABS*	00000000 MC_QOS1
00000108 l       *ABS*	00000000 MC_QOS2
0000010c l       *ABS*	00000000 MC_QOS3
00000110 l       *ABS*	00000000 MC_QOS4
00000114 l       *ABS*	00000000 MC_QOS5
00000118 l       *ABS*	00000000 MC_QOS6
0000011c l       *ABS*	00000000 MC_QOS7
00000120 l       *ABS*	00000000 MC_QOS8
00000124 l       *ABS*	00000000 MC_QOS9
00000128 l       *ABS*	00000000 MC_QOS10
0000012c l       *ABS*	00000000 MC_QOS11
00000130 l       *ABS*	00000000 MC_QOS12
00000134 l       *ABS*	00000000 MC_QOS13
00000138 l       *ABS*	00000000 MC_QOS14
0000013c l       *ABS*	00000000 MC_QOS15
00000200 l       *ABS*	00000000 MC_CCFG0
00000204 l       *ABS*	00000000 MC_CCFG1
00000208 l       *ABS*	00000000 MC_CCFG2
0000020c l       *ABS*	00000000 MC_CCFG3
00000300 l       *ABS*	00000000 DLL_STATUS
00000304 l       *ABS*	00000000 DLL_CONFIG0
00000308 l       *ABS*	00000000 DLL_CONFIG1
f1000000 l       *ABS*	00000000 RTR_BASE_UNBUF
e1000000 l       *ABS*	00000000 RTR_BASE_BUF
e1000000 l       *ABS*	00000000 RTR_BASE
00000000 l       *ABS*	00000000 RTR_CONTROL
00000004 l       *ABS*	00000000 RTR_STATUS
00000008 l       *ABS*	00000000 RTR_EHDR
0000000c l       *ABS*	00000000 RTR_EKEY
00000010 l       *ABS*	00000000 RTR_EDAT
00000014 l       *ABS*	00000000 RTR_ESTAT
00000018 l       *ABS*	00000000 RTR_DHDR
0000001c l       *ABS*	00000000 RTR_DKEY
00000020 l       *ABS*	00000000 RTR_DDAT
00000024 l       *ABS*	00000000 RTR_DLINK
00000028 l       *ABS*	00000000 RTR_DSTAT
0000002c l       *ABS*	00000000 RTR_DGEN
00000200 l       *ABS*	00000000 RTR_DGF0
00000204 l       *ABS*	00000000 RTR_DGF1
00000208 l       *ABS*	00000000 RTR_DGF2
0000020c l       *ABS*	00000000 RTR_DGF3
00000210 l       *ABS*	00000000 RTR_DGF4
00000214 l       *ABS*	00000000 RTR_DGF5
00000218 l       *ABS*	00000000 RTR_DGF6
0000021c l       *ABS*	00000000 RTR_DGF7
00000220 l       *ABS*	00000000 RTR_DGF8
00000224 l       *ABS*	00000000 RTR_DGF9
00000228 l       *ABS*	00000000 RTR_DGF10
0000022c l       *ABS*	00000000 RTR_DGF11
00000230 l       *ABS*	00000000 RTR_DGF12
00000234 l       *ABS*	00000000 RTR_DGF13
00000238 l       *ABS*	00000000 RTR_DGF14
0000023c l       *ABS*	00000000 RTR_DGF15
00000300 l       *ABS*	00000000 RTR_DGC0
00000304 l       *ABS*	00000000 RTR_DGC1
00000308 l       *ABS*	00000000 RTR_DGC2
0000030c l       *ABS*	00000000 RTR_DGC3
00000310 l       *ABS*	00000000 RTR_DGC4
00000314 l       *ABS*	00000000 RTR_DGC5
00000318 l       *ABS*	00000000 RTR_DGC6
0000031c l       *ABS*	00000000 RTR_DGC7
00000320 l       *ABS*	00000000 RTR_DGC8
00000324 l       *ABS*	00000000 RTR_DGC9
00000328 l       *ABS*	00000000 RTR_DGC10
0000032c l       *ABS*	00000000 RTR_DGC11
00000330 l       *ABS*	00000000 RTR_DGC12
00000334 l       *ABS*	00000000 RTR_DGC13
00000338 l       *ABS*	00000000 RTR_DGC14
0000033c l       *ABS*	00000000 RTR_DGC15
00000f00 l       *ABS*	00000000 RTR_TST1
00000f04 l       *ABS*	00000000 RTR_TST2
00002000 l       *ABS*	00000000 P2P_TABLE_SIZE
00000400 l       *ABS*	00000000 MC_TABLE_SIZE
00000018 l       *ABS*	00000000 MC_RAM_WIDTH
00ffffff l       *ABS*	00000000 MC_RAM_MASK
00000008 l       *ABS*	00000000 P2P_EPW
00000003 l       *ABS*	00000000 P2P_LOG_EPW
00000007 l       *ABS*	00000000 P2P_EMASK
00000003 l       *ABS*	00000000 P2P_BPE
00000007 l       *ABS*	00000000 P2P_BMASK
00db6db6 l       *ABS*	00000000 P2P_INIT
e1004000 l       *ABS*	00000000 RTR_MCRAM_BASE
e1005000 l       *ABS*	00000000 RTR_MCRAM_TOP
e1008000 l       *ABS*	00000000 RTR_MCKEY_BASE
e1009000 l       *ABS*	00000000 RTR_MCKEY_TOP
e100c000 l       *ABS*	00000000 RTR_MCMASK_BASE
e100d000 l       *ABS*	00000000 RTR_MCMASK_TOP
e1010000 l       *ABS*	00000000 RTR_P2P_BASE
e1018000 l       *ABS*	00000000 RTR_P2P_TOP
00000020 l       *ABS*	00000000 MC_CAM_WIDTH
f2000000 l       *ABS*	00000000 SYSCTL_BASE_UNBUF
e2000000 l       *ABS*	00000000 SYSCTL_BASE_BUF
e2000000 l       *ABS*	00000000 SYSCTL_BASE
5ec00000 l       *ABS*	00000000 SC_CODE
59111012 l       *ABS*	00000000 CHIP_ID_CODE
00000000 l       *ABS*	00000000 SC_CHIP_ID
00000004 l       *ABS*	00000000 SC_CPU_DIS
00000008 l       *ABS*	00000000 SC_SET_IRQ
0000000c l       *ABS*	00000000 SC_CLR_IRQ
00000010 l       *ABS*	00000000 SC_SET_OK
00000010 l       *ABS*	00000000 SC_CPU_OK
00000014 l       *ABS*	00000000 SC_CLR_OK
00000018 l       *ABS*	00000000 SC_SOFT_RST_L
0000001c l       *ABS*	00000000 SC_HARD_RST_L
00000020 l       *ABS*	00000000 SC_SUBS_RST_L
00000024 l       *ABS*	00000000 SC_SOFT_RST_P
00000028 l       *ABS*	00000000 SC_HARD_RST_P
0000002c l       *ABS*	00000000 SC_SUBS_RST_P
00000030 l       *ABS*	00000000 SC_RST_CODE
00000034 l       *ABS*	00000000 SC_MON_ID
00000038 l       *ABS*	00000000 SC_MISC_CTRL
0000003c l       *ABS*	00000000 GPIO_RES
00000040 l       *ABS*	00000000 GPIO_PORT
00000044 l       *ABS*	00000000 GPIO_DIR
00000048 l       *ABS*	00000000 GPIO_SET
0000004c l       *ABS*	00000000 GPIO_CLR
00000048 l       *ABS*	00000000 GPIO_READ
00000050 l       *ABS*	00000000 SC_PLL1
00000054 l       *ABS*	00000000 SC_PLL2
00000058 l       *ABS*	00000000 SC_FLAG
00000058 l       *ABS*	00000000 SC_SETFLAG
0000005c l       *ABS*	00000000 SC_CLRFLAG
00000060 l       *ABS*	00000000 SC_CLKMUX
00000064 l       *ABS*	00000000 SC_SLEEP
00000068 l       *ABS*	00000000 SC_TS0
0000006c l       *ABS*	00000000 SC_TS1
00000070 l       *ABS*	00000000 SC_TS2
00000080 l       *ABS*	00000000 SC_ARB0
00000100 l       *ABS*	00000000 SC_TAS0
00000180 l       *ABS*	00000000 SC_TAC0
00000200 l       *ABS*	00000000 SC_LINK_DIS
00000000 l       *ABS*	00000000 RST_POR
00000001 l       *ABS*	00000000 RST_WDT
00000002 l       *ABS*	00000000 RST_USER
00000003 l       *ABS*	00000000 RST_SW
00000004 l       *ABS*	00000000 RST_WDI
f3000000 l       *ABS*	00000000 WDOG_BASE_UNBUF
e3000000 l       *ABS*	00000000 WDOG_BASE_BUF
e3000000 l       *ABS*	00000000 WDOG_BASE
00000000 l       *ABS*	00000000 WD_LOAD
00000004 l       *ABS*	00000000 WD_COUNT
00000008 l       *ABS*	00000000 WD_CTRL
0000000c l       *ABS*	00000000 WD_INTCLR
00000010 l       *ABS*	00000000 WD_RAWINT
00000014 l       *ABS*	00000000 WD_MSKINT
00000c00 l       *ABS*	00000000 WD_LOCK
1acce551 l       *ABS*	00000000 WD_CODE
00000001 l       *ABS*	00000000 WD_INT_B
00000002 l       *ABS*	00000000 WD_RST_B
f4000000 l       *ABS*	00000000 ETH_BASE_UNBUF
e4000000 l       *ABS*	00000000 ETH_BASE_BUF
e4000000 l       *ABS*	00000000 ETH_BASE
e4000000 l       *ABS*	00000000 ETH_TX_BASE
00000600 l       *ABS*	00000000 ETH_TX_SIZE
e4000600 l       *ABS*	00000000 ETH_TX_TOP
e4004000 l       *ABS*	00000000 ETH_RX_BASE
00000c00 l       *ABS*	00000000 ETH_RX_SIZE
e4004c00 l       *ABS*	00000000 ETH_RX_TOP
e4008000 l       *ABS*	00000000 ETH_RX_DESC_RAM
e400c000 l       *ABS*	00000000 ETH_REGS
00000000 l       *ABS*	00000000 ETH_CONTROL
00000004 l       *ABS*	00000000 ETH_STATUS
00000008 l       *ABS*	00000000 ETH_TX_LEN
0000000c l       *ABS*	00000000 ETH_TX_CMD
00000010 l       *ABS*	00000000 ETH_RX_CMD
00000014 l       *ABS*	00000000 ETH_MAC_LO
00000018 l       *ABS*	00000000 ETH_MAC_HI
0000001c l       *ABS*	00000000 ETH_PHY_CTRL
00000020 l       *ABS*	00000000 ETH_INT_CLR
00000024 l       *ABS*	00000000 ETH_RX_BUF_RP
0000002c l       *ABS*	00000000 ETH_RX_DESC_RP
00000001 l       *ABS*	00000000 ETH_TX_CLR
00000010 l       *ABS*	00000000 ETH_RX_CLR
00000001 l       *ABS*	00000000 PHY_CTRL_NRST
00000002 l       *ABS*	00000000 PHY_CTRL_DIN
00000004 l       *ABS*	00000000 PHY_CTRL_DOUT
00000008 l       *ABS*	00000000 PHY_CTRL_OE
00000010 l       *ABS*	00000000 PHY_CTRL_CLK
00000000 l       *ABS*	00000000 PKT_MC
00400000 l       *ABS*	00000000 PKT_P2P
00800000 l       *ABS*	00000000 PKT_NN
00a00000 l       *ABS*	00000000 PKT_NND
00c00000 l       *ABS*	00000000 PKT_FR
00020000 l       *ABS*	00000000 PKT_PL
00020000 l       *ABS*	00000000 PKT_MC_PL
00420000 l       *ABS*	00000000 PKT_P2P_PL
00820000 l       *ABS*	00000000 PKT_NN_PL
00c20000 l       *ABS*	00000000 PKT_FR_PL
0000000a l       *ABS*	00000000 CLK_XTAL_MHZ
0007011a l       *ABS*	00000000 PLL_260
0007011e l       *ABS*	00000000 PLL_300
00070121 l       *ABS*	00000000 PLL_330
00070128 l       *ABS*	00000000 PLL_400
00000050 l       *ABS*	00000000 PLL_LOCK_TIME
809488a5 l       *ABS*	00000000 PLL_CLK_SEL
00000020 l       *ABS*	00000000 SERIAL_NCS
00000010 l       *ABS*	00000000 SERIAL_CLK
00000008 l       *ABS*	00000000 SERIAL_SI
00000004 l       *ABS*	00000000 SERIAL_SO
00000038 l       *ABS*	00000000 SERIAL_OE
80000000 l       *ABS*	00000000 SDRAM_TQ
40000000 l       *ABS*	00000000 SDRAM_DPD
20000000 l       *ABS*	00000000 SDRAM_HERE
00000001 l       *ABS*	00000000 LED_0
00000010 l       *ABS*	00000000 MODE_USER
00000011 l       *ABS*	00000000 MODE_FIQ
00000012 l       *ABS*	00000000 MODE_IRQ
00000013 l       *ABS*	00000000 MODE_SVC
00000017 l       *ABS*	00000000 MODE_ABT
0000001b l       *ABS*	00000000 MODE_UND
0000001f l       *ABS*	00000000 MODE_SYS
00000020 l       *ABS*	00000000 THUMB_BIT
00000080 l       *ABS*	00000000 IMASK_IRQ
00000040 l       *ABS*	00000000 IMASK_FIQ
000000c0 l       *ABS*	00000000 IMASK_ALL
00000001 l       *ABS*	00000000 SARK_EVENT
00000180 l       *ABS*	00000000 SVC_STACK
00000100 l       *ABS*	00000000 IRQ_STACK
00000100 l       *ABS*	00000000 FIQ_STACK
00000004 l       *ABS*	00000000 NUM_SDP_MSGS
0000000f l       *ABS*	00000000 SARK_SLOT
00000010 l       *ABS*	00000000 INIT_EVENTS
deaddead l       *ABS*	00000000 DEAD_WORD
00000001 l       *ABS*	00000000 APLX_ACOPY
00000002 l       *ABS*	00000000 APLX_RCOPY
00000003 l       *ABS*	00000000 APLX_FILL
00000004 l       *ABS*	00000000 APLX_EXEC
000000ff l       *ABS*	00000000 APLX_END
00000010 l       *ABS*	00000000 APLX_ENTRY_SIZE
00000040 l       *ABS*	00000000 APLX_BUF_SIZE
00007fc0 l       *ABS*	00000000 APLX_BUFFER
000000ff l       *ABS*	00000000 TAG_NONE
00000000 l       *ABS*	00000000 TAG_HOST
00000001 l       *ABS*	00000000 RTR_ALLOC_FIRST
00000400 l       *ABS*	00000000 RTR_ALLOC_LAST
000003ff l       *ABS*	00000000 RTR_ALLOC_MAX
00000001 l       *ABS*	00000000 ALLOC_LOCK
00000002 l       *ABS*	00000000 ALLOC_ID
00000005 l       *ABS*	00000000 A_LOCK_SEMA
00000001 l       *ABS*	00000000 A_RTE_RESET
00000002 l       *ABS*	00000000 A_RTE_UNDEF
00000003 l       *ABS*	00000000 A_RTE_SVC
00000004 l       *ABS*	00000000 A_RTE_PABT
00000005 l       *ABS*	00000000 A_RTE_DABT
00000006 l       *ABS*	00000000 A_RTE_IRQ
00000007 l       *ABS*	00000000 A_RTE_FIQ
00000008 l       *ABS*	00000000 A_RTE_VIC
00000002 l       *ABS*	00000000 A_STATE_RTE
00000006 l       *ABS*	00000000 EVENT_COUNT
00000000 l       *ABS*	00000000 CMD_VER
00000001 l       *ABS*	00000000 CMD_RUN
00000002 l       *ABS*	00000000 CMD_READ
00000003 l       *ABS*	00000000 CMD_WRITE
00000004 l       *ABS*	00000000 CMD_APLX
00000005 l       *ABS*	00000000 CMD_FILL
00000010 l       *ABS*	00000000 CMD_REMAP
00000011 l       *ABS*	00000000 CMD_LINK_READ
00000012 l       *ABS*	00000000 CMD_LINK_WRITE
00000013 l       *ABS*	00000000 CMD_AR
00000014 l       *ABS*	00000000 CMD_NNP
00000015 l       *ABS*	00000000 CMD_P2PC
00000016 l       *ABS*	00000000 CMD_SIG
00000017 l       *ABS*	00000000 CMD_FFD
00000018 l       *ABS*	00000000 CMD_AS
00000019 l       *ABS*	00000000 CMD_LED
0000001a l       *ABS*	00000000 CMD_IPTAG
0000001b l       *ABS*	00000000 CMD_SROM
0000001c l       *ABS*	00000000 CMD_ALLOC
0000001d l       *ABS*	00000000 CMD_RTR
00000040 l       *ABS*	00000000 CMD_TUBE
00000080 l       *ABS*	00000000 RC_OK
00000081 l       *ABS*	00000000 RC_LEN
00000082 l       *ABS*	00000000 RC_SUM
00000083 l       *ABS*	00000000 RC_CMD
00000084 l       *ABS*	00000000 RC_ARG
00000085 l       *ABS*	00000000 RC_PORT
00000086 l       *ABS*	00000000 RC_TIMEOUT
00000087 l       *ABS*	00000000 RC_ROUTE
00000088 l       *ABS*	00000000 RC_CPU
00000089 l       *ABS*	00000000 RC_DEAD
0000008a l       *ABS*	00000000 RC_BUF
0000008b l       *ABS*	00000000 RC_P2P_NOREPLY
0000008c l       *ABS*	00000000 RC_P2P_REJECT
0000008d l       *ABS*	00000000 RC_P2P_BUSY
0000008e l       *ABS*	00000000 RC_P2P_TIMEOUT
0000008f l       *ABS*	00000000 RC_PKT_TX
00000000 l       *ABS*	00000000 TYPE_BYTE
00000001 l       *ABS*	00000000 TYPE_HALF
00000002 l       *ABS*	00000000 TYPE_WORD
00000005 l       *ABS*	00000000 PORT_SHIFT
000000e0 l       *ABS*	00000000 PORT_MASK
0000001f l       *ABS*	00000000 CPU_MASK
000000ff l       *ABS*	00000000 PORT_ETH
00000100 l       *ABS*	00000000 SDP_BUF_SIZE
00000080 l       *ABS*	00000000 VCPU_SIZE
0000002c l       *ABS*	00000000 VCPU_RT_CODE
0000002d l       *ABS*	00000000 VCPU_CPU_FLAGS
0000002e l       *ABS*	00000000 VCPU_CPU_STATE
0000002f l       *ABS*	00000000 VCPU_APP_ID
0000001c l       *ABS*	00000000 SARK_MSG_INT
0000001d l       *ABS*	00000000 SARK_SIG_INT
00000000 l       *ABS*	00000000 SARK_VIRT_CPU
00000008 l       *ABS*	00000000 SARK_RANDOM
00000030 l       *ABS*	00000000 SARK_CPU_CLK
00000020 l       *ABS*	00000000 SV_SSIZE
00000060 l       *ABS*	00000000 SV_USIZE
00000080 l       *ABS*	00000000 SV_ISIZE
00000020 l       *ABS*	00000000 SV_VSIZE
00000040 l       *ABS*	00000000 SV_RSIZE
00001000 l       *ABS*	00000000 SV_SIZE
e5007fe0 l       *ABS*	00000000 SV_SROM
e5007f80 l       *ABS*	00000000 SV_UBASE
e5007f00 l       *ABS*	00000000 SV_IBASE
e5007f00 l       *ABS*	00000000 SV_SV
00000100 l       *ABS*	00000000 SYS_BOOT
e5007000 l       *ABS*	00000000 SYS_USER_TOP
e5000100 l       *ABS*	00000000 SYS_USER_BASE
e5007ee0 l       *ABS*	00000000 SV_VECTORS
e5007ea0 l       *ABS*	00000000 SV_RANDOM
e5007000 l       *ABS*	00000000 SV_VCPU
e5007900 l       *ABS*	00000000 SV_SPARE
000005a0 l       *ABS*	00000000 SPARE_SIZE
e5007fe0 l       *ABS*	00000000 SROM_FLAG_BASE
e5007f80 l       *ABS*	00000000 STATUS_MAP_BASE
e5007ee0 l       *ABS*	00000000 RST_BLOCK_BASE
00008000 l       *ABS*	00000000 SRF_PRESENT
000000f0 l       *ABS*	00000000 SRF_HW_VER
00000008 l       *ABS*	00000000 SRF_PHY_INIT
00000004 l       *ABS*	00000000 SRF_PHY_RST
00000002 l       *ABS*	00000000 SRF_PHY_WAIT
00000001 l       *ABS*	00000000 SRF_ETH
00000000 l       *ABS*	00000000 SRF_NONE
00000020 l       RO_DATA	00000000 reset_vec
00000004 l       RO_DATA	00000000 undef
00000024 l       RO_DATA	00000000 undef_vec
00000028 l       RO_DATA	00000000 svc_vec
0000002c l       RO_DATA	00000000 pabt_vec
00000030 l       RO_DATA	00000000 dabt_vec
0000003c l       RO_DATA	00000000 fiq_vec
00000078 l       RO_DATA	00000000 reset_entry
000000d8 l       RO_DATA	00000000 undef_error
000000e0 l       RO_DATA	00000000 svc_error
000000e8 l       RO_DATA	00000000 pabt_error
000000f0 l       RO_DATA	00000000 dabt_error
00000034 l       RO_DATA	00000000 aplx_proc
00000038 l       RO_DATA	00000000 irq_vec
000000f8 l       RO_DATA	00000000 irq_error
00000100 l       RO_DATA	00000000 fiq_error
00000040 l       RO_DATA	00000000 svc_stack
00000042 l       RO_DATA	00000000 irq_stack
00000044 l       RO_DATA	00000000 fiq_stack
00000046 l       RO_DATA	00000000 stack_size
00000048 l       RO_DATA	00000000 code_top
0000004c l       RO_DATA	00000000 heap_base
00000050 l       RO_DATA	00000000 stack_top
00000054 l       RO_DATA	00000000 stack_fill
00000058 l       RO_DATA	00000000 num_msgs
00000059 l       RO_DATA	00000000 sark_slot
0000005a l       RO_DATA	00000000 num_events
0000005b l       RO_DATA	00000000 api
0000005c l       RO_DATA	00000000 app_id
0000005d l       RO_DATA	00000000 app_flags
0000005e l       RO_DATA	00000000 __PAD
00000060 l       RO_DATA	00000000 event_vec
000000d0 l       RO_DATA	00000000 reset_error
00000114 l       RO_DATA	00000000 exc_error
00000138 l       RO_DATA	00000000 cc_error
000001dc l       RO_DATA	00000000 lg1
00000218 l       RO_DATA	00000000 ws1
00000278 l       RO_DATA	00000000 wc2
00000260 l       RO_DATA	00000000 wc1
0000032c l       RO_DATA	00000000 aplx_buffer
00000330 l       RO_DATA	00000000 aplx_loader
0000031c l       RO_DATA	00000000 aplx_l0
00000348 l       RO_DATA	00000000 aplx_copy
00000344 l       RO_DATA	00000000 aplx_rcopy
00000356 l       RO_DATA	00000000 aplx_fill
00000366 l       RO_DATA	00000000 aplx_exec
0000035c l       RO_DATA	00000000 aplx_l1
00000000 l    df *ABS*	00000000 sark_base.c
00000000 l    df *ABS*	00000000 sark_event.c
00001aab l     O RO_DATA	00000006 vic_bit
00000000 l    df *ABS*	00000000 sark_timer.c
00000000 l    df *ABS*	00000000 sark_hw.c
00000000 l    df *ABS*	00000000 sark_isr.c
00000000 l    df *ABS*	00000000 sark_alloc.c
00000000 l    df *ABS*	00000000 sark_io.c
0000137c l     F RO_DATA	00000040 io_buf_init
000014b0 l     F RO_DATA	000000c2 io_put_fixed
00400030 l     O ZI_DATA	00000004 io_msg
00001ac8 l     O RO_DATA	00000011 hex
00400034 l     O ZI_DATA	00000004 io_buf
00400038 l     O ZI_DATA	00000004 buf_ptr
0040003c l     O ZI_DATA	00000004 sp_ptr
00000000 l    df *ABS*	00000000 sark_pkt.c
00000000 l    df *ABS*	00000000 
00000000 l    df *ABS*	00000000 ring.c
00000000 l    df *ABS*	00000000 _udivsi3.o
0000190c l       RO_DATA	00000000 .udivsi3_skip_div0_test
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 sark_build.c
00000000 l    df *ABS*	00000000 
00000040 l       *ABS*	00000000 RO_FROM
00000010 l       *ABS*	00000000 APLX_ENTRY
00001b0c l       *ABS*	00000000 RW_FROM
00000000 l       *UND*	00000000 __deregister_frame_info
00000000 l       *UND*	00000000 _ITM_registerTMCloneTable
00400000 l       *ABS*	00000000 DTCM_BASE
00400000 l       *ABS*	00000000 RW_BASE
00000000 l       *ABS*	00000000 RW_LENGTH
00000040 l       *ABS*	00000000 APLX_SIZE
00000000 l       *UND*	00000000 _ITM_deregisterTMCloneTable
00400000 l       *ABS*	00000000 ZI_BASE
00000000 l       *ABS*	00000000 RO_BASE
00000000 l       *ABS*	00000000 ITCM_BASE
00000000 l       *UND*	00000000 _Jv_RegisterClasses
00000000 l       *UND*	00000000 __register_frame_info
00000118 l       *ABS*	00000000 ZI_LENGTH
00000b5c g     F RO_DATA	00000038 event_queue
000001c8 g     F RO_DATA	00000000 sark_lock_get
000006b0  w    F RO_DATA	00000010 sark_pre_main
0000055c g     F RO_DATA	00000034 sark_shmsg_get
00000800 g       *ABS*	00000000 STACK_SIZE
00000302 g     F RO_DATA	00000000 sark_bx
00001168 g     F RO_DATA	00000098 txpkt_int_han
00000238 g     F RO_DATA	00000000 sark_msg_cpy
00000c78 g     F RO_DATA	0000003c event_alloc
00001828 g     F RO_DATA	00000068 event_register_pkt
000004ec g     F RO_DATA	0000001e sark_block_init
00001140 g     F RO_DATA	00000028 sark_fiq_han
0000053c g     F RO_DATA	00000020 sark_msg_free
00000e54 g     F RO_DATA	00000074 timer2_int
00000408 g     F RO_DATA	000000b0 c_main
000008ac g     F RO_DATA	00000174 sark_int
00001080 g     F RO_DATA	00000030 rxpkt_queue
000002cc g     F RO_DATA	00000000 sark_int_han
00000abc g     F RO_DATA	0000005c event_wait
00000898 g     F RO_DATA	00000012 sark_wait
000001b8 g     F RO_DATA	00000000 spin1_mode_restore
00000888 g     F RO_DATA	00000010 sark_cmd_fill
00001370 g     F RO_DATA	0000000c rtr_alloc
00001000 g     F RO_DATA	00000038 sig_queue
00000ec8 g     F RO_DATA	00000050 sark_vic_init
0000190c g     F RO_DATA	000000f4 __udivsi3
0000016c g     F RO_DATA	00000000 cpu_shutdown
000001b8 g     F RO_DATA	00000000 cpu_int_restore
00410000 g       *ABS*	00000000 STACK_TOP
00400118 g       ZI_DATA	00000000 HEAP_BASE
00001200 g     F RO_DATA	000000c8 sark_xalloc
00001ab4 g     O RO_DATA	00000014 queue_events
00000304 g     F RO_DATA	00000000 __gnu_thumb1_case_uqi
00001038 g     F RO_DATA	00000048 timer_queue
000003b0 g     F RO_DATA	00000058 timer_proc
00000590 g     F RO_DATA	00000024 sark_shmsg_free
00000d7c g     F RO_DATA	00000040 event_register_timer
0000012c g       RO_DATA	00000000 rt_error
000004dc g     F RO_DATA	00000010 sark_cpu_state
00400040 g     O ZI_DATA	00000004 core
000006c0  w    F RO_DATA	00000010 sark_post_main
00000000 g       RO_DATA	00000000 cpu_reset
0000029c g     F RO_DATA	00000000 sark_div10
00000108 g       RO_DATA	00000000 vic_error
00001130 g     F RO_DATA	00000010 timer2_int_han
00000dbc g     F RO_DATA	00000080 timer_schedule
00000f60 g     F RO_DATA	0000002c v2p_mask
00001a90 g     O RO_DATA	00000005 build_name
00000300  w    F RO_DATA	00000000 sark_config
00000b18 g     F RO_DATA	0000002c event_pause
00001a98 g     O RO_DATA	00000004 build_date
000001ec g     F RO_DATA	00000000 sark_lock_free
000012c8 g     F RO_DATA	00000018 sark_alloc
00000190 g     F RO_DATA	00000000 cpu_init_mode
00000248 g     F RO_DATA	00000000 sark_word_cpy
000010f0 g     F RO_DATA	00000040 user_queue
0000017c g     F RO_DATA	00000000 cpu_sleep
00001a20  w    F RO_DATA	00000004 __aeabi_ldiv0
00400044 g     O ZI_DATA	0000003c sark
000006d0 g     F RO_DATA	000000a8 sark_msg_send
000001c0 g     F RO_DATA	00000000 spin1_wfi
00000778 g     F RO_DATA	00000040 sark_cmd_ver
000001c0 g     F RO_DATA	00000000 cpu_wfi
00000b44 g     F RO_DATA	00000018 event_stop
000001a8 g     F RO_DATA	00000000 cpu_int_disable
00000c00 g     F RO_DATA	00000064 event_new
00000f18 g     F RO_DATA	00000048 sark_vic_set
000012e0 g     F RO_DATA	00000018 sark_heap_init
0000190c g     F RO_DATA	00000000 __aeabi_uidiv
00000a20 g     F RO_DATA	0000009c event_register_queue
00400080 g     O ZI_DATA	00000098 event
0000081e g     F RO_DATA	0000006a sark_cmd_write
000005b4  w    F RO_DATA	000000fc sark_init
000004bc  w    F RO_DATA	0000000c rte_handler
00000314 g     F RO_DATA	00000000 sark_aplx
00000e3c g     F RO_DATA	00000016 timer_schedule_proc
00000cb4 g     F RO_DATA	000000c8 event_start
00001574 g     F RO_DATA	000002b4 io_printf
00000214 g     F RO_DATA	00000000 sark_word_set
00000c64 g     F RO_DATA	00000014 event_queue_proc
000002fc g     F RO_DATA	00000000 null_int_han
000004b8  w    F RO_DATA	00000002 schedule_sysmode
000012f8 g     F RO_DATA	00000078 rtr_alloc_id
00000b94 g     F RO_DATA	0000006c event_run2
0000036c g     F RO_DATA	00000044 pkt_proc
00001890 g     F RO_DATA	0000007c pkt_tx_kd
00000200 g     F RO_DATA	00000000 sark_str_cpy
00001a00 g     F RO_DATA	00000020 __aeabi_uidivmod
00000f8c g     F RO_DATA	00000074 rtr_mc_set
000004c8 g     F RO_DATA	0000000c sark_core_id
000010b0 g     F RO_DATA	00000040 sdp_queue
00001a20  w    F RO_DATA	00000004 __aeabi_idiv0
00400000  w    O ZI_DATA	00000030 callback
000013bc g     F RO_DATA	000000f4 io_put_char
000001a8 g     F RO_DATA	00000000 spin1_int_disable
000007b8 g     F RO_DATA	00000066 sark_cmd_read
00001adc g       *ABS*	00000000 RO_LENGTH
000004d4 g     F RO_DATA	00000006 sark_app_id
0000050c g     F RO_DATA	00000030 sark_msg_get



Disassembly of section RO_DATA:

00000000 <cpu_reset>:
       0:	e59ff018 	ldr	pc, [pc, #24]	; 20 <reset_vec>

00000004 <undef>:
       4:	e59ff018 	ldr	pc, [pc, #24]	; 24 <undef_vec>
       8:	e59ff018 	ldr	pc, [pc, #24]	; 28 <svc_vec>
       c:	e59ff018 	ldr	pc, [pc, #24]	; 2c <pabt_vec>
      10:	e59ff018 	ldr	pc, [pc, #24]	; 30 <dabt_vec>
      14:	ebfffffa 	bl	4 <undef>
      18:	e51ffff0 	ldr	pc, [pc, #-4080]	; fffff030 <ROM_TOP+0x9ff7030>
      1c:	e59ff018 	ldr	pc, [pc, #24]	; 3c <fiq_vec>

00000020 <reset_vec>:
      20:	00000078 	.word	0x00000078

00000024 <undef_vec>:
      24:	000000d8 	.word	0x000000d8

00000028 <svc_vec>:
      28:	000000e0 	.word	0x000000e0

0000002c <pabt_vec>:
      2c:	000000e8 	.word	0x000000e8

00000030 <dabt_vec>:
      30:	000000f0 	.word	0x000000f0

00000034 <aplx_proc>:
      34:	00000315 	.word	0x00000315

00000038 <irq_vec>:
      38:	000000f8 	.word	0x000000f8

0000003c <fiq_vec>:
      3c:	00000100 	.word	0x00000100

00000040 <svc_stack>:
      40:	0060      	.short	0x0060

00000042 <irq_stack>:
      42:	0040      	.short	0x0040

00000044 <fiq_stack>:
      44:	0040      	.short	0x0040

00000046 <stack_size>:
      46:	0800      	.short	0x0800

00000048 <code_top>:
      48:	00001adc 	.word	0x00001adc

0000004c <heap_base>:
      4c:	00400118 	.word	0x00400118

00000050 <stack_top>:
      50:	00410000 	.word	0x00410000

00000054 <stack_fill>:
      54:	deaddead 	.word	0xdeaddead

00000058 <num_msgs>:
      58:	04          	.byte	0x04

00000059 <sark_slot>:
      59:	0f          	.byte	0x0f

0000005a <num_events>:
      5a:	10          	.byte	0x10

0000005b <api>:
	...

0000005c <app_id>:
	...

0000005d <app_flags>:
	...

0000005e <__PAD>:
	...

00000060 <event_vec>:
	...

00000078 <reset_entry>:
      78:	e24f1060 	sub	r1, pc, #96	; 0x60
      7c:	e1c103bc 	strh	r0, [r1, #60]	; 0x3c
      80:	e28f0048 	add	r0, pc, #72	; 0x48
      84:	e5810000 	str	r0, [r1]
      88:	e59f00f4 	ldr	r0, [pc, #244]	; 184 <DMA_CRCT+0x4>
      8c:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
      90:	e321f0d3 	msr	CPSR_c, #211	; 0xd3
      94:	e3a0d902 	mov	sp, #32768	; 0x8000
      98:	fa000098 	blx	300 <sark_config>
      9c:	e51fd054 	ldr	sp, [pc, #-84]	; 50 <stack_top>
      a0:	e15f26b2 	ldrh	r2, [pc, #-98]	; 46 <stack_size>
      a4:	e51f1058 	ldr	r1, [pc, #-88]	; 54 <stack_fill>
      a8:	e04d0002 	sub	r0, sp, r2
      ac:	eb000058 	bl	214 <sark_word_set>
      b0:	e1a0000d 	mov	r0, sp
      b4:	fa00013e 	blx	5b4 <sark_init>
      b8:	e121f000 	msr	CPSR_c, r0
      bc:	fa0001f5 	blx	898 <sark_wait>
      c0:	fa00017a 	blx	6b0 <sark_pre_main>
      c4:	fa0000cf 	blx	408 <c_main>
      c8:	fa00017c 	blx	6c0 <sark_post_main>
      cc:	eb00002a 	bl	17c <cpu_sleep>

000000d0 <reset_error>:
      d0:	e3a00001 	mov	r0, #1
      d4:	ea000014 	b	12c <rt_error>

000000d8 <undef_error>:
      d8:	e3a0b002 	mov	fp, #2
      dc:	ea00000c 	b	114 <exc_error>

000000e0 <svc_error>:
      e0:	e3a0b003 	mov	fp, #3
      e4:	ea00000a 	b	114 <exc_error>

000000e8 <pabt_error>:
      e8:	e3a0b004 	mov	fp, #4
      ec:	ea000008 	b	114 <exc_error>

000000f0 <dabt_error>:
      f0:	e3a0b005 	mov	fp, #5
      f4:	ea000006 	b	114 <exc_error>

000000f8 <irq_error>:
      f8:	e3a0b006 	mov	fp, #6
      fc:	ea000004 	b	114 <exc_error>

00000100 <fiq_error>:
     100:	e3a0b007 	mov	fp, #7
     104:	ea000002 	b	114 <exc_error>

00000108 <vic_error>:
     108:	e3a0b008 	mov	fp, #8
     10c:	e3a0042f 	mov	r0, #788529152	; 0x2f000000
     110:	e5900030 	ldr	r0, [r0, #48]	; 0x30

00000114 <exc_error>:
     114:	e1a0a00e 	mov	sl, lr
     118:	e14f8000 	mrs	r8, SPSR
     11c:	e38890c0 	orr	r9, r8, #192	; 0xc0
     120:	e3c99020 	bic	r9, r9, #32
     124:	e12ff009 	msr	CPSR_fsxc, r9
     128:	ea000002 	b	138 <cc_error>

0000012c <rt_error>:
     12c:	e1a0b000 	mov	fp, r0
     130:	e10f8000 	mrs	r8, CPSR
     134:	e1a0a00e 	mov	sl, lr

00000138 <cc_error>:
     138:	e59fc048 	ldr	ip, [pc, #72]	; 188 <DMA_CRCT+0x8>
     13c:	e59cc000 	ldr	ip, [ip]
     140:	e3a09080 	mov	r9, #128	; 0x80
     144:	e59fe040 	ldr	lr, [pc, #64]	; 18c <DMA_CRCT+0xc>
     148:	e02ee99c 	mla	lr, ip, r9, lr
     14c:	e1a0900d 	mov	r9, sp
     150:	e88e07ff 	stm	lr, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl}
     154:	e5ceb02c 	strb	fp, [lr, #44]	; 0x2c
     158:	e3a08002 	mov	r8, #2
     15c:	e5ce802e 	strb	r8, [lr, #46]	; 0x2e
     160:	e1a0000b 	mov	r0, fp
     164:	e321f0d3 	msr	CPSR_c, #211	; 0xd3
     168:	fa0000d3 	blx	4bc <rte_handler>

0000016c <cpu_shutdown>:
     16c:	e321f0d3 	msr	CPSR_c, #211	; 0xd3
     170:	e3a0042f 	mov	r0, #788529152	; 0x2f000000
     174:	e3e01000 	mvn	r1, #0
     178:	e5801014 	str	r1, [r0, #20]

0000017c <cpu_sleep>:
     17c:	ee070f90 	mcr	15, 0, r0, cr7, cr0, {4}
     180:	eafffffd 	b	17c <cpu_sleep>
     184:	00001f7e 	.word	0x00001f7e
     188:	00400044 	.word	0x00400044
     18c:	e5007000 	.word	0xe5007000

00000190 <cpu_init_mode>:
     190:	e10f3000 	mrs	r3, CPSR
     194:	e121f001 	msr	CPSR_c, r1
     198:	e1a0d000 	mov	sp, r0
     19c:	e12ff003 	msr	CPSR_fsxc, r3
     1a0:	e0400102 	sub	r0, r0, r2, lsl #2
     1a4:	e12fff1e 	bx	lr

000001a8 <cpu_int_disable>:
     1a8:	e10f0000 	mrs	r0, CPSR
     1ac:	e38010c0 	orr	r1, r0, #192	; 0xc0
     1b0:	e121f001 	msr	CPSR_c, r1
     1b4:	e12fff1e 	bx	lr

000001b8 <cpu_int_restore>:
     1b8:	e12ff000 	msr	CPSR_fsxc, r0
     1bc:	e12fff1e 	bx	lr

000001c0 <cpu_wfi>:
     1c0:	ee070f90 	mcr	15, 0, r0, cr7, cr0, {4}
     1c4:	e12fff1e 	bx	lr

000001c8 <sark_lock_get>:
     1c8:	e3a0c4e2 	mov	ip, #-503316480	; 0xe2000000
     1cc:	e08cc100 	add	ip, ip, r0, lsl #2
     1d0:	e10f0000 	mrs	r0, CPSR
     1d4:	e38010c0 	orr	r1, r0, #192	; 0xc0
     1d8:	e121f001 	msr	CPSR_c, r1

000001dc <lg1>:
     1dc:	e59c1100 	ldr	r1, [ip, #256]	; 0x100
     1e0:	e3110102 	tst	r1, #-2147483648	; 0x80000000
     1e4:	1afffffc 	bne	1dc <lg1>
     1e8:	e12fff1e 	bx	lr

000001ec <sark_lock_free>:
     1ec:	e3a0c4e2 	mov	ip, #-503316480	; 0xe2000000
     1f0:	e08c1101 	add	r1, ip, r1, lsl #2
     1f4:	e5911180 	ldr	r1, [r1, #384]	; 0x180
     1f8:	e121f000 	msr	CPSR_c, r0
     1fc:	e12fff1e 	bx	lr

00000200 <sark_str_cpy>:
     200:	e4d12001 	ldrb	r2, [r1], #1
     204:	e3520000 	cmp	r2, #0
     208:	e4c02001 	strb	r2, [r0], #1
     20c:	1afffffb 	bne	200 <sark_str_cpy>
     210:	e12fff1e 	bx	lr

00000214 <sark_word_set>:
     214:	e1a03001 	mov	r3, r1

00000218 <ws1>:
     218:	e2522010 	subs	r2, r2, #16
     21c:	28a0000a 	stmiacs	r0!, {r1, r3}
     220:	28a0000a 	stmiacs	r0!, {r1, r3}
     224:	2afffffb 	bcs	218 <ws1>
     228:	e1b02e82 	lsls	r2, r2, #29
     22c:	28a0000a 	stmiacs	r0!, {r1, r3}
     230:	48a00002 	stmiami	r0!, {r1}
     234:	e12fff1e 	bx	lr

00000238 <sark_msg_cpy>:
     238:	e2800004 	add	r0, r0, #4
     23c:	e2811004 	add	r1, r1, #4
     240:	e1d120b0 	ldrh	r2, [r1]
     244:	e2822004 	add	r2, r2, #4

00000248 <sark_word_cpy>:
     248:	e3120003 	tst	r2, #3
     24c:	13c22003 	bicne	r2, r2, #3
     250:	12822004 	addne	r2, r2, #4
     254:	e92d4010 	push	{r4, lr}
     258:	e2522020 	subs	r2, r2, #32
     25c:	3a000005 	bcc	278 <wc2>

00000260 <wc1>:
     260:	e8b15018 	ldm	r1!, {r3, r4, ip, lr}
     264:	e8a05018 	stmia	r0!, {r3, r4, ip, lr}
     268:	e8b15018 	ldm	r1!, {r3, r4, ip, lr}
     26c:	e8a05018 	stmia	r0!, {r3, r4, ip, lr}
     270:	e2522020 	subs	r2, r2, #32
     274:	2afffff9 	bcs	260 <wc1>

00000278 <wc2>:
     278:	e1b0ce02 	lsls	ip, r2, #28
     27c:	28b15018 	ldmcs	r1!, {r3, r4, ip, lr}
     280:	28a05018 	stmiacs	r0!, {r3, r4, ip, lr}
     284:	48b10018 	ldmmi	r1!, {r3, r4}
     288:	48a00018 	stmiami	r0!, {r3, r4}
     28c:	e1b0cf02 	lsls	ip, r2, #30
     290:	24913004 	ldrcs	r3, [r1], #4
     294:	24803004 	strcs	r3, [r0], #4
     298:	e8bd8010 	pop	{r4, pc}

0000029c <sark_div10>:
     29c:	e241200a 	sub	r2, r1, #10
     2a0:	e0411121 	sub	r1, r1, r1, lsr #2
     2a4:	e0811221 	add	r1, r1, r1, lsr #4
     2a8:	e0811421 	add	r1, r1, r1, lsr #8
     2ac:	e0811821 	add	r1, r1, r1, lsr #16
     2b0:	e1a011a1 	lsr	r1, r1, #3
     2b4:	e0813101 	add	r3, r1, r1, lsl #2
     2b8:	e0522083 	subs	r2, r2, r3, lsl #1
     2bc:	52811001 	addpl	r1, r1, #1
     2c0:	4282200a 	addmi	r2, r2, #10
     2c4:	e8800006 	stm	r0, {r1, r2}
     2c8:	e12fff1e 	bx	lr

000002cc <sark_int_han>:
     2cc:	e92d500f 	push	{r0, r1, r2, r3, ip, lr}
     2d0:	e24e0004 	sub	r0, lr, #4
     2d4:	e14fc000 	mrs	ip, SPSR
     2d8:	e321f01f 	msr	CPSR_c, #31
     2dc:	e92d5000 	push	{ip, lr}
     2e0:	fa000171 	blx	8ac <sark_int>
     2e4:	e8bd5000 	pop	{ip, lr}
     2e8:	e321f092 	msr	CPSR_c, #146	; 0x92
     2ec:	e16ff00c 	msr	SPSR_fsxc, ip
     2f0:	e3a0042f 	mov	r0, #788529152	; 0x2f000000
     2f4:	e5800030 	str	r0, [r0, #48]	; 0x30
     2f8:	e8bd500f 	pop	{r0, r1, r2, r3, ip, lr}

000002fc <null_int_han>:
     2fc:	e25ef004 	subs	pc, lr, #4

00000300 <sark_config>:
     300:	4770      	bx	lr

00000302 <sark_bx>:
     302:	4700      	bx	r0

00000304 <__gnu_thumb1_case_uqi>:
     304:	468c      	mov	ip, r1
     306:	4671      	mov	r1, lr
     308:	3901      	subs	r1, #1
     30a:	5c09      	ldrb	r1, [r1, r0]
     30c:	0049      	lsls	r1, r1, #1
     30e:	448e      	add	lr, r1
     310:	4661      	mov	r1, ip
     312:	4770      	bx	lr

00000314 <sark_aplx>:
     314:	b5f2      	push	{r1, r4, r5, r6, r7, lr}
     316:	4905      	ldr	r1, [pc, #20]	; (32c <aplx_buffer>)
     318:	a605      	add	r6, pc, #20	; (adr r6, 330 <aplx_loader>)
     31a:	2740      	movs	r7, #64	; 0x40

0000031c <aplx_l0>:
     31c:	ce3c      	ldmia	r6!, {r2, r3, r4, r5}
     31e:	c13c      	stmia	r1!, {r2, r3, r4, r5}
     320:	3f10      	subs	r7, #16
     322:	d1fb      	bne.n	31c <aplx_l0>
     324:	1c04      	adds	r4, r0, #0
     326:	393f      	subs	r1, #63	; 0x3f
     328:	4708      	bx	r1
	...

0000032c <aplx_buffer>:
     32c:	00007fc0 	.word	0x00007fc0

00000330 <aplx_loader>:
     330:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
     332:	2801      	cmp	r0, #1
     334:	d008      	beq.n	348 <aplx_copy>
     336:	2802      	cmp	r0, #2
     338:	d004      	beq.n	344 <aplx_rcopy>
     33a:	2803      	cmp	r0, #3
     33c:	d00b      	beq.n	356 <aplx_fill>
     33e:	2804      	cmp	r0, #4
     340:	d011      	beq.n	366 <aplx_exec>
     342:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

00000344 <aplx_rcopy>:
     344:	1912      	adds	r2, r2, r4
     346:	3a10      	subs	r2, #16

00000348 <aplx_copy>:
     348:	cae1      	ldmia	r2!, {r0, r5, r6, r7}
     34a:	c1e1      	stmia	r1!, {r0, r5, r6, r7}
     34c:	cae1      	ldmia	r2!, {r0, r5, r6, r7}
     34e:	c1e1      	stmia	r1!, {r0, r5, r6, r7}
     350:	3b20      	subs	r3, #32
     352:	d8f9      	bhi.n	348 <aplx_copy>
     354:	e7ec      	b.n	330 <aplx_loader>

00000356 <aplx_fill>:
     356:	1c1d      	adds	r5, r3, #0
     358:	1c1e      	adds	r6, r3, #0
     35a:	1c1f      	adds	r7, r3, #0

0000035c <aplx_l1>:
     35c:	c1e8      	stmia	r1!, {r3, r5, r6, r7}
     35e:	c1e8      	stmia	r1!, {r3, r5, r6, r7}
     360:	3a20      	subs	r2, #32
     362:	d8fb      	bhi.n	35c <aplx_l1>
     364:	e7e4      	b.n	330 <aplx_loader>

00000366 <aplx_exec>:
     366:	9800      	ldr	r0, [sp, #0]
     368:	4788      	blx	r1
     36a:	e7e1      	b.n	330 <aplx_loader>

0000036c <pkt_proc>:
     36c:	4b0b      	ldr	r3, [pc, #44]	; (39c <pkt_proc+0x30>)
     36e:	b510      	push	{r4, lr}
     370:	69db      	ldr	r3, [r3, #28]
     372:	1c0c      	adds	r4, r1, #0
     374:	6f5a      	ldr	r2, [r3, #116]	; 0x74
     376:	3201      	adds	r2, #1
     378:	675a      	str	r2, [r3, #116]	; 0x74
     37a:	040a      	lsls	r2, r1, #16
     37c:	d501      	bpl.n	382 <pkt_proc+0x16>
     37e:	4a08      	ldr	r2, [pc, #32]	; (3a0 <pkt_proc+0x34>)
     380:	e000      	b.n	384 <pkt_proc+0x18>
     382:	4a08      	ldr	r2, [pc, #32]	; (3a4 <pkt_proc+0x38>)
     384:	1c23      	adds	r3, r4, #0
     386:	2000      	movs	r0, #0
     388:	4907      	ldr	r1, [pc, #28]	; (3a8 <pkt_proc+0x3c>)
     38a:	f001 f8f3 	bl	1574 <io_printf>
     38e:	1c21      	adds	r1, r4, #0
     390:	2200      	movs	r2, #0
     392:	2310      	movs	r3, #16
     394:	4805      	ldr	r0, [pc, #20]	; (3ac <pkt_proc+0x40>)
     396:	f000 fd51 	bl	e3c <timer_schedule_proc>
     39a:	bd10      	pop	{r4, pc}
     39c:	00400044 	.word	0x00400044
     3a0:	00001a24 	.word	0x00001a24
     3a4:	00001a29 	.word	0x00001a29
     3a8:	00001a2d 	.word	0x00001a2d
     3ac:	000003b1 	.word	0x000003b1

000003b0 <timer_proc>:
     3b0:	4b10      	ldr	r3, [pc, #64]	; (3f4 <timer_proc+0x44>)
     3b2:	21fa      	movs	r1, #250	; 0xfa
     3b4:	69db      	ldr	r3, [r3, #28]
     3b6:	b510      	push	{r4, lr}
     3b8:	6f1a      	ldr	r2, [r3, #112]	; 0x70
     3ba:	0089      	lsls	r1, r1, #2
     3bc:	3201      	adds	r2, #1
     3be:	671a      	str	r2, [r3, #112]	; 0x70
     3c0:	1c04      	adds	r4, r0, #0
     3c2:	f001 eb1e 	blx	1a00 <__aeabi_uidivmod>
     3c6:	2900      	cmp	r1, #0
     3c8:	d006      	beq.n	3d8 <timer_proc+0x28>
     3ca:	4b0b      	ldr	r3, [pc, #44]	; (3f8 <timer_proc+0x48>)
     3cc:	2002      	movs	r0, #2
     3ce:	8b1b      	ldrh	r3, [r3, #24]
     3d0:	490a      	ldr	r1, [pc, #40]	; (3fc <timer_proc+0x4c>)
     3d2:	1c22      	adds	r2, r4, #0
     3d4:	f001 f8ce 	bl	1574 <io_printf>
     3d8:	4b09      	ldr	r3, [pc, #36]	; (400 <MC_TABLE_SIZE>)
     3da:	429c      	cmp	r4, r3
     3dc:	d903      	bls.n	3e6 <timer_proc+0x36>
     3de:	2000      	movs	r0, #0
     3e0:	f000 fbb0 	bl	b44 <event_stop>
     3e4:	e004      	b.n	3f0 <timer_proc+0x40>
     3e6:	4b07      	ldr	r3, [pc, #28]	; (404 <MC_TABLE_SIZE+0x4>)
     3e8:	1c61      	adds	r1, r4, #1
     3ea:	6818      	ldr	r0, [r3, #0]
     3ec:	f001 fa50 	bl	1890 <pkt_tx_kd>
     3f0:	bd10      	pop	{r4, pc}
     3f2:	46c0      	nop			; (mov r8, r8)
     3f4:	00400044 	.word	0x00400044
     3f8:	e5007f00 	.word	0xe5007f00
     3fc:	00001a42 	.word	0x00001a42
     400:	00138800 	.word	0x00138800
     404:	00400040 	.word	0x00400040

00000408 <c_main>:
     408:	b537      	push	{r0, r1, r2, r4, r5, lr}
     40a:	f000 f85d 	bl	4c8 <sark_core_id>
     40e:	4c24      	ldr	r4, [pc, #144]	; (4a0 <c_main+0x98>)
     410:	6020      	str	r0, [r4, #0]
     412:	f000 f85f 	bl	4d4 <sark_app_id>
     416:	4d23      	ldr	r5, [pc, #140]	; (4a4 <c_main+0x9c>)
     418:	4923      	ldr	r1, [pc, #140]	; (4a8 <c_main+0xa0>)
     41a:	69ea      	ldr	r2, [r5, #28]
     41c:	3248      	adds	r2, #72	; 0x48
     41e:	9000      	str	r0, [sp, #0]
     420:	2002      	movs	r0, #2
     422:	6823      	ldr	r3, [r4, #0]
     424:	f001 f8a6 	bl	1574 <io_printf>
     428:	69eb      	ldr	r3, [r5, #28]
     42a:	2200      	movs	r2, #0
     42c:	675a      	str	r2, [r3, #116]	; 0x74
     42e:	671a      	str	r2, [r3, #112]	; 0x70
     430:	2001      	movs	r0, #1
     432:	f000 ff9d 	bl	1370 <rtr_alloc>
     436:	1e05      	subs	r5, r0, #0
     438:	d102      	bne.n	440 <c_main+0x38>
     43a:	2009      	movs	r0, #9
     43c:	f7ff fe76 	bl	12c <rt_error>
     440:	6821      	ldr	r1, [r4, #0]
     442:	2301      	movs	r3, #1
     444:	2910      	cmp	r1, #16
     446:	d001      	beq.n	44c <c_main+0x44>
     448:	18ca      	adds	r2, r1, r3
     44a:	e000      	b.n	44e <c_main+0x46>
     44c:	1c1a      	adds	r2, r3, #0
     44e:	3206      	adds	r2, #6
     450:	4093      	lsls	r3, r2
     452:	2201      	movs	r2, #1
     454:	4252      	negs	r2, r2
     456:	1c28      	adds	r0, r5, #0
     458:	f000 fd98 	bl	f8c <rtr_mc_set>
     45c:	2200      	movs	r2, #0
     45e:	1c13      	adds	r3, r2, #0
     460:	4812      	ldr	r0, [pc, #72]	; (4ac <c_main+0xa4>)
     462:	2101      	movs	r1, #1
     464:	f000 fadc 	bl	a20 <event_register_queue>
     468:	2010      	movs	r0, #16
     46a:	2101      	movs	r1, #1
     46c:	f001 f9dc 	bl	1828 <event_register_pkt>
     470:	2002      	movs	r0, #2
     472:	f000 fc83 	bl	d7c <event_register_timer>
     476:	4b0a      	ldr	r3, [pc, #40]	; (4a0 <c_main+0x98>)
     478:	681b      	ldr	r3, [r3, #0]
     47a:	2b01      	cmp	r3, #1
     47c:	d105      	bne.n	48a <c_main+0x82>
     47e:	2100      	movs	r1, #0
     480:	480b      	ldr	r0, [pc, #44]	; (4b0 <c_main+0xa8>)
     482:	1c0a      	adds	r2, r1, #0
     484:	1c0b      	adds	r3, r1, #0
     486:	f000 fbed 	bl	c64 <event_queue_proc>
     48a:	2000      	movs	r0, #0
     48c:	1c01      	adds	r1, r0, #0
     48e:	2201      	movs	r2, #1
     490:	f000 fc10 	bl	cb4 <event_start>
     494:	4907      	ldr	r1, [pc, #28]	; (4b4 <c_main+0xac>)
     496:	1c02      	adds	r2, r0, #0
     498:	2002      	movs	r0, #2
     49a:	f001 f86b 	bl	1574 <io_printf>
     49e:	bd37      	pop	{r0, r1, r2, r4, r5, pc}
     4a0:	00400040 	.word	0x00400040
     4a4:	00400044 	.word	0x00400044
     4a8:	00001a59 	.word	0x00001a59
     4ac:	0000036d 	.word	0x0000036d
     4b0:	000003b1 	.word	0x000003b1
     4b4:	00001a7b 	.word	0x00001a7b

000004b8 <schedule_sysmode>:
     4b8:	4770      	bx	lr
	...

000004bc <rte_handler>:
     4bc:	4b01      	ldr	r3, [pc, #4]	; (4c4 <rte_handler+0x8>)
     4be:	2208      	movs	r2, #8
     4c0:	701a      	strb	r2, [r3, #0]
     4c2:	4770      	bx	lr
     4c4:	e5007f2b 	.word	0xe5007f2b

000004c8 <sark_core_id>:
     4c8:	4b01      	ldr	r3, [pc, #4]	; (4d0 <sark_core_id+0x8>)
     4ca:	6818      	ldr	r0, [r3, #0]
     4cc:	4770      	bx	lr
     4ce:	46c0      	nop			; (mov r8, r8)
     4d0:	00400044 	.word	0x00400044

000004d4 <sark_app_id>:
     4d4:	235c      	movs	r3, #92	; 0x5c
     4d6:	7818      	ldrb	r0, [r3, #0]
     4d8:	4770      	bx	lr
	...

000004dc <sark_cpu_state>:
     4dc:	4b02      	ldr	r3, [pc, #8]	; (4e8 <sark_cpu_state+0xc>)
     4de:	69db      	ldr	r3, [r3, #28]
     4e0:	332e      	adds	r3, #46	; 0x2e
     4e2:	7018      	strb	r0, [r3, #0]
     4e4:	4770      	bx	lr
     4e6:	46c0      	nop			; (mov r8, r8)
     4e8:	00400044 	.word	0x00400044

000004ec <sark_block_init>:
     4ec:	b530      	push	{r4, r5, lr}
     4ee:	1c0b      	adds	r3, r1, #0
     4f0:	1c04      	adds	r4, r0, #0
     4f2:	e002      	b.n	4fa <sark_block_init+0xe>
     4f4:	18a5      	adds	r5, r4, r2
     4f6:	6025      	str	r5, [r4, #0]
     4f8:	1c2c      	adds	r4, r5, #0
     4fa:	3b01      	subs	r3, #1
     4fc:	2b00      	cmp	r3, #0
     4fe:	d1f9      	bne.n	4f4 <sark_block_init+0x8>
     500:	3901      	subs	r1, #1
     502:	434a      	muls	r2, r1
     504:	1880      	adds	r0, r0, r2
     506:	6003      	str	r3, [r0, #0]
     508:	bd30      	pop	{r4, r5, pc}
	...

0000050c <sark_msg_get>:
     50c:	b510      	push	{r4, lr}
     50e:	f7ff ee4c 	blx	1a8 <cpu_int_disable>
     512:	4b09      	ldr	r3, [pc, #36]	; (538 <sark_msg_get+0x2c>)
     514:	6a1c      	ldr	r4, [r3, #32]
     516:	2c00      	cmp	r4, #0
     518:	d00a      	beq.n	530 <sark_msg_get+0x24>
     51a:	6822      	ldr	r2, [r4, #0]
     51c:	621a      	str	r2, [r3, #32]
     51e:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
     520:	8cd9      	ldrh	r1, [r3, #38]	; 0x26
     522:	3201      	adds	r2, #1
     524:	0412      	lsls	r2, r2, #16
     526:	0c12      	lsrs	r2, r2, #16
     528:	849a      	strh	r2, [r3, #36]	; 0x24
     52a:	4291      	cmp	r1, r2
     52c:	d200      	bcs.n	530 <sark_msg_get+0x24>
     52e:	84da      	strh	r2, [r3, #38]	; 0x26
     530:	f7ff ee42 	blx	1b8 <cpu_int_restore>
     534:	1c20      	adds	r0, r4, #0
     536:	bd10      	pop	{r4, pc}
     538:	00400044 	.word	0x00400044

0000053c <sark_msg_free>:
     53c:	b510      	push	{r4, lr}
     53e:	1c04      	adds	r4, r0, #0
     540:	f7ff ee32 	blx	1a8 <cpu_int_disable>
     544:	4b04      	ldr	r3, [pc, #16]	; (558 <sark_msg_free+0x1c>)
     546:	6a1a      	ldr	r2, [r3, #32]
     548:	6022      	str	r2, [r4, #0]
     54a:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
     54c:	621c      	str	r4, [r3, #32]
     54e:	3a01      	subs	r2, #1
     550:	849a      	strh	r2, [r3, #36]	; 0x24
     552:	f7ff ee32 	blx	1b8 <cpu_int_restore>
     556:	bd10      	pop	{r4, pc}
     558:	00400044 	.word	0x00400044

0000055c <sark_shmsg_get>:
     55c:	b510      	push	{r4, lr}
     55e:	2000      	movs	r0, #0
     560:	f7ff ee32 	blx	1c8 <sark_lock_get>
     564:	4b09      	ldr	r3, [pc, #36]	; (58c <sark_shmsg_get+0x30>)
     566:	681c      	ldr	r4, [r3, #0]
     568:	2c00      	cmp	r4, #0
     56a:	d00a      	beq.n	582 <sark_shmsg_get+0x26>
     56c:	6822      	ldr	r2, [r4, #0]
     56e:	601a      	str	r2, [r3, #0]
     570:	889a      	ldrh	r2, [r3, #4]
     572:	88d9      	ldrh	r1, [r3, #6]
     574:	3201      	adds	r2, #1
     576:	0412      	lsls	r2, r2, #16
     578:	0c12      	lsrs	r2, r2, #16
     57a:	809a      	strh	r2, [r3, #4]
     57c:	4291      	cmp	r1, r2
     57e:	d200      	bcs.n	582 <sark_shmsg_get+0x26>
     580:	80da      	strh	r2, [r3, #6]
     582:	2100      	movs	r1, #0
     584:	f7ff ee32 	blx	1ec <sark_lock_free>
     588:	1c20      	adds	r0, r4, #0
     58a:	bd10      	pop	{r4, pc}
     58c:	e5007f68 	.word	0xe5007f68

00000590 <sark_shmsg_free>:
     590:	b510      	push	{r4, lr}
     592:	1c04      	adds	r4, r0, #0
     594:	2000      	movs	r0, #0
     596:	f7ff ee18 	blx	1c8 <sark_lock_get>
     59a:	4b05      	ldr	r3, [pc, #20]	; (5b0 <SPARE_SIZE+0x10>)
     59c:	2100      	movs	r1, #0
     59e:	681a      	ldr	r2, [r3, #0]
     5a0:	6022      	str	r2, [r4, #0]
     5a2:	889a      	ldrh	r2, [r3, #4]
     5a4:	601c      	str	r4, [r3, #0]
     5a6:	3a01      	subs	r2, #1
     5a8:	809a      	strh	r2, [r3, #4]
     5aa:	f7ff ee20 	blx	1ec <sark_lock_free>
     5ae:	bd10      	pop	{r4, pc}
     5b0:	e5007f68 	.word	0xe5007f68

000005b4 <sark_init>:
     5b4:	b570      	push	{r4, r5, r6, lr}
     5b6:	2520      	movs	r5, #32
     5b8:	1c04      	adds	r4, r0, #0
     5ba:	8c28      	ldrh	r0, [r5, #32]
     5bc:	8c6a      	ldrh	r2, [r5, #34]	; 0x22
     5be:	0080      	lsls	r0, r0, #2
     5c0:	1a20      	subs	r0, r4, r0
     5c2:	21d2      	movs	r1, #210	; 0xd2
     5c4:	f7ff ede4 	blx	190 <cpu_init_mode>
     5c8:	8caa      	ldrh	r2, [r5, #36]	; 0x24
     5ca:	21d1      	movs	r1, #209	; 0xd1
     5cc:	f7ff ede0 	blx	190 <cpu_init_mode>
     5d0:	2200      	movs	r2, #0
     5d2:	21df      	movs	r1, #223	; 0xdf
     5d4:	f7ff eddc 	blx	190 <cpu_init_mode>
     5d8:	8ce9      	ldrh	r1, [r5, #38]	; 0x26
     5da:	2658      	movs	r6, #88	; 0x58
     5dc:	0889      	lsrs	r1, r1, #2
     5de:	0089      	lsls	r1, r1, #2
     5e0:	1a61      	subs	r1, r4, r1
     5e2:	4c2a      	ldr	r4, [pc, #168]	; (68c <ETH_TX_SIZE+0x8c>)
     5e4:	6121      	str	r1, [r4, #16]
     5e6:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
     5e8:	6160      	str	r0, [r4, #20]
     5ea:	f000 fe79 	bl	12e0 <sark_heap_init>
     5ee:	4b28      	ldr	r3, [pc, #160]	; (690 <ETH_TX_SIZE+0x90>)
     5f0:	4a28      	ldr	r2, [pc, #160]	; (694 <ETH_TX_SIZE+0x94>)
     5f2:	681b      	ldr	r3, [r3, #0]
     5f4:	4d28      	ldr	r5, [pc, #160]	; (698 <ETH_TX_SIZE+0x98>)
     5f6:	0e1b      	lsrs	r3, r3, #24
     5f8:	6063      	str	r3, [r4, #4]
     5fa:	189b      	adds	r3, r3, r2
     5fc:	2192      	movs	r1, #146	; 0x92
     5fe:	0049      	lsls	r1, r1, #1
     600:	61a0      	str	r0, [r4, #24]
     602:	791b      	ldrb	r3, [r3, #4]
     604:	6023      	str	r3, [r4, #0]
     606:	8cab      	ldrh	r3, [r5, #36]	; 0x24
     608:	8623      	strh	r3, [r4, #48]	; 0x30
     60a:	4b24      	ldr	r3, [pc, #144]	; (69c <ETH_TX_SIZE+0x9c>)
     60c:	60a3      	str	r3, [r4, #8]
     60e:	7830      	ldrb	r0, [r6, #0]
     610:	f000 fe5a 	bl	12c8 <sark_alloc>
     614:	2292      	movs	r2, #146	; 0x92
     616:	0052      	lsls	r2, r2, #1
     618:	6220      	str	r0, [r4, #32]
     61a:	7831      	ldrb	r1, [r6, #0]
     61c:	f7ff ff66 	bl	4ec <sark_block_init>
     620:	6823      	ldr	r3, [r4, #0]
     622:	2b11      	cmp	r3, #17
     624:	d81d      	bhi.n	662 <ETH_TX_SIZE+0x62>
     626:	4a1e      	ldr	r2, [pc, #120]	; (6a0 <ETH_TX_SIZE+0xa0>)
     628:	01d8      	lsls	r0, r3, #7
     62a:	1880      	adds	r0, r0, r2
     62c:	6daa      	ldr	r2, [r5, #88]	; 0x58
     62e:	61e0      	str	r0, [r4, #28]
     630:	4353      	muls	r3, r2
     632:	6d6a      	ldr	r2, [r5, #84]	; 0x54
     634:	009b      	lsls	r3, r3, #2
     636:	18d3      	adds	r3, r2, r3
     638:	2100      	movs	r1, #0
     63a:	2270      	movs	r2, #112	; 0x70
     63c:	6363      	str	r3, [r4, #52]	; 0x34
     63e:	f7ff edea 	blx	214 <sark_word_set>
     642:	69e0      	ldr	r0, [r4, #28]
     644:	2205      	movs	r2, #5
     646:	1c03      	adds	r3, r0, #0
     648:	332e      	adds	r3, #46	; 0x2e
     64a:	701a      	strb	r2, [r3, #0]
     64c:	235c      	movs	r3, #92	; 0x5c
     64e:	781a      	ldrb	r2, [r3, #0]
     650:	1c03      	adds	r3, r0, #0
     652:	332f      	adds	r3, #47	; 0x2f
     654:	701a      	strb	r2, [r3, #0]
     656:	69ed      	ldr	r5, [r5, #28]
     658:	6445      	str	r5, [r0, #68]	; 0x44
     65a:	4912      	ldr	r1, [pc, #72]	; (6a4 <ETH_TX_SIZE+0xa4>)
     65c:	3048      	adds	r0, #72	; 0x48
     65e:	f7ff edd0 	blx	200 <sark_str_cpy>
     662:	f000 fc31 	bl	ec8 <sark_vic_init>
     666:	2359      	movs	r3, #89	; 0x59
     668:	7818      	ldrb	r0, [r3, #0]
     66a:	2112      	movs	r1, #18
     66c:	2201      	movs	r2, #1
     66e:	4b0e      	ldr	r3, [pc, #56]	; (6a8 <ETH_TX_SIZE+0xa8>)
     670:	f000 fc52 	bl	f18 <sark_vic_set>
     674:	2106      	movs	r1, #6
     676:	2201      	movs	r2, #1
     678:	2010      	movs	r0, #16
     67a:	4b0c      	ldr	r3, [pc, #48]	; (6ac <ETH_TX_SIZE+0xac>)
     67c:	f000 fc4c 	bl	f18 <sark_vic_set>
     680:	235a      	movs	r3, #90	; 0x5a
     682:	7818      	ldrb	r0, [r3, #0]
     684:	f000 faf8 	bl	c78 <event_alloc>
     688:	201f      	movs	r0, #31
     68a:	bd70      	pop	{r4, r5, r6, pc}
     68c:	00400044 	.word	0x00400044
     690:	40000014 	.word	0x40000014
     694:	e5007f90 	.word	0xe5007f90
     698:	e5007f00 	.word	0xe5007f00
     69c:	deaddead 	.word	0xdeaddead
     6a0:	e5007000 	.word	0xe5007000
     6a4:	00001a90 	.word	0x00001a90
     6a8:	000002cc 	.word	0x000002cc
     6ac:	00001140 	.word	0x00001140

000006b0 <sark_pre_main>:
     6b0:	4b02      	ldr	r3, [pc, #8]	; (6bc <sark_pre_main+0xc>)
     6b2:	2206      	movs	r2, #6
     6b4:	69db      	ldr	r3, [r3, #28]
     6b6:	332e      	adds	r3, #46	; 0x2e
     6b8:	701a      	strb	r2, [r3, #0]
     6ba:	4770      	bx	lr
     6bc:	00400044 	.word	0x00400044

000006c0 <sark_post_main>:
     6c0:	4b02      	ldr	r3, [pc, #8]	; (6cc <sark_post_main+0xc>)
     6c2:	220b      	movs	r2, #11
     6c4:	69db      	ldr	r3, [r3, #28]
     6c6:	332e      	adds	r3, #46	; 0x2e
     6c8:	701a      	strb	r2, [r3, #0]
     6ca:	4770      	bx	lr
     6cc:	00400044 	.word	0x00400044

000006d0 <sark_msg_send>:
     6d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     6d2:	1c05      	adds	r5, r0, #0
     6d4:	1c0f      	adds	r7, r1, #0
     6d6:	f7ff ff41 	bl	55c <sark_shmsg_get>
     6da:	1c04      	adds	r4, r0, #0
     6dc:	3800      	subs	r0, #0
     6de:	d03d      	beq.n	75c <sark_msg_send+0x8c>
     6e0:	1c29      	adds	r1, r5, #0
     6e2:	f7ff edaa 	blx	238 <sark_msg_cpy>
     6e6:	4e1e      	ldr	r6, [pc, #120]	; (760 <sark_msg_send+0x90>)
     6e8:	2501      	movs	r5, #1
     6ea:	69f3      	ldr	r3, [r6, #28]
     6ec:	1c28      	adds	r0, r5, #0
     6ee:	635c      	str	r4, [r3, #52]	; 0x34
     6f0:	3339      	adds	r3, #57	; 0x39
     6f2:	701d      	strb	r5, [r3, #0]
     6f4:	f7ff ed68 	blx	1c8 <sark_lock_get>
     6f8:	6831      	ldr	r1, [r6, #0]
     6fa:	4a1a      	ldr	r2, [pc, #104]	; (764 <sark_msg_send+0x94>)
     6fc:	1c2e      	adds	r6, r5, #0
     6fe:	6813      	ldr	r3, [r2, #0]
     700:	408e      	lsls	r6, r1
     702:	1c31      	adds	r1, r6, #0
     704:	4319      	orrs	r1, r3
     706:	6011      	str	r1, [r2, #0]
     708:	2b00      	cmp	r3, #0
     70a:	d106      	bne.n	71a <sark_msg_send+0x4a>
     70c:	4b16      	ldr	r3, [pc, #88]	; (768 <sark_msg_send+0x98>)
     70e:	4a17      	ldr	r2, [pc, #92]	; (76c <sark_msg_send+0x9c>)
     710:	781b      	ldrb	r3, [r3, #0]
     712:	409d      	lsls	r5, r3
     714:	4b16      	ldr	r3, [pc, #88]	; (770 <sark_msg_send+0xa0>)
     716:	18ad      	adds	r5, r5, r2
     718:	601d      	str	r5, [r3, #0]
     71a:	2101      	movs	r1, #1
     71c:	f7ff ed66 	blx	1ec <sark_lock_free>
     720:	4b0f      	ldr	r3, [pc, #60]	; (760 <sark_msg_send+0x90>)
     722:	4a14      	ldr	r2, [pc, #80]	; (774 <sark_msg_send+0xa4>)
     724:	69db      	ldr	r3, [r3, #28]
     726:	6815      	ldr	r5, [r2, #0]
     728:	1c18      	adds	r0, r3, #0
     72a:	3039      	adds	r0, #57	; 0x39
     72c:	e008      	b.n	740 <sark_msg_send+0x70>
     72e:	6811      	ldr	r1, [r2, #0]
     730:	1b49      	subs	r1, r1, r5
     732:	42b9      	cmp	r1, r7
     734:	d904      	bls.n	740 <sark_msg_send+0x70>
     736:	3339      	adds	r3, #57	; 0x39
     738:	781b      	ldrb	r3, [r3, #0]
     73a:	2b00      	cmp	r3, #0
     73c:	d009      	beq.n	752 <sark_msg_send+0x82>
     73e:	e003      	b.n	748 <sark_msg_send+0x78>
     740:	7801      	ldrb	r1, [r0, #0]
     742:	2900      	cmp	r1, #0
     744:	d1f3      	bne.n	72e <sark_msg_send+0x5e>
     746:	e7f6      	b.n	736 <sark_msg_send+0x66>
     748:	1c20      	adds	r0, r4, #0
     74a:	f7ff ff21 	bl	590 <sark_shmsg_free>
     74e:	2000      	movs	r0, #0
     750:	e004      	b.n	75c <sark_msg_send+0x8c>
     752:	4b03      	ldr	r3, [pc, #12]	; (760 <sark_msg_send+0x90>)
     754:	2001      	movs	r0, #1
     756:	6ada      	ldr	r2, [r3, #44]	; 0x2c
     758:	3201      	adds	r2, #1
     75a:	62da      	str	r2, [r3, #44]	; 0x2c
     75c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     75e:	46c0      	nop			; (mov r8, r8)
     760:	00400044 	.word	0x00400044
     764:	e5007fec 	.word	0xe5007fec
     768:	e5007fa8 	.word	0xe5007fa8
     76c:	5ec00000 	.word	0x5ec00000
     770:	e2000008 	.word	0xe2000008
     774:	e5007f10 	.word	0xe5007f10

00000778 <sark_cmd_ver>:
     778:	b508      	push	{r3, lr}
     77a:	4b0a      	ldr	r3, [pc, #40]	; (7a4 <sark_cmd_ver+0x2c>)
     77c:	6859      	ldr	r1, [r3, #4]
     77e:	681b      	ldr	r3, [r3, #0]
     780:	020a      	lsls	r2, r1, #8
     782:	18d3      	adds	r3, r2, r3
     784:	4a08      	ldr	r2, [pc, #32]	; (7a8 <sark_cmd_ver+0x30>)
     786:	4909      	ldr	r1, [pc, #36]	; (7ac <sark_cmd_ver+0x34>)
     788:	8812      	ldrh	r2, [r2, #0]
     78a:	0412      	lsls	r2, r2, #16
     78c:	189b      	adds	r3, r3, r2
     78e:	6143      	str	r3, [r0, #20]
     790:	4b07      	ldr	r3, [pc, #28]	; (7b0 <sark_cmd_ver+0x38>)
     792:	6183      	str	r3, [r0, #24]
     794:	4b07      	ldr	r3, [pc, #28]	; (7b4 <sark_cmd_ver+0x3c>)
     796:	681b      	ldr	r3, [r3, #0]
     798:	61c3      	str	r3, [r0, #28]
     79a:	3020      	adds	r0, #32
     79c:	f7ff ed30 	blx	200 <sark_str_cpy>
     7a0:	201b      	movs	r0, #27
     7a2:	bd08      	pop	{r3, pc}
     7a4:	00400044 	.word	0x00400044
     7a8:	e5007f00 	.word	0xe5007f00
     7ac:	00001a9c 	.word	0x00001a9c
     7b0:	00820100 	.word	0x00820100
     7b4:	00001a98 	.word	0x00001a98

000007b8 <sark_cmd_read>:
     7b8:	69c1      	ldr	r1, [r0, #28]
     7ba:	b530      	push	{r4, r5, lr}
     7bc:	6983      	ldr	r3, [r0, #24]
     7be:	2902      	cmp	r1, #2
     7c0:	d803      	bhi.n	7ca <sark_cmd_read+0x12>
     7c2:	2280      	movs	r2, #128	; 0x80
     7c4:	0052      	lsls	r2, r2, #1
     7c6:	429a      	cmp	r2, r3
     7c8:	d203      	bcs.n	7d2 <sark_cmd_read+0x1a>
     7ca:	2384      	movs	r3, #132	; 0x84
     7cc:	8203      	strh	r3, [r0, #16]
     7ce:	2300      	movs	r3, #0
     7d0:	e023      	b.n	81a <STACK_SIZE+0x1a>
     7d2:	6942      	ldr	r2, [r0, #20]
     7d4:	3014      	adds	r0, #20
     7d6:	2900      	cmp	r1, #0
     7d8:	d108      	bne.n	7ec <sark_cmd_read+0x34>
     7da:	18d1      	adds	r1, r2, r3
     7dc:	1a80      	subs	r0, r0, r2
     7de:	e002      	b.n	7e6 <sark_cmd_read+0x2e>
     7e0:	7814      	ldrb	r4, [r2, #0]
     7e2:	5484      	strb	r4, [r0, r2]
     7e4:	3201      	adds	r2, #1
     7e6:	428a      	cmp	r2, r1
     7e8:	d1fa      	bne.n	7e0 <sark_cmd_read+0x28>
     7ea:	e016      	b.n	81a <STACK_SIZE+0x1a>
     7ec:	2901      	cmp	r1, #1
     7ee:	d10a      	bne.n	806 <STACK_SIZE+0x6>
     7f0:	0859      	lsrs	r1, r3, #1
     7f2:	0049      	lsls	r1, r1, #1
     7f4:	1889      	adds	r1, r1, r2
     7f6:	1a80      	subs	r0, r0, r2
     7f8:	e002      	b.n	800 <STACK_SIZE>
     7fa:	8814      	ldrh	r4, [r2, #0]
     7fc:	5284      	strh	r4, [r0, r2]
     7fe:	3202      	adds	r2, #2
     800:	428a      	cmp	r2, r1
     802:	d1fa      	bne.n	7fa <sark_cmd_read+0x42>
     804:	e009      	b.n	81a <STACK_SIZE+0x1a>
     806:	089c      	lsrs	r4, r3, #2
     808:	00a4      	lsls	r4, r4, #2
     80a:	1904      	adds	r4, r0, r4
     80c:	1c01      	adds	r1, r0, #0
     80e:	e002      	b.n	816 <STACK_SIZE+0x16>
     810:	1a0d      	subs	r5, r1, r0
     812:	58ad      	ldr	r5, [r5, r2]
     814:	c120      	stmia	r1!, {r5}
     816:	42a1      	cmp	r1, r4
     818:	d1fa      	bne.n	810 <STACK_SIZE+0x10>
     81a:	1c18      	adds	r0, r3, #0
     81c:	bd30      	pop	{r4, r5, pc}

0000081e <sark_cmd_write>:
     81e:	69c1      	ldr	r1, [r0, #28]
     820:	b530      	push	{r4, r5, lr}
     822:	6982      	ldr	r2, [r0, #24]
     824:	2902      	cmp	r1, #2
     826:	d803      	bhi.n	830 <sark_cmd_write+0x12>
     828:	2380      	movs	r3, #128	; 0x80
     82a:	005b      	lsls	r3, r3, #1
     82c:	4293      	cmp	r3, r2
     82e:	d202      	bcs.n	836 <sark_cmd_write+0x18>
     830:	2384      	movs	r3, #132	; 0x84
     832:	8203      	strh	r3, [r0, #16]
     834:	e026      	b.n	884 <sark_cmd_write+0x66>
     836:	6943      	ldr	r3, [r0, #20]
     838:	2900      	cmp	r1, #0
     83a:	d10b      	bne.n	854 <sark_cmd_write+0x36>
     83c:	1881      	adds	r1, r0, r2
     83e:	1c02      	adds	r2, r0, #0
     840:	e005      	b.n	84e <sark_cmd_write+0x30>
     842:	1c14      	adds	r4, r2, #0
     844:	3420      	adds	r4, #32
     846:	7825      	ldrb	r5, [r4, #0]
     848:	1a14      	subs	r4, r2, r0
     84a:	3201      	adds	r2, #1
     84c:	54e5      	strb	r5, [r4, r3]
     84e:	428a      	cmp	r2, r1
     850:	d1f7      	bne.n	842 <sark_cmd_write+0x24>
     852:	e017      	b.n	884 <sark_cmd_write+0x66>
     854:	3020      	adds	r0, #32
     856:	2901      	cmp	r1, #1
     858:	d10b      	bne.n	872 <sark_cmd_write+0x54>
     85a:	0851      	lsrs	r1, r2, #1
     85c:	0049      	lsls	r1, r1, #1
     85e:	1841      	adds	r1, r0, r1
     860:	1c02      	adds	r2, r0, #0
     862:	e003      	b.n	86c <sark_cmd_write+0x4e>
     864:	8815      	ldrh	r5, [r2, #0]
     866:	1a14      	subs	r4, r2, r0
     868:	3202      	adds	r2, #2
     86a:	52e5      	strh	r5, [r4, r3]
     86c:	428a      	cmp	r2, r1
     86e:	d1f9      	bne.n	864 <sark_cmd_write+0x46>
     870:	e008      	b.n	884 <sark_cmd_write+0x66>
     872:	0892      	lsrs	r2, r2, #2
     874:	0092      	lsls	r2, r2, #2
     876:	18d2      	adds	r2, r2, r3
     878:	1ac0      	subs	r0, r0, r3
     87a:	e001      	b.n	880 <sark_cmd_write+0x62>
     87c:	58c1      	ldr	r1, [r0, r3]
     87e:	c302      	stmia	r3!, {r1}
     880:	4293      	cmp	r3, r2
     882:	d1fb      	bne.n	87c <sark_cmd_write+0x5e>
     884:	2000      	movs	r0, #0
     886:	bd30      	pop	{r4, r5, pc}

00000888 <sark_cmd_fill>:
     888:	b508      	push	{r3, lr}
     88a:	1c03      	adds	r3, r0, #0
     88c:	3314      	adds	r3, #20
     88e:	cb07      	ldmia	r3!, {r0, r1, r2}
     890:	f7ff ecc0 	blx	214 <sark_word_set>
     894:	2000      	movs	r0, #0
     896:	bd08      	pop	{r3, pc}

00000898 <sark_wait>:
     898:	b508      	push	{r3, lr}
     89a:	e001      	b.n	8a0 <sark_wait+0x8>
     89c:	f7ff ec90 	blx	1c0 <cpu_wfi>
     8a0:	235d      	movs	r3, #93	; 0x5d
     8a2:	781b      	ldrb	r3, [r3, #0]
     8a4:	07da      	lsls	r2, r3, #31
     8a6:	d4f9      	bmi.n	89c <sark_wait+0x4>
     8a8:	bd08      	pop	{r3, pc}
	...

000008ac <sark_int>:
     8ac:	4b55      	ldr	r3, [pc, #340]	; (a04 <sark_int+0x158>)
     8ae:	2101      	movs	r1, #1
     8b0:	685a      	ldr	r2, [r3, #4]
     8b2:	b570      	push	{r4, r5, r6, lr}
     8b4:	4091      	lsls	r1, r2
     8b6:	4a54      	ldr	r2, [pc, #336]	; (a08 <sark_int+0x15c>)
     8b8:	1889      	adds	r1, r1, r2
     8ba:	4a54      	ldr	r2, [pc, #336]	; (a0c <sark_int+0x160>)
     8bc:	6011      	str	r1, [r2, #0]
     8be:	69da      	ldr	r2, [r3, #28]
     8c0:	1c11      	adds	r1, r2, #0
     8c2:	3138      	adds	r1, #56	; 0x38
     8c4:	780b      	ldrb	r3, [r1, #0]
     8c6:	2b00      	cmp	r3, #0
     8c8:	d100      	bne.n	8cc <sark_int+0x20>
     8ca:	e099      	b.n	a00 <sark_int+0x154>
     8cc:	6b15      	ldr	r5, [r2, #48]	; 0x30
     8ce:	2b02      	cmp	r3, #2
     8d0:	d100      	bne.n	8d4 <sark_int+0x28>
     8d2:	6310      	str	r0, [r2, #48]	; 0x30
     8d4:	2200      	movs	r2, #0
     8d6:	700a      	strb	r2, [r1, #0]
     8d8:	2b03      	cmp	r3, #3
     8da:	d124      	bne.n	926 <sark_int+0x7a>
     8dc:	1ee8      	subs	r0, r5, #3
     8de:	280a      	cmp	r0, #10
     8e0:	d900      	bls.n	8e4 <sark_int+0x38>
     8e2:	e08d      	b.n	a00 <sark_int+0x154>
     8e4:	f7ff fd0e 	bl	304 <__gnu_thumb1_case_uqi>
     8e8:	068c8c10 	.word	0x068c8c10
     8ec:	161b0c08 	.word	0x161b0c08
     8f0:	1616      	.short	0x1616
     8f2:	16          	.byte	0x16
     8f3:	00          	.byte	0x00
     8f4:	2001      	movs	r0, #1
     8f6:	e000      	b.n	8fa <sark_int+0x4e>
     8f8:	2000      	movs	r0, #0
     8fa:	f000 f90d 	bl	b18 <event_pause>
     8fe:	e07f      	b.n	a00 <sark_int+0x154>
     900:	20ff      	movs	r0, #255	; 0xff
     902:	f000 f91f 	bl	b44 <event_stop>
     906:	e07b      	b.n	a00 <sark_int+0x154>
     908:	235d      	movs	r3, #93	; 0x5d
     90a:	781a      	ldrb	r2, [r3, #0]
     90c:	2101      	movs	r1, #1
     90e:	438a      	bics	r2, r1
     910:	701a      	strb	r2, [r3, #0]
     912:	e075      	b.n	a00 <sark_int+0x154>
     914:	4b3e      	ldr	r3, [pc, #248]	; (a10 <sark_int+0x164>)
     916:	2280      	movs	r2, #128	; 0x80
     918:	62dd      	str	r5, [r3, #44]	; 0x2c
     91a:	0592      	lsls	r2, r2, #22
     91c:	e000      	b.n	920 <sark_int+0x74>
     91e:	2210      	movs	r2, #16
     920:	4b3c      	ldr	r3, [pc, #240]	; (a14 <sark_int+0x168>)
     922:	601a      	str	r2, [r3, #0]
     924:	e06c      	b.n	a00 <sark_int+0x154>
     926:	2b01      	cmp	r3, #1
     928:	d16a      	bne.n	a00 <sark_int+0x154>
     92a:	f7ff fdef 	bl	50c <sark_msg_get>
     92e:	1e04      	subs	r4, r0, #0
     930:	d063      	beq.n	9fa <sark_int+0x14e>
     932:	1c29      	adds	r1, r5, #0
     934:	1c20      	adds	r0, r4, #0
     936:	f7ff ec80 	blx	238 <sark_msg_cpy>
     93a:	1c28      	adds	r0, r5, #0
     93c:	f7ff fe28 	bl	590 <sark_shmsg_free>
     940:	4b30      	ldr	r3, [pc, #192]	; (a04 <sark_int+0x158>)
     942:	6a9a      	ldr	r2, [r3, #40]	; 0x28
     944:	3201      	adds	r2, #1
     946:	629a      	str	r2, [r3, #40]	; 0x28
     948:	7aa5      	ldrb	r5, [r4, #10]
     94a:	231f      	movs	r3, #31
     94c:	1c28      	adds	r0, r5, #0
     94e:	4398      	bics	r0, r3
     950:	d130      	bne.n	9b4 <sark_int+0x108>
     952:	88a3      	ldrh	r3, [r4, #4]
     954:	2b17      	cmp	r3, #23
     956:	d801      	bhi.n	95c <sark_int+0xb0>
     958:	2381      	movs	r3, #129	; 0x81
     95a:	e01b      	b.n	994 <sark_int+0xe8>
     95c:	8a23      	ldrh	r3, [r4, #16]
     95e:	2280      	movs	r2, #128	; 0x80
     960:	8222      	strh	r2, [r4, #16]
     962:	2b00      	cmp	r3, #0
     964:	d103      	bne.n	96e <sark_int+0xc2>
     966:	1c20      	adds	r0, r4, #0
     968:	f7ff ff06 	bl	778 <sark_cmd_ver>
     96c:	e013      	b.n	996 <sark_int+0xea>
     96e:	2b02      	cmp	r3, #2
     970:	d103      	bne.n	97a <sark_int+0xce>
     972:	1c20      	adds	r0, r4, #0
     974:	f7ff ff20 	bl	7b8 <sark_cmd_read>
     978:	e00d      	b.n	996 <sark_int+0xea>
     97a:	2b03      	cmp	r3, #3
     97c:	d103      	bne.n	986 <sark_int+0xda>
     97e:	1c20      	adds	r0, r4, #0
     980:	f7ff ff4d 	bl	81e <sark_cmd_write>
     984:	e007      	b.n	996 <sark_int+0xea>
     986:	2b05      	cmp	r3, #5
     988:	d103      	bne.n	992 <sark_int+0xe6>
     98a:	1c20      	adds	r0, r4, #0
     98c:	f7ff ff7c 	bl	888 <sark_cmd_fill>
     990:	e001      	b.n	996 <sark_int+0xea>
     992:	2383      	movs	r3, #131	; 0x83
     994:	8223      	strh	r3, [r4, #16]
     996:	7aa2      	ldrb	r2, [r4, #10]
     998:	7ae1      	ldrb	r1, [r4, #11]
     99a:	89a3      	ldrh	r3, [r4, #12]
     99c:	300c      	adds	r0, #12
     99e:	72e2      	strb	r2, [r4, #11]
     9a0:	89e2      	ldrh	r2, [r4, #14]
     9a2:	80a0      	strh	r0, [r4, #4]
     9a4:	72a1      	strb	r1, [r4, #10]
     9a6:	81a2      	strh	r2, [r4, #12]
     9a8:	81e3      	strh	r3, [r4, #14]
     9aa:	1c20      	adds	r0, r4, #0
     9ac:	210a      	movs	r1, #10
     9ae:	f7ff fe8f 	bl	6d0 <sark_msg_send>
     9b2:	e01e      	b.n	9f2 <sark_int+0x146>
     9b4:	235b      	movs	r3, #91	; 0x5b
     9b6:	781b      	ldrb	r3, [r3, #0]
     9b8:	2b00      	cmp	r3, #0
     9ba:	d00f      	beq.n	9dc <sark_int+0x130>
     9bc:	4b16      	ldr	r3, [pc, #88]	; (a18 <sark_int+0x16c>)
     9be:	699b      	ldr	r3, [r3, #24]
     9c0:	2b00      	cmp	r3, #0
     9c2:	d016      	beq.n	9f2 <sark_int+0x146>
     9c4:	f7ff ebf0 	blx	1a8 <cpu_int_disable>
     9c8:	096a      	lsrs	r2, r5, #5
     9ca:	1c21      	adds	r1, r4, #0
     9cc:	1c06      	adds	r6, r0, #0
     9ce:	2003      	movs	r0, #3
     9d0:	f7ff fd72 	bl	4b8 <schedule_sysmode>
     9d4:	1c30      	adds	r0, r6, #0
     9d6:	f7ff ebf0 	blx	1b8 <cpu_int_restore>
     9da:	e011      	b.n	a00 <sark_int+0x154>
     9dc:	4b0f      	ldr	r3, [pc, #60]	; (a1c <sark_int+0x170>)
     9de:	681a      	ldr	r2, [r3, #0]
     9e0:	2380      	movs	r3, #128	; 0x80
     9e2:	055b      	lsls	r3, r3, #21
     9e4:	421a      	tst	r2, r3
     9e6:	d004      	beq.n	9f2 <sark_int+0x146>
     9e8:	4a09      	ldr	r2, [pc, #36]	; (a10 <sark_int+0x164>)
     9ea:	6294      	str	r4, [r2, #40]	; 0x28
     9ec:	4a09      	ldr	r2, [pc, #36]	; (a14 <sark_int+0x168>)
     9ee:	6013      	str	r3, [r2, #0]
     9f0:	e006      	b.n	a00 <sark_int+0x154>
     9f2:	1c20      	adds	r0, r4, #0
     9f4:	f7ff fda2 	bl	53c <sark_msg_free>
     9f8:	e002      	b.n	a00 <sark_int+0x154>
     9fa:	1c28      	adds	r0, r5, #0
     9fc:	f7ff fdc8 	bl	590 <sark_shmsg_free>
     a00:	bd70      	pop	{r4, r5, r6, pc}
     a02:	46c0      	nop			; (mov r8, r8)
     a04:	00400044 	.word	0x00400044
     a08:	5ec00000 	.word	0x5ec00000
     a0c:	e200000c 	.word	0xe200000c
     a10:	00400080 	.word	0x00400080
     a14:	2f000018 	.word	0x2f000018
     a18:	00400000 	.word	0x00400000
     a1c:	2f000010 	.word	0x2f000010

00000a20 <event_register_queue>:
     a20:	b5f0      	push	{r4, r5, r6, r7, lr}
     a22:	b085      	sub	sp, #20
     a24:	9003      	str	r0, [sp, #12]
     a26:	4820      	ldr	r0, [pc, #128]	; (aa8 <event_register_queue+0x88>)
     a28:	9300      	str	r3, [sp, #0]
     a2a:	5c40      	ldrb	r0, [r0, r1]
     a2c:	9001      	str	r0, [sp, #4]
     a2e:	2a0f      	cmp	r2, #15
     a30:	d812      	bhi.n	a58 <event_register_queue+0x38>
     a32:	2905      	cmp	r1, #5
     a34:	d810      	bhi.n	a58 <event_register_queue+0x38>
     a36:	2b03      	cmp	r3, #3
     a38:	d80e      	bhi.n	a58 <event_register_queue+0x38>
     a3a:	9b01      	ldr	r3, [sp, #4]
     a3c:	2001      	movs	r0, #1
     a3e:	4098      	lsls	r0, r3
     a40:	9002      	str	r0, [sp, #8]
     a42:	481a      	ldr	r0, [pc, #104]	; (aac <event_register_queue+0x8c>)
     a44:	9d02      	ldr	r5, [sp, #8]
     a46:	6cc4      	ldr	r4, [r0, #76]	; 0x4c
     a48:	422c      	tst	r4, r5
     a4a:	d105      	bne.n	a58 <event_register_queue+0x38>
     a4c:	4f18      	ldr	r7, [pc, #96]	; (ab0 <event_register_queue+0x90>)
     a4e:	0096      	lsls	r6, r2, #2
     a50:	19f6      	adds	r6, r6, r7
     a52:	6834      	ldr	r4, [r6, #0]
     a54:	2c00      	cmp	r4, #0
     a56:	d005      	beq.n	a64 <event_register_queue+0x44>
     a58:	4b14      	ldr	r3, [pc, #80]	; (aac <event_register_queue+0x8c>)
     a5a:	2204      	movs	r2, #4
     a5c:	6959      	ldr	r1, [r3, #20]
     a5e:	430a      	orrs	r2, r1
     a60:	615a      	str	r2, [r3, #20]
     a62:	e01f      	b.n	aa4 <event_register_queue+0x84>
     a64:	4b13      	ldr	r3, [pc, #76]	; (ab4 <event_register_queue+0x94>)
     a66:	0094      	lsls	r4, r2, #2
     a68:	191b      	adds	r3, r3, r4
     a6a:	4c13      	ldr	r4, [pc, #76]	; (ab8 <event_register_queue+0x98>)
     a6c:	008d      	lsls	r5, r1, #2
     a6e:	592f      	ldr	r7, [r5, r4]
     a70:	601f      	str	r7, [r3, #0]
     a72:	9f01      	ldr	r7, [sp, #4]
     a74:	2320      	movs	r3, #32
     a76:	431f      	orrs	r7, r3
     a78:	6037      	str	r7, [r6, #0]
     a7a:	1c0e      	adds	r6, r1, #0
     a7c:	469c      	mov	ip, r3
     a7e:	3610      	adds	r6, #16
     a80:	230c      	movs	r3, #12
     a82:	466f      	mov	r7, sp
     a84:	5bdf      	ldrh	r7, [r3, r7]
     a86:	00b6      	lsls	r6, r6, #2
     a88:	8437      	strh	r7, [r6, #32]
     a8a:	4466      	add	r6, ip
     a8c:	70b2      	strb	r2, [r6, #2]
     a8e:	466a      	mov	r2, sp
     a90:	7812      	ldrb	r2, [r2, #0]
     a92:	70f2      	strb	r2, [r6, #3]
     a94:	9b02      	ldr	r3, [sp, #8]
     a96:	592d      	ldr	r5, [r5, r4]
     a98:	6cc4      	ldr	r4, [r0, #76]	; 0x4c
     a9a:	3118      	adds	r1, #24
     a9c:	0089      	lsls	r1, r1, #2
     a9e:	4323      	orrs	r3, r4
     aa0:	500d      	str	r5, [r1, r0]
     aa2:	64c3      	str	r3, [r0, #76]	; 0x4c
     aa4:	b005      	add	sp, #20
     aa6:	bdf0      	pop	{r4, r5, r6, r7, pc}
     aa8:	00001aab 	.word	0x00001aab
     aac:	00400080 	.word	0x00400080
     ab0:	2f000200 	.word	0x2f000200
     ab4:	2f000100 	.word	0x2f000100
     ab8:	00001ab4 	.word	0x00001ab4

00000abc <event_wait>:
     abc:	4b13      	ldr	r3, [pc, #76]	; (b0c <event_wait+0x50>)
     abe:	b570      	push	{r4, r5, r6, lr}
     ac0:	681b      	ldr	r3, [r3, #0]
     ac2:	4c13      	ldr	r4, [pc, #76]	; (b10 <event_wait+0x54>)
     ac4:	2501      	movs	r5, #1
     ac6:	409d      	lsls	r5, r3
     ac8:	7ea3      	ldrb	r3, [r4, #26]
     aca:	4e12      	ldr	r6, [pc, #72]	; (b14 <event_wait+0x58>)
     acc:	2b00      	cmp	r3, #0
     ace:	d012      	beq.n	af6 <event_wait+0x3a>
     ad0:	2009      	movs	r0, #9
     ad2:	f7ff fd03 	bl	4dc <sark_cpu_state>
     ad6:	e001      	b.n	adc <event_wait+0x20>
     ad8:	f7ff eb72 	blx	1c0 <cpu_wfi>
     adc:	6833      	ldr	r3, [r6, #0]
     ade:	1c2a      	adds	r2, r5, #0
     ae0:	439a      	bics	r2, r3
     ae2:	1e13      	subs	r3, r2, #0
     ae4:	d1f8      	bne.n	ad8 <event_wait+0x1c>
     ae6:	7ea3      	ldrb	r3, [r4, #26]
     ae8:	2201      	movs	r2, #1
     aea:	4053      	eors	r3, r2
     aec:	2007      	movs	r0, #7
     aee:	76a3      	strb	r3, [r4, #26]
     af0:	f7ff fcf4 	bl	4dc <sark_cpu_state>
     af4:	e009      	b.n	b0a <event_wait+0x4e>
     af6:	2008      	movs	r0, #8
     af8:	f7ff fcf0 	bl	4dc <sark_cpu_state>
     afc:	e001      	b.n	b02 <event_wait+0x46>
     afe:	f7ff eb60 	blx	1c0 <cpu_wfi>
     b02:	6833      	ldr	r3, [r6, #0]
     b04:	422b      	tst	r3, r5
     b06:	d1fa      	bne.n	afe <event_wait+0x42>
     b08:	e7ed      	b.n	ae6 <event_wait+0x2a>
     b0a:	bd70      	pop	{r4, r5, r6, pc}
     b0c:	00400044 	.word	0x00400044
     b10:	00400080 	.word	0x00400080
     b14:	e2000058 	.word	0xe2000058

00000b18 <event_pause>:
     b18:	b538      	push	{r3, r4, r5, lr}
     b1a:	1c05      	adds	r5, r0, #0
     b1c:	4c08      	ldr	r4, [pc, #32]	; (b40 <event_pause+0x28>)
     b1e:	2800      	cmp	r0, #0
     b20:	d003      	beq.n	b2a <event_pause+0x12>
     b22:	2301      	movs	r3, #1
     b24:	7623      	strb	r3, [r4, #24]
     b26:	200a      	movs	r0, #10
     b28:	e001      	b.n	b2e <event_pause+0x16>
     b2a:	7620      	strb	r0, [r4, #24]
     b2c:	2007      	movs	r0, #7
     b2e:	f7ff fcd5 	bl	4dc <sark_cpu_state>
     b32:	6b23      	ldr	r3, [r4, #48]	; 0x30
     b34:	2b00      	cmp	r3, #0
     b36:	d002      	beq.n	b3e <event_pause+0x26>
     b38:	6b61      	ldr	r1, [r4, #52]	; 0x34
     b3a:	1c28      	adds	r0, r5, #0
     b3c:	4798      	blx	r3
     b3e:	bd38      	pop	{r3, r4, r5, pc}
     b40:	00400080 	.word	0x00400080

00000b44 <event_stop>:
     b44:	4b03      	ldr	r3, [pc, #12]	; (b54 <event_stop+0x10>)
     b46:	2202      	movs	r2, #2
     b48:	761a      	strb	r2, [r3, #24]
     b4a:	4a03      	ldr	r2, [pc, #12]	; (b58 <event_stop+0x14>)
     b4c:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
     b4e:	6011      	str	r1, [r2, #0]
     b50:	6398      	str	r0, [r3, #56]	; 0x38
     b52:	4770      	bx	lr
     b54:	00400080 	.word	0x00400080
     b58:	2f000014 	.word	0x2f000014

00000b5c <event_queue>:
     b5c:	b538      	push	{r3, r4, r5, lr}
     b5e:	1c05      	adds	r5, r0, #0
     b60:	2000      	movs	r0, #0
     b62:	2903      	cmp	r1, #3
     b64:	d812      	bhi.n	b8c <event_queue+0x30>
     b66:	1c0c      	adds	r4, r1, #0
     b68:	4b09      	ldr	r3, [pc, #36]	; (b90 <event_queue+0x34>)
     b6a:	340f      	adds	r4, #15
     b6c:	00e4      	lsls	r4, r4, #3
     b6e:	18e4      	adds	r4, r4, r3
     b70:	f7ff eb1a 	blx	1a8 <cpu_int_disable>
     b74:	6823      	ldr	r3, [r4, #0]
     b76:	2b00      	cmp	r3, #0
     b78:	d102      	bne.n	b80 <event_queue+0x24>
     b7a:	6065      	str	r5, [r4, #4]
     b7c:	6025      	str	r5, [r4, #0]
     b7e:	e002      	b.n	b86 <event_queue+0x2a>
     b80:	6863      	ldr	r3, [r4, #4]
     b82:	601d      	str	r5, [r3, #0]
     b84:	6065      	str	r5, [r4, #4]
     b86:	f7ff eb18 	blx	1b8 <cpu_int_restore>
     b8a:	2001      	movs	r0, #1
     b8c:	bd38      	pop	{r3, r4, r5, pc}
     b8e:	46c0      	nop			; (mov r8, r8)
     b90:	00400080 	.word	0x00400080

00000b94 <event_run2>:
     b94:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
     b96:	2500      	movs	r5, #0
     b98:	9001      	str	r0, [sp, #4]
     b9a:	e029      	b.n	bf0 <event_run2+0x5c>
     b9c:	1c2f      	adds	r7, r5, #0
     b9e:	370f      	adds	r7, #15
     ba0:	00ff      	lsls	r7, r7, #3
     ba2:	19bf      	adds	r7, r7, r6
     ba4:	f7ff eb00 	blx	1a8 <cpu_int_disable>
     ba8:	683c      	ldr	r4, [r7, #0]
     baa:	2c00      	cmp	r4, #0
     bac:	d105      	bne.n	bba <event_run2+0x26>
     bae:	3501      	adds	r5, #1
     bb0:	062d      	lsls	r5, r5, #24
     bb2:	f7ff eb02 	blx	1b8 <cpu_int_restore>
     bb6:	0e2d      	lsrs	r5, r5, #24
     bb8:	e016      	b.n	be8 <event_run2+0x54>
     bba:	6823      	ldr	r3, [r4, #0]
     bbc:	603b      	str	r3, [r7, #0]
     bbe:	f7ff eafc 	blx	1b8 <cpu_int_restore>
     bc2:	68e1      	ldr	r1, [r4, #12]
     bc4:	6863      	ldr	r3, [r4, #4]
     bc6:	68a0      	ldr	r0, [r4, #8]
     bc8:	4798      	blx	r3
     bca:	f7ff eaee 	blx	1a8 <cpu_int_disable>
     bce:	6833      	ldr	r3, [r6, #0]
     bd0:	6023      	str	r3, [r4, #0]
     bd2:	9b00      	ldr	r3, [sp, #0]
     bd4:	6163      	str	r3, [r4, #20]
     bd6:	8933      	ldrh	r3, [r6, #8]
     bd8:	6034      	str	r4, [r6, #0]
     bda:	3b01      	subs	r3, #1
     bdc:	8133      	strh	r3, [r6, #8]
     bde:	f7ff eaec 	blx	1b8 <cpu_int_restore>
     be2:	9b01      	ldr	r3, [sp, #4]
     be4:	2b00      	cmp	r3, #0
     be6:	d102      	bne.n	bee <event_run2+0x5a>
     be8:	2d03      	cmp	r5, #3
     bea:	d901      	bls.n	bf0 <event_run2+0x5c>
     bec:	e005      	b.n	bfa <event_run2+0x66>
     bee:	9d00      	ldr	r5, [sp, #0]
     bf0:	4e02      	ldr	r6, [pc, #8]	; (bfc <event_run2+0x68>)
     bf2:	7e33      	ldrb	r3, [r6, #24]
     bf4:	9300      	str	r3, [sp, #0]
     bf6:	2b00      	cmp	r3, #0
     bf8:	d0d0      	beq.n	b9c <event_run2+0x8>
     bfa:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
     bfc:	00400080 	.word	0x00400080

00000c00 <event_new>:
     c00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     c02:	1c15      	adds	r5, r2, #0
     c04:	1c07      	adds	r7, r0, #0
     c06:	1c0e      	adds	r6, r1, #0
     c08:	f7ff eace 	blx	1a8 <cpu_int_disable>
     c0c:	4a14      	ldr	r2, [pc, #80]	; (c60 <ETH_RX_SIZE+0x60>)
     c0e:	6814      	ldr	r4, [r2, #0]
     c10:	1c13      	adds	r3, r2, #0
     c12:	2c00      	cmp	r4, #0
     c14:	d018      	beq.n	c48 <event_new+0x48>
     c16:	68d2      	ldr	r2, [r2, #12]
     c18:	3201      	adds	r2, #1
     c1a:	2a00      	cmp	r2, #0
     c1c:	d100      	bne.n	c20 <event_new+0x20>
     c1e:	2201      	movs	r2, #1
     c20:	6821      	ldr	r1, [r4, #0]
     c22:	6019      	str	r1, [r3, #0]
     c24:	2100      	movs	r1, #0
     c26:	6021      	str	r1, [r4, #0]
     c28:	6162      	str	r2, [r4, #20]
     c2a:	60da      	str	r2, [r3, #12]
     c2c:	6121      	str	r1, [r4, #16]
     c2e:	6067      	str	r7, [r4, #4]
     c30:	60a6      	str	r6, [r4, #8]
     c32:	60e5      	str	r5, [r4, #12]
     c34:	891a      	ldrh	r2, [r3, #8]
     c36:	8959      	ldrh	r1, [r3, #10]
     c38:	3201      	adds	r2, #1
     c3a:	0412      	lsls	r2, r2, #16
     c3c:	0c12      	lsrs	r2, r2, #16
     c3e:	811a      	strh	r2, [r3, #8]
     c40:	4291      	cmp	r1, r2
     c42:	d208      	bcs.n	c56 <event_new+0x56>
     c44:	815a      	strh	r2, [r3, #10]
     c46:	e006      	b.n	c56 <event_new+0x56>
     c48:	6913      	ldr	r3, [r2, #16]
     c4a:	6951      	ldr	r1, [r2, #20]
     c4c:	3301      	adds	r3, #1
     c4e:	6113      	str	r3, [r2, #16]
     c50:	2310      	movs	r3, #16
     c52:	430b      	orrs	r3, r1
     c54:	6153      	str	r3, [r2, #20]
     c56:	f7ff eab0 	blx	1b8 <cpu_int_restore>
     c5a:	1c20      	adds	r0, r4, #0
     c5c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     c5e:	46c0      	nop			; (mov r8, r8)
     c60:	00400080 	.word	0x00400080

00000c64 <event_queue_proc>:
     c64:	b510      	push	{r4, lr}
     c66:	1c1c      	adds	r4, r3, #0
     c68:	f7ff ffca 	bl	c00 <event_new>
     c6c:	2800      	cmp	r0, #0
     c6e:	d002      	beq.n	c76 <event_queue_proc+0x12>
     c70:	1c21      	adds	r1, r4, #0
     c72:	f7ff ff73 	bl	b5c <event_queue>
     c76:	bd10      	pop	{r4, pc}

00000c78 <event_alloc>:
     c78:	b570      	push	{r4, r5, r6, lr}
     c7a:	2118      	movs	r1, #24
     c7c:	1c06      	adds	r6, r0, #0
     c7e:	f000 fb23 	bl	12c8 <sark_alloc>
     c82:	4d0b      	ldr	r5, [pc, #44]	; (cb0 <event_alloc+0x38>)
     c84:	1e04      	subs	r4, r0, #0
     c86:	d00d      	beq.n	ca4 <event_alloc+0x2c>
     c88:	1c31      	adds	r1, r6, #0
     c8a:	2218      	movs	r2, #24
     c8c:	f7ff fc2e 	bl	4ec <sark_block_init>
     c90:	1c06      	adds	r6, r0, #0
     c92:	f7ff ea8a 	blx	1a8 <cpu_int_disable>
     c96:	682a      	ldr	r2, [r5, #0]
     c98:	6032      	str	r2, [r6, #0]
     c9a:	602c      	str	r4, [r5, #0]
     c9c:	f7ff ea8c 	blx	1b8 <cpu_int_restore>
     ca0:	2001      	movs	r0, #1
     ca2:	e003      	b.n	cac <event_alloc+0x34>
     ca4:	696a      	ldr	r2, [r5, #20]
     ca6:	2308      	movs	r3, #8
     ca8:	4313      	orrs	r3, r2
     caa:	616b      	str	r3, [r5, #20]
     cac:	bd70      	pop	{r4, r5, r6, pc}
     cae:	46c0      	nop			; (mov r8, r8)
     cb0:	00400080 	.word	0x00400080

00000cb4 <event_start>:
     cb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     cb6:	1c04      	adds	r4, r0, #0
     cb8:	1c15      	adds	r5, r2, #0
     cba:	2900      	cmp	r1, #0
     cbc:	d002      	beq.n	cc4 <event_start+0x10>
     cbe:	1c08      	adds	r0, r1, #0
     cc0:	f7ff ffda 	bl	c78 <event_alloc>
     cc4:	4b28      	ldr	r3, [pc, #160]	; (d68 <event_start+0xb4>)
     cc6:	6959      	ldr	r1, [r3, #20]
     cc8:	2900      	cmp	r1, #0
     cca:	d002      	beq.n	cd2 <event_start+0x1e>
     ccc:	200c      	movs	r0, #12
     cce:	f7ff fa2d 	bl	12c <rt_error>
     cd2:	2d00      	cmp	r5, #0
     cd4:	d001      	beq.n	cda <event_start+0x26>
     cd6:	f7ff fef1 	bl	abc <event_wait>
     cda:	2c00      	cmp	r4, #0
     cdc:	d008      	beq.n	cf0 <event_start+0x3c>
     cde:	4b23      	ldr	r3, [pc, #140]	; (d6c <event_start+0xb8>)
     ce0:	22e2      	movs	r2, #226	; 0xe2
     ce2:	601a      	str	r2, [r3, #0]
     ce4:	4b22      	ldr	r3, [pc, #136]	; (d70 <event_start+0xbc>)
     ce6:	8e1b      	ldrh	r3, [r3, #48]	; 0x30
     ce8:	435c      	muls	r4, r3
     cea:	2384      	movs	r3, #132	; 0x84
     cec:	059b      	lsls	r3, r3, #22
     cee:	601c      	str	r4, [r3, #0]
     cf0:	f7ff ea5a 	blx	1a8 <cpu_int_disable>
     cf4:	4d1f      	ldr	r5, [pc, #124]	; (d74 <event_start+0xc0>)
     cf6:	4b1c      	ldr	r3, [pc, #112]	; (d68 <event_start+0xb4>)
     cf8:	2220      	movs	r2, #32
     cfa:	69d1      	ldr	r1, [r2, #28]
     cfc:	4c1e      	ldr	r4, [pc, #120]	; (d78 <event_start+0xc4>)
     cfe:	65d9      	str	r1, [r3, #92]	; 0x5c
     d00:	6829      	ldr	r1, [r5, #0]
     d02:	6519      	str	r1, [r3, #80]	; 0x50
     d04:	6821      	ldr	r1, [r4, #0]
     d06:	6559      	str	r1, [r3, #84]	; 0x54
     d08:	6d99      	ldr	r1, [r3, #88]	; 0x58
     d0a:	61d1      	str	r1, [r2, #28]
     d0c:	6c9a      	ldr	r2, [r3, #72]	; 0x48
     d0e:	602a      	str	r2, [r5, #0]
     d10:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
     d12:	6023      	str	r3, [r4, #0]
     d14:	f7ff ea50 	blx	1b8 <cpu_int_restore>
     d18:	2007      	movs	r0, #7
     d1a:	f7ff fbdf 	bl	4dc <sark_cpu_state>
     d1e:	1c26      	adds	r6, r4, #0
     d20:	e007      	b.n	d32 <event_start+0x7e>
     d22:	2001      	movs	r0, #1
     d24:	f7ff ff36 	bl	b94 <event_run2>
     d28:	f7ff ea4a 	blx	1c0 <cpu_wfi>
     d2c:	7e3b      	ldrb	r3, [r7, #24]
     d2e:	2b01      	cmp	r3, #1
     d30:	d0fa      	beq.n	d28 <event_start+0x74>
     d32:	4c0d      	ldr	r4, [pc, #52]	; (d68 <event_start+0xb4>)
     d34:	7e23      	ldrb	r3, [r4, #24]
     d36:	1c27      	adds	r7, r4, #0
     d38:	2b02      	cmp	r3, #2
     d3a:	d1f2      	bne.n	d22 <event_start+0x6e>
     d3c:	200b      	movs	r0, #11
     d3e:	f7ff fbcd 	bl	4dc <sark_cpu_state>
     d42:	4b0b      	ldr	r3, [pc, #44]	; (d70 <event_start+0xbc>)
     d44:	2138      	movs	r1, #56	; 0x38
     d46:	69db      	ldr	r3, [r3, #28]
     d48:	5d09      	ldrb	r1, [r1, r4]
     d4a:	332c      	adds	r3, #44	; 0x2c
     d4c:	7019      	strb	r1, [r3, #0]
     d4e:	f7ff ea2c 	blx	1a8 <cpu_int_disable>
     d52:	6de2      	ldr	r2, [r4, #92]	; 0x5c
     d54:	2320      	movs	r3, #32
     d56:	61da      	str	r2, [r3, #28]
     d58:	6d23      	ldr	r3, [r4, #80]	; 0x50
     d5a:	602b      	str	r3, [r5, #0]
     d5c:	6d61      	ldr	r1, [r4, #84]	; 0x54
     d5e:	6031      	str	r1, [r6, #0]
     d60:	f7ff ea2a 	blx	1b8 <cpu_int_restore>
     d64:	6ba0      	ldr	r0, [r4, #56]	; 0x38
     d66:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     d68:	00400080 	.word	0x00400080
     d6c:	21000008 	.word	0x21000008
     d70:	00400044 	.word	0x00400044
     d74:	2f00000c 	.word	0x2f00000c
     d78:	2f000010 	.word	0x2f000010

00000d7c <event_register_timer>:
     d7c:	490b      	ldr	r1, [pc, #44]	; (dac <event_register_timer+0x30>)
     d7e:	b508      	push	{r3, lr}
     d80:	0083      	lsls	r3, r0, #2
     d82:	185b      	adds	r3, r3, r1
     d84:	681b      	ldr	r3, [r3, #0]
     d86:	2b00      	cmp	r3, #0
     d88:	d10c      	bne.n	da4 <event_register_timer+0x28>
     d8a:	4a09      	ldr	r2, [pc, #36]	; (db0 <event_register_timer+0x34>)
     d8c:	6013      	str	r3, [r2, #0]
     d8e:	4b09      	ldr	r3, [pc, #36]	; (db4 <event_register_timer+0x38>)
     d90:	2220      	movs	r2, #32
     d92:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
     d94:	430a      	orrs	r2, r1
     d96:	64da      	str	r2, [r3, #76]	; 0x4c
     d98:	2105      	movs	r1, #5
     d9a:	2201      	movs	r2, #1
     d9c:	4b06      	ldr	r3, [pc, #24]	; (db8 <event_register_timer+0x3c>)
     d9e:	f000 f8bb 	bl	f18 <sark_vic_set>
     da2:	e002      	b.n	daa <event_register_timer+0x2e>
     da4:	2012      	movs	r0, #18
     da6:	f7ff f9c1 	bl	12c <rt_error>
     daa:	bd08      	pop	{r3, pc}
     dac:	2f000200 	.word	0x2f000200
     db0:	21000028 	.word	0x21000028
     db4:	00400080 	.word	0x00400080
     db8:	00001130 	.word	0x00001130

00000dbc <timer_schedule>:
     dbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     dbe:	4b1a      	ldr	r3, [pc, #104]	; (e28 <timer_schedule+0x6c>)
     dc0:	1c04      	adds	r4, r0, #0
     dc2:	8e1d      	ldrh	r5, [r3, #48]	; 0x30
     dc4:	434d      	muls	r5, r1
     dc6:	f7ff e9f0 	blx	1a8 <cpu_int_disable>
     dca:	4a18      	ldr	r2, [pc, #96]	; (e2c <timer_schedule+0x70>)
     dcc:	6853      	ldr	r3, [r2, #4]
     dce:	2b00      	cmp	r3, #0
     dd0:	d106      	bne.n	de0 <timer_schedule+0x24>
     dd2:	4b17      	ldr	r3, [pc, #92]	; (e30 <timer_schedule+0x74>)
     dd4:	6054      	str	r4, [r2, #4]
     dd6:	601d      	str	r5, [r3, #0]
     dd8:	4b16      	ldr	r3, [pc, #88]	; (e34 <timer_schedule+0x78>)
     dda:	22e3      	movs	r2, #227	; 0xe3
     ddc:	601a      	str	r2, [r3, #0]
     dde:	e020      	b.n	e22 <timer_schedule+0x66>
     de0:	4915      	ldr	r1, [pc, #84]	; (e38 <timer_schedule+0x7c>)
     de2:	6809      	ldr	r1, [r1, #0]
     de4:	428d      	cmp	r5, r1
     de6:	d206      	bcs.n	df6 <timer_schedule+0x3a>
     de8:	4e11      	ldr	r6, [pc, #68]	; (e30 <timer_schedule+0x74>)
     dea:	6035      	str	r5, [r6, #0]
     dec:	1b4d      	subs	r5, r1, r5
     dee:	6023      	str	r3, [r4, #0]
     df0:	611d      	str	r5, [r3, #16]
     df2:	6054      	str	r4, [r2, #4]
     df4:	e015      	b.n	e22 <timer_schedule+0x66>
     df6:	1a6d      	subs	r5, r5, r1
     df8:	2100      	movs	r1, #0
     dfa:	681a      	ldr	r2, [r3, #0]
     dfc:	1c0e      	adds	r6, r1, #0
     dfe:	e009      	b.n	e14 <timer_schedule+0x58>
     e00:	6917      	ldr	r7, [r2, #16]
     e02:	19f6      	adds	r6, r6, r7
     e04:	42ae      	cmp	r6, r5
     e06:	d902      	bls.n	e0e <timer_schedule+0x52>
     e08:	1b76      	subs	r6, r6, r5
     e0a:	6116      	str	r6, [r2, #16]
     e0c:	e004      	b.n	e18 <timer_schedule+0x5c>
     e0e:	1c13      	adds	r3, r2, #0
     e10:	6812      	ldr	r2, [r2, #0]
     e12:	19c9      	adds	r1, r1, r7
     e14:	2a00      	cmp	r2, #0
     e16:	d1f3      	bne.n	e00 <timer_schedule+0x44>
     e18:	681a      	ldr	r2, [r3, #0]
     e1a:	1a6d      	subs	r5, r5, r1
     e1c:	6022      	str	r2, [r4, #0]
     e1e:	6125      	str	r5, [r4, #16]
     e20:	601c      	str	r4, [r3, #0]
     e22:	f7ff e9ca 	blx	1b8 <cpu_int_restore>
     e26:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     e28:	00400044 	.word	0x00400044
     e2c:	00400080 	.word	0x00400080
     e30:	21000020 	.word	0x21000020
     e34:	21000028 	.word	0x21000028
     e38:	21000024 	.word	0x21000024

00000e3c <timer_schedule_proc>:
     e3c:	b510      	push	{r4, lr}
     e3e:	1c1c      	adds	r4, r3, #0
     e40:	f7ff fede 	bl	c00 <event_new>
     e44:	2800      	cmp	r0, #0
     e46:	d003      	beq.n	e50 <timer_schedule_proc+0x14>
     e48:	1c21      	adds	r1, r4, #0
     e4a:	f7ff ffb7 	bl	dbc <timer_schedule>
     e4e:	2001      	movs	r0, #1
     e50:	bd10      	pop	{r4, pc}
	...

00000e54 <timer2_int>:
     e54:	4b18      	ldr	r3, [pc, #96]	; (eb8 <timer2_int+0x64>)
     e56:	2284      	movs	r2, #132	; 0x84
     e58:	0592      	lsls	r2, r2, #22
     e5a:	b510      	push	{r4, lr}
     e5c:	601a      	str	r2, [r3, #0]
     e5e:	4a17      	ldr	r2, [pc, #92]	; (ebc <timer2_int+0x68>)
     e60:	2400      	movs	r4, #0
     e62:	6853      	ldr	r3, [r2, #4]
     e64:	e003      	b.n	e6e <timer2_int+0x1a>
     e66:	6819      	ldr	r1, [r3, #0]
     e68:	601c      	str	r4, [r3, #0]
     e6a:	1c1c      	adds	r4, r3, #0
     e6c:	1c0b      	adds	r3, r1, #0
     e6e:	2b00      	cmp	r3, #0
     e70:	d008      	beq.n	e84 <timer2_int+0x30>
     e72:	6919      	ldr	r1, [r3, #16]
     e74:	2900      	cmp	r1, #0
     e76:	d0f6      	beq.n	e66 <timer2_int+0x12>
     e78:	6053      	str	r3, [r2, #4]
     e7a:	4a11      	ldr	r2, [pc, #68]	; (ec0 <timer2_int+0x6c>)
     e7c:	6011      	str	r1, [r2, #0]
     e7e:	2200      	movs	r2, #0
     e80:	611a      	str	r2, [r3, #16]
     e82:	e012      	b.n	eaa <timer2_int+0x56>
     e84:	6053      	str	r3, [r2, #4]
     e86:	e010      	b.n	eaa <timer2_int+0x56>
     e88:	6863      	ldr	r3, [r4, #4]
     e8a:	2b00      	cmp	r3, #0
     e8c:	d002      	beq.n	e94 <timer2_int+0x40>
     e8e:	68a0      	ldr	r0, [r4, #8]
     e90:	68e1      	ldr	r1, [r4, #12]
     e92:	4798      	blx	r3
     e94:	4b09      	ldr	r3, [pc, #36]	; (ebc <timer2_int+0x68>)
     e96:	6822      	ldr	r2, [r4, #0]
     e98:	6819      	ldr	r1, [r3, #0]
     e9a:	6021      	str	r1, [r4, #0]
     e9c:	2100      	movs	r1, #0
     e9e:	6161      	str	r1, [r4, #20]
     ea0:	8919      	ldrh	r1, [r3, #8]
     ea2:	601c      	str	r4, [r3, #0]
     ea4:	3901      	subs	r1, #1
     ea6:	1c14      	adds	r4, r2, #0
     ea8:	8119      	strh	r1, [r3, #8]
     eaa:	2c00      	cmp	r4, #0
     eac:	d1ec      	bne.n	e88 <timer2_int+0x34>
     eae:	4b05      	ldr	r3, [pc, #20]	; (ec4 <timer2_int+0x70>)
     eb0:	22bc      	movs	r2, #188	; 0xbc
     eb2:	0592      	lsls	r2, r2, #22
     eb4:	601a      	str	r2, [r3, #0]
     eb6:	bd10      	pop	{r4, pc}
     eb8:	2100002c 	.word	0x2100002c
     ebc:	00400080 	.word	0x00400080
     ec0:	21000020 	.word	0x21000020
     ec4:	2f000030 	.word	0x2f000030

00000ec8 <sark_vic_init>:
     ec8:	4b0b      	ldr	r3, [pc, #44]	; (ef8 <sark_vic_init+0x30>)
     eca:	2201      	movs	r2, #1
     ecc:	4252      	negs	r2, r2
     ece:	b510      	push	{r4, lr}
     ed0:	601a      	str	r2, [r3, #0]
     ed2:	4b0a      	ldr	r3, [pc, #40]	; (efc <sark_vic_init+0x34>)
     ed4:	2200      	movs	r2, #0
     ed6:	601a      	str	r2, [r3, #0]
     ed8:	4b09      	ldr	r3, [pc, #36]	; (f00 <RTR_TST1>)
     eda:	4c0a      	ldr	r4, [pc, #40]	; (f04 <RTR_TST2>)
     edc:	601a      	str	r2, [r3, #0]
     ede:	490a      	ldr	r1, [pc, #40]	; (f08 <RTR_TST2+0x4>)
     ee0:	4b0a      	ldr	r3, [pc, #40]	; (f0c <RTR_TST2+0x8>)
     ee2:	1e58      	subs	r0, r3, #1
     ee4:	601a      	str	r2, [r3, #0]
     ee6:	38ff      	subs	r0, #255	; 0xff
     ee8:	3304      	adds	r3, #4
     eea:	6004      	str	r4, [r0, #0]
     eec:	428b      	cmp	r3, r1
     eee:	d1f8      	bne.n	ee2 <sark_vic_init+0x1a>
     ef0:	4b07      	ldr	r3, [pc, #28]	; (f10 <RTR_TST2+0xc>)
     ef2:	4a08      	ldr	r2, [pc, #32]	; (f14 <RTR_TST2+0x10>)
     ef4:	601a      	str	r2, [r3, #0]
     ef6:	bd10      	pop	{r4, pc}
     ef8:	2f000014 	.word	0x2f000014
     efc:	2f00000c 	.word	0x2f00000c
     f00:	2f000030 	.word	0x2f000030
     f04:	00000108 	.word	0x00000108
     f08:	2f000240 	.word	0x2f000240
     f0c:	2f000200 	.word	0x2f000200
     f10:	2f000034 	.word	0x2f000034
     f14:	000002fc 	.word	0x000002fc

00000f18 <sark_vic_set>:
     f18:	b530      	push	{r4, r5, lr}
     f1a:	2810      	cmp	r0, #16
     f1c:	d106      	bne.n	f2c <sark_vic_set+0x14>
     f1e:	2020      	movs	r0, #32
     f20:	61c3      	str	r3, [r0, #28]
     f22:	2001      	movs	r0, #1
     f24:	4b0a      	ldr	r3, [pc, #40]	; (f50 <sark_vic_set+0x38>)
     f26:	4088      	lsls	r0, r1
     f28:	6018      	str	r0, [r3, #0]
     f2a:	e009      	b.n	f40 <sark_vic_set+0x28>
     f2c:	4d09      	ldr	r5, [pc, #36]	; (f54 <sark_vic_set+0x3c>)
     f2e:	0084      	lsls	r4, r0, #2
     f30:	1964      	adds	r4, r4, r5
     f32:	6023      	str	r3, [r4, #0]
     f34:	4b08      	ldr	r3, [pc, #32]	; (f58 <sark_vic_set+0x40>)
     f36:	0080      	lsls	r0, r0, #2
     f38:	18c0      	adds	r0, r0, r3
     f3a:	2320      	movs	r3, #32
     f3c:	430b      	orrs	r3, r1
     f3e:	6003      	str	r3, [r0, #0]
     f40:	2a00      	cmp	r2, #0
     f42:	d004      	beq.n	f4e <sark_vic_set+0x36>
     f44:	2301      	movs	r3, #1
     f46:	408b      	lsls	r3, r1
     f48:	1c19      	adds	r1, r3, #0
     f4a:	4b04      	ldr	r3, [pc, #16]	; (f5c <sark_vic_set+0x44>)
     f4c:	6019      	str	r1, [r3, #0]
     f4e:	bd30      	pop	{r4, r5, pc}
     f50:	2f00000c 	.word	0x2f00000c
     f54:	2f000100 	.word	0x2f000100
     f58:	2f000200 	.word	0x2f000200
     f5c:	2f000010 	.word	0x2f000010

00000f60 <v2p_mask>:
     f60:	2300      	movs	r3, #0
     f62:	1c1a      	adds	r2, r3, #0
     f64:	2101      	movs	r1, #1
     f66:	b530      	push	{r4, r5, lr}
     f68:	1c0c      	adds	r4, r1, #0
     f6a:	409c      	lsls	r4, r3
     f6c:	4220      	tst	r0, r4
     f6e:	d005      	beq.n	f7c <v2p_mask+0x1c>
     f70:	4d05      	ldr	r5, [pc, #20]	; (f88 <v2p_mask+0x28>)
     f72:	195c      	adds	r4, r3, r5
     f74:	7824      	ldrb	r4, [r4, #0]
     f76:	1c0d      	adds	r5, r1, #0
     f78:	40a5      	lsls	r5, r4
     f7a:	432a      	orrs	r2, r5
     f7c:	3301      	adds	r3, #1
     f7e:	2b12      	cmp	r3, #18
     f80:	d1f2      	bne.n	f68 <v2p_mask+0x8>
     f82:	1c10      	adds	r0, r2, #0
     f84:	bd30      	pop	{r4, r5, pc}
     f86:	46c0      	nop			; (mov r8, r8)
     f88:	e5007fa8 	.word	0xe5007fa8

00000f8c <rtr_mc_set>:
     f8c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
     f8e:	1c1f      	adds	r7, r3, #0
     f90:	4b14      	ldr	r3, [pc, #80]	; (fe4 <rtr_mc_set+0x58>)
     f92:	1c05      	adds	r5, r0, #0
     f94:	1c0e      	adds	r6, r1, #0
     f96:	9201      	str	r2, [sp, #4]
     f98:	2000      	movs	r0, #0
     f9a:	429d      	cmp	r5, r3
     f9c:	d821      	bhi.n	fe2 <rtr_mc_set+0x56>
     f9e:	4a12      	ldr	r2, [pc, #72]	; (fe8 <rtr_mc_set+0x5c>)
     fa0:	012b      	lsls	r3, r5, #4
     fa2:	6814      	ldr	r4, [r2, #0]
     fa4:	0238      	lsls	r0, r7, #8
     fa6:	18e4      	adds	r4, r4, r3
     fa8:	0a03      	lsrs	r3, r0, #8
     faa:	6063      	str	r3, [r4, #4]
     fac:	235c      	movs	r3, #92	; 0x5c
     fae:	781a      	ldrb	r2, [r3, #0]
     fb0:	4b0e      	ldr	r3, [pc, #56]	; (fec <rtr_mc_set+0x60>)
     fb2:	0b80      	lsrs	r0, r0, #14
     fb4:	18d2      	adds	r2, r2, r3
     fb6:	4b0e      	ldr	r3, [pc, #56]	; (ff0 <rtr_mc_set+0x64>)
     fb8:	00ad      	lsls	r5, r5, #2
     fba:	681b      	ldr	r3, [r3, #0]
     fbc:	021b      	lsls	r3, r3, #8
     fbe:	18d3      	adds	r3, r2, r3
     fc0:	8063      	strh	r3, [r4, #2]
     fc2:	f7ff ffcd 	bl	f60 <v2p_mask>
     fc6:	233f      	movs	r3, #63	; 0x3f
     fc8:	401f      	ands	r7, r3
     fca:	4b0a      	ldr	r3, [pc, #40]	; (ff4 <rtr_mc_set+0x68>)
     fcc:	9a01      	ldr	r2, [sp, #4]
     fce:	0180      	lsls	r0, r0, #6
     fd0:	4307      	orrs	r7, r0
     fd2:	50ef      	str	r7, [r5, r3]
     fd4:	4b08      	ldr	r3, [pc, #32]	; (ff8 <rtr_mc_set+0x6c>)
     fd6:	2001      	movs	r0, #1
     fd8:	50ee      	str	r6, [r5, r3]
     fda:	4b08      	ldr	r3, [pc, #32]	; (ffc <rtr_mc_set+0x70>)
     fdc:	60a6      	str	r6, [r4, #8]
     fde:	50ea      	str	r2, [r5, r3]
     fe0:	60e2      	str	r2, [r4, #12]
     fe2:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
     fe4:	000003ff 	.word	0x000003ff
     fe8:	e5007fd4 	.word	0xe5007fd4
     fec:	ffff8000 	.word	0xffff8000
     ff0:	00400044 	.word	0x00400044
     ff4:	e1004000 	.word	0xe1004000
     ff8:	e1008000 	.word	0xe1008000
     ffc:	e100c000 	.word	0xe100c000

00001000 <sig_queue>:
    1000:	e24ee004 	sub	lr, lr, #4
    1004:	e92d503f 	push	{r0, r1, r2, r3, r4, r5, ip, lr}
    1008:	e59f1024 	ldr	r1, [pc, #36]	; 1034 <SV_SIZE+0x34>
    100c:	e3a02000 	mov	r2, #0
    1010:	e3a0442f 	mov	r4, #788529152	; 0x2f000000
    1014:	e3a03202 	mov	r3, #536870912	; 0x20000000
    1018:	e584301c 	str	r3, [r4, #28]
    101c:	e1d207b0 	ldrh	r0, [r2, #112]	; 0x70
    1020:	e5d23073 	ldrb	r3, [r2, #115]	; 0x73
    1024:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
    1028:	faffff0d 	blx	c64 <event_queue_proc>
    102c:	e5844030 	str	r4, [r4, #48]	; 0x30
    1030:	e8fd903f 	ldm	sp!, {r0, r1, r2, r3, r4, r5, ip, pc}^
    1034:	00400080 	.word	0x00400080

00001038 <timer_queue>:
    1038:	e24ee004 	sub	lr, lr, #4
    103c:	e92d503f 	push	{r0, r1, r2, r3, r4, r5, ip, lr}
    1040:	e3a03421 	mov	r3, #553648128	; 0x21000000
    1044:	e583300c 	str	r3, [r3, #12]
    1048:	e3a0442f 	mov	r4, #788529152	; 0x2f000000
    104c:	e3a03010 	mov	r3, #16
    1050:	e584301c 	str	r3, [r4, #28]
    1054:	e59f3020 	ldr	r3, [pc, #32]	; 107c <timer_queue+0x44>
    1058:	e3a02000 	mov	r2, #0
    105c:	e593101c 	ldr	r1, [r3, #28]
    1060:	e1d206b0 	ldrh	r0, [r2, #96]	; 0x60
    1064:	e2811001 	add	r1, r1, #1
    1068:	e583101c 	str	r1, [r3, #28]
    106c:	e5d23063 	ldrb	r3, [r2, #99]	; 0x63
    1070:	fafffefb 	blx	c64 <event_queue_proc>
    1074:	e5844030 	str	r4, [r4, #48]	; 0x30
    1078:	e8fd903f 	ldm	sp!, {r0, r1, r2, r3, r4, r5, ip, pc}^
    107c:	00400080 	.word	0x00400080

00001080 <rxpkt_queue>:
    1080:	e24ee004 	sub	lr, lr, #4
    1084:	e92d500f 	push	{r0, r1, r2, r3, ip, lr}
    1088:	e3a03202 	mov	r3, #536870912	; 0x20000000
    108c:	e5932010 	ldr	r2, [r3, #16]
    1090:	e5931014 	ldr	r1, [r3, #20]
    1094:	e3a03000 	mov	r3, #0
    1098:	e1d306b4 	ldrh	r0, [r3, #100]	; 0x64
    109c:	e5d33067 	ldrb	r3, [r3, #103]	; 0x67
    10a0:	fafffeef 	blx	c64 <event_queue_proc>
    10a4:	e3a0342f 	mov	r3, #788529152	; 0x2f000000
    10a8:	e5833030 	str	r3, [r3, #48]	; 0x30
    10ac:	e8fd900f 	ldm	sp!, {r0, r1, r2, r3, ip, pc}^

000010b0 <sdp_queue>:
    10b0:	e24ee004 	sub	lr, lr, #4
    10b4:	e92d503f 	push	{r0, r1, r2, r3, r4, r5, ip, lr}
    10b8:	e3a0442f 	mov	r4, #788529152	; 0x2f000000
    10bc:	e3a03201 	mov	r3, #268435456	; 0x10000000
    10c0:	e584301c 	str	r3, [r4, #28]
    10c4:	e59f3020 	ldr	r3, [pc, #32]	; 10ec <sdp_queue+0x3c>
    10c8:	e5931028 	ldr	r1, [r3, #40]	; 0x28
    10cc:	e3a03000 	mov	r3, #0
    10d0:	e5d1200a 	ldrb	r2, [r1, #10]
    10d4:	e1d306b8 	ldrh	r0, [r3, #104]	; 0x68
    10d8:	e1a022a2 	lsr	r2, r2, #5
    10dc:	e5d3306b 	ldrb	r3, [r3, #107]	; 0x6b
    10e0:	fafffedf 	blx	c64 <event_queue_proc>
    10e4:	e5844030 	str	r4, [r4, #48]	; 0x30
    10e8:	e8fd903f 	ldm	sp!, {r0, r1, r2, r3, r4, r5, ip, pc}^
    10ec:	00400080 	.word	0x00400080

000010f0 <user_queue>:
    10f0:	e24ee004 	sub	lr, lr, #4
    10f4:	e92d503f 	push	{r0, r1, r2, r3, r4, r5, ip, lr}
    10f8:	e59f202c 	ldr	r2, [pc, #44]	; 112c <user_queue+0x3c>
    10fc:	e3a01000 	mov	r1, #0
    1100:	e3a0442f 	mov	r4, #788529152	; 0x2f000000
    1104:	e3a03002 	mov	r3, #2
    1108:	e584301c 	str	r3, [r4, #28]
    110c:	e1d106bc 	ldrh	r0, [r1, #108]	; 0x6c
    1110:	e5d1306f 	ldrb	r3, [r1, #111]	; 0x6f
    1114:	e5c2101b 	strb	r1, [r2, #27]
    1118:	e5921020 	ldr	r1, [r2, #32]
    111c:	e5922024 	ldr	r2, [r2, #36]	; 0x24
    1120:	fafffecf 	blx	c64 <event_queue_proc>
    1124:	e5844030 	str	r4, [r4, #48]	; 0x30
    1128:	e8fd903f 	ldm	sp!, {r0, r1, r2, r3, r4, r5, ip, pc}^
    112c:	00400080 	.word	0x00400080

00001130 <timer2_int_han>:
    1130:	e24ee004 	sub	lr, lr, #4
    1134:	e92d500f 	push	{r0, r1, r2, r3, ip, lr}
    1138:	faffff45 	blx	e54 <timer2_int>
    113c:	e8fd900f 	ldm	sp!, {r0, r1, r2, r3, ip, pc}^

00001140 <sark_fiq_han>:
    1140:	e92d000c 	push	{r2, r3}
    1144:	e3a03202 	mov	r3, #536870912	; 0x20000000
    1148:	e5933014 	ldr	r3, [r3, #20]
    114c:	e59f3010 	ldr	r3, [pc, #16]	; 1164 <sark_fiq_han+0x24>
    1150:	e5932038 	ldr	r2, [r3, #56]	; 0x38
    1154:	e2822001 	add	r2, r2, #1
    1158:	e5832038 	str	r2, [r3, #56]	; 0x38
    115c:	e8bd000c 	pop	{r2, r3}
    1160:	e25ef004 	subs	pc, lr, #4
    1164:	00400044 	.word	0x00400044

00001168 <txpkt_int_han>:
    1168:	e92d100f 	push	{r0, r1, r2, r3, ip}
    116c:	e59f3088 	ldr	r3, [pc, #136]	; 11fc <txpkt_int_han+0x94>
    1170:	e5d3203d 	ldrb	r2, [r3, #61]	; 0x3d
    1174:	e5d31040 	ldrb	r1, [r3, #64]	; 0x40
    1178:	e2822001 	add	r2, r2, #1
    117c:	e2411001 	sub	r1, r1, #1
    1180:	e0012002 	and	r2, r1, r2
    1184:	e20220ff 	and	r2, r2, #255	; 0xff
    1188:	e5c3203d 	strb	r2, [r3, #61]	; 0x3d
    118c:	e5933044 	ldr	r3, [r3, #68]	; 0x44
    1190:	e0822082 	add	r2, r2, r2, lsl #1
    1194:	e1a02102 	lsl	r2, r2, #2
    1198:	e7930002 	ldr	r0, [r3, r2]
    119c:	e0831002 	add	r1, r3, r2
    11a0:	e3100001 	tst	r0, #1
    11a4:	13a0c202 	movne	ip, #536870912	; 0x20000000
    11a8:	158c0000 	strne	r0, [ip]
    11ac:	e7933002 	ldr	r3, [r3, r2]
    11b0:	e3130002 	tst	r3, #2
    11b4:	15912004 	ldrne	r2, [r1, #4]
    11b8:	13a03202 	movne	r3, #536870912	; 0x20000000
    11bc:	15832004 	strne	r2, [r3, #4]
    11c0:	e3a03202 	mov	r3, #536870912	; 0x20000000
    11c4:	e5912008 	ldr	r2, [r1, #8]
    11c8:	e5832008 	str	r2, [r3, #8]
    11cc:	e59f3028 	ldr	r3, [pc, #40]	; 11fc <txpkt_int_han+0x94>
    11d0:	e5d3203e 	ldrb	r2, [r3, #62]	; 0x3e
    11d4:	e2422001 	sub	r2, r2, #1
    11d8:	e5c3203e 	strb	r2, [r3, #62]	; 0x3e
    11dc:	e5d3303e 	ldrb	r3, [r3, #62]	; 0x3e
    11e0:	e3530000 	cmp	r3, #0
    11e4:	03a02502 	moveq	r2, #8388608	; 0x800000
    11e8:	e3a0342f 	mov	r3, #788529152	; 0x2f000000
    11ec:	05832014 	streq	r2, [r3, #20]
    11f0:	e5833030 	str	r3, [r3, #48]	; 0x30
    11f4:	e8bd100f 	pop	{r0, r1, r2, r3, ip}
    11f8:	e25ef004 	subs	pc, lr, #4
    11fc:	00400080 	.word	0x00400080

00001200 <sark_xalloc>:
    1200:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    1202:	1c07      	adds	r7, r0, #0
    1204:	1c15      	adds	r5, r2, #0
    1206:	2aff      	cmp	r2, #255	; 0xff
    1208:	d858      	bhi.n	12bc <sark_xalloc+0xbc>
    120a:	2900      	cmp	r1, #0
    120c:	d100      	bne.n	1210 <sark_xalloc+0x10>
    120e:	e055      	b.n	12bc <sark_xalloc+0xbc>
    1210:	0a1e      	lsrs	r6, r3, #8
    1212:	0798      	lsls	r0, r3, #30
    1214:	d401      	bmi.n	121a <sark_xalloc+0x1a>
    1216:	225c      	movs	r2, #92	; 0x5c
    1218:	7816      	ldrb	r6, [r2, #0]
    121a:	0236      	lsls	r6, r6, #8
    121c:	1976      	adds	r6, r6, r5
    121e:	2d00      	cmp	r5, #0
    1220:	d005      	beq.n	122e <sark_xalloc+0x2e>
    1222:	4a27      	ldr	r2, [pc, #156]	; (12c0 <sark_xalloc+0xc0>)
    1224:	00b0      	lsls	r0, r6, #2
    1226:	6812      	ldr	r2, [r2, #0]
    1228:	5882      	ldr	r2, [r0, r2]
    122a:	2a00      	cmp	r2, #0
    122c:	d146      	bne.n	12bc <sark_xalloc+0xbc>
    122e:	2203      	movs	r2, #3
    1230:	3103      	adds	r1, #3
    1232:	4391      	bics	r1, r2
    1234:	2201      	movs	r2, #1
    1236:	3108      	adds	r1, #8
    1238:	4013      	ands	r3, r2
    123a:	9101      	str	r1, [sp, #4]
    123c:	9300      	str	r3, [sp, #0]
    123e:	d003      	beq.n	1248 <sark_xalloc+0x48>
    1240:	2006      	movs	r0, #6
    1242:	f7fe efc2 	blx	1c8 <sark_lock_get>
    1246:	4684      	mov	ip, r0
    1248:	683c      	ldr	r4, [r7, #0]
    124a:	2200      	movs	r2, #0
    124c:	e02d      	b.n	12aa <sark_xalloc+0xaa>
    124e:	9801      	ldr	r0, [sp, #4]
    1250:	6821      	ldr	r1, [r4, #0]
    1252:	1823      	adds	r3, r4, r0
    1254:	42a3      	cmp	r3, r4
    1256:	d92a      	bls.n	12ae <sark_xalloc+0xae>
    1258:	428b      	cmp	r3, r1
    125a:	d902      	bls.n	1262 <sark_xalloc+0x62>
    125c:	1c22      	adds	r2, r4, #0
    125e:	6864      	ldr	r4, [r4, #4]
    1260:	e023      	b.n	12aa <sark_xalloc+0xaa>
    1262:	1c18      	adds	r0, r3, #0
    1264:	3008      	adds	r0, #8
    1266:	4281      	cmp	r1, r0
    1268:	d904      	bls.n	1274 <sark_xalloc+0x74>
    126a:	6019      	str	r1, [r3, #0]
    126c:	6861      	ldr	r1, [r4, #4]
    126e:	6059      	str	r1, [r3, #4]
    1270:	6023      	str	r3, [r4, #0]
    1272:	6063      	str	r3, [r4, #4]
    1274:	6863      	ldr	r3, [r4, #4]
    1276:	2a00      	cmp	r2, #0
    1278:	d001      	beq.n	127e <sark_xalloc+0x7e>
    127a:	6053      	str	r3, [r2, #4]
    127c:	e000      	b.n	1280 <sark_xalloc+0x80>
    127e:	603b      	str	r3, [r7, #0]
    1280:	9a00      	ldr	r2, [sp, #0]
    1282:	2a00      	cmp	r2, #0
    1284:	d003      	beq.n	128e <sark_xalloc+0x8e>
    1286:	4660      	mov	r0, ip
    1288:	2106      	movs	r1, #6
    128a:	f7fe efb0 	blx	1ec <sark_lock_free>
    128e:	480d      	ldr	r0, [pc, #52]	; (12c4 <sark_xalloc+0xc4>)
    1290:	1833      	adds	r3, r6, r0
    1292:	6063      	str	r3, [r4, #4]
    1294:	2d00      	cmp	r5, #0
    1296:	d005      	beq.n	12a4 <sark_xalloc+0xa4>
    1298:	4b09      	ldr	r3, [pc, #36]	; (12c0 <sark_xalloc+0xc0>)
    129a:	1c22      	adds	r2, r4, #0
    129c:	681b      	ldr	r3, [r3, #0]
    129e:	00b6      	lsls	r6, r6, #2
    12a0:	3208      	adds	r2, #8
    12a2:	50f2      	str	r2, [r6, r3]
    12a4:	1c20      	adds	r0, r4, #0
    12a6:	3008      	adds	r0, #8
    12a8:	e009      	b.n	12be <sark_xalloc+0xbe>
    12aa:	2c00      	cmp	r4, #0
    12ac:	d1cf      	bne.n	124e <sark_xalloc+0x4e>
    12ae:	9900      	ldr	r1, [sp, #0]
    12b0:	2900      	cmp	r1, #0
    12b2:	d003      	beq.n	12bc <sark_xalloc+0xbc>
    12b4:	4660      	mov	r0, ip
    12b6:	2106      	movs	r1, #6
    12b8:	f7fe ef98 	blx	1ec <sark_lock_free>
    12bc:	2000      	movs	r0, #0
    12be:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    12c0:	e5007fdc 	.word	0xe5007fdc
    12c4:	ffff0000 	.word	0xffff0000

000012c8 <sark_alloc>:
    12c8:	4a04      	ldr	r2, [pc, #16]	; (12dc <sark_alloc+0x14>)
    12ca:	b508      	push	{r3, lr}
    12cc:	1c03      	adds	r3, r0, #0
    12ce:	6990      	ldr	r0, [r2, #24]
    12d0:	2200      	movs	r2, #0
    12d2:	4359      	muls	r1, r3
    12d4:	1c13      	adds	r3, r2, #0
    12d6:	f7ff ff93 	bl	1200 <sark_xalloc>
    12da:	bd08      	pop	{r3, pc}
    12dc:	00400044 	.word	0x00400044

000012e0 <sark_heap_init>:
    12e0:	1c03      	adds	r3, r0, #0
    12e2:	330c      	adds	r3, #12
    12e4:	3908      	subs	r1, #8
    12e6:	6043      	str	r3, [r0, #4]
    12e8:	6003      	str	r3, [r0, #0]
    12ea:	2300      	movs	r3, #0
    12ec:	6081      	str	r1, [r0, #8]
    12ee:	60c1      	str	r1, [r0, #12]
    12f0:	6103      	str	r3, [r0, #16]
    12f2:	600b      	str	r3, [r1, #0]
    12f4:	604b      	str	r3, [r1, #4]
    12f6:	4770      	bx	lr

000012f8 <rtr_alloc_id>:
    12f8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    12fa:	2400      	movs	r4, #0
    12fc:	1c06      	adds	r6, r0, #0
    12fe:	9101      	str	r1, [sp, #4]
    1300:	42a0      	cmp	r0, r4
    1302:	d02f      	beq.n	1364 <rtr_alloc_id+0x6c>
    1304:	4b18      	ldr	r3, [pc, #96]	; (1368 <rtr_alloc_id+0x70>)
    1306:	2007      	movs	r0, #7
    1308:	681d      	ldr	r5, [r3, #0]
    130a:	f7fe ef5e 	blx	1c8 <sark_lock_get>
    130e:	4b17      	ldr	r3, [pc, #92]	; (136c <rtr_alloc_id+0x74>)
    1310:	2100      	movs	r1, #0
    1312:	881c      	ldrh	r4, [r3, #0]
    1314:	469c      	mov	ip, r3
    1316:	e020      	b.n	135a <rtr_alloc_id+0x62>
    1318:	0123      	lsls	r3, r4, #4
    131a:	18eb      	adds	r3, r5, r3
    131c:	881f      	ldrh	r7, [r3, #0]
    131e:	19a2      	adds	r2, r4, r6
    1320:	42ba      	cmp	r2, r7
    1322:	d902      	bls.n	132a <rtr_alloc_id+0x32>
    1324:	1c21      	adds	r1, r4, #0
    1326:	885c      	ldrh	r4, [r3, #2]
    1328:	e017      	b.n	135a <rtr_alloc_id+0x62>
    132a:	42ba      	cmp	r2, r7
    132c:	d206      	bcs.n	133c <rtr_alloc_id+0x44>
    132e:	0116      	lsls	r6, r2, #4
    1330:	19ae      	adds	r6, r5, r6
    1332:	8037      	strh	r7, [r6, #0]
    1334:	885f      	ldrh	r7, [r3, #2]
    1336:	8077      	strh	r7, [r6, #2]
    1338:	801a      	strh	r2, [r3, #0]
    133a:	805a      	strh	r2, [r3, #2]
    133c:	885a      	ldrh	r2, [r3, #2]
    133e:	2900      	cmp	r1, #0
    1340:	d003      	beq.n	134a <rtr_alloc_id+0x52>
    1342:	0109      	lsls	r1, r1, #4
    1344:	186d      	adds	r5, r5, r1
    1346:	806a      	strh	r2, [r5, #2]
    1348:	e001      	b.n	134e <rtr_alloc_id+0x56>
    134a:	4661      	mov	r1, ip
    134c:	800a      	strh	r2, [r1, #0]
    134e:	2280      	movs	r2, #128	; 0x80
    1350:	9901      	ldr	r1, [sp, #4]
    1352:	0212      	lsls	r2, r2, #8
    1354:	430a      	orrs	r2, r1
    1356:	805a      	strh	r2, [r3, #2]
    1358:	e001      	b.n	135e <rtr_alloc_id+0x66>
    135a:	2c00      	cmp	r4, #0
    135c:	d1dc      	bne.n	1318 <rtr_alloc_id+0x20>
    135e:	2107      	movs	r1, #7
    1360:	f7fe ef44 	blx	1ec <sark_lock_free>
    1364:	1c20      	adds	r0, r4, #0
    1366:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    1368:	e5007fd4 	.word	0xe5007fd4
    136c:	e5007fe0 	.word	0xe5007fe0

00001370 <rtr_alloc>:
    1370:	b508      	push	{r3, lr}
    1372:	235c      	movs	r3, #92	; 0x5c
    1374:	7819      	ldrb	r1, [r3, #0]
    1376:	f7ff ffbf 	bl	12f8 <rtr_alloc_id>
    137a:	bd08      	pop	{r3, pc}

0000137c <io_buf_init>:
    137c:	b538      	push	{r3, r4, r5, lr}
    137e:	4d0c      	ldr	r5, [pc, #48]	; (13b0 <io_buf_init+0x34>)
    1380:	4b0c      	ldr	r3, [pc, #48]	; (13b4 <io_buf_init+0x38>)
    1382:	6d29      	ldr	r1, [r5, #80]	; 0x50
    1384:	6818      	ldr	r0, [r3, #0]
    1386:	3110      	adds	r1, #16
    1388:	2200      	movs	r2, #0
    138a:	2301      	movs	r3, #1
    138c:	f7ff ff38 	bl	1200 <sark_xalloc>
    1390:	1e04      	subs	r4, r0, #0
    1392:	d102      	bne.n	139a <io_buf_init+0x1e>
    1394:	200e      	movs	r0, #14
    1396:	f7fe fec9 	bl	12c <rt_error>
    139a:	69eb      	ldr	r3, [r5, #28]
    139c:	6063      	str	r3, [r4, #4]
    139e:	4a06      	ldr	r2, [pc, #24]	; (13b8 <io_buf_init+0x3c>)
    13a0:	8b2b      	ldrh	r3, [r5, #24]
    13a2:	60a3      	str	r3, [r4, #8]
    13a4:	2300      	movs	r3, #0
    13a6:	1c20      	adds	r0, r4, #0
    13a8:	6023      	str	r3, [r4, #0]
    13aa:	6013      	str	r3, [r2, #0]
    13ac:	60e3      	str	r3, [r4, #12]
    13ae:	bd38      	pop	{r3, r4, r5, pc}
    13b0:	e5007f00 	.word	0xe5007f00
    13b4:	e5007fd0 	.word	0xe5007fd0
    13b8:	00400038 	.word	0x00400038

000013bc <io_put_char>:
    13bc:	b570      	push	{r4, r5, r6, lr}
    13be:	1c0d      	adds	r5, r1, #0
    13c0:	2803      	cmp	r0, #3
    13c2:	d907      	bls.n	13d4 <io_put_char+0x18>
    13c4:	4a34      	ldr	r2, [pc, #208]	; (1498 <io_put_char+0xdc>)
    13c6:	6813      	ldr	r3, [r2, #0]
    13c8:	54c1      	strb	r1, [r0, r3]
    13ca:	3301      	adds	r3, #1
    13cc:	6013      	str	r3, [r2, #0]
    13ce:	2200      	movs	r2, #0
    13d0:	54c2      	strb	r2, [r0, r3]
    13d2:	e060      	b.n	1496 <io_put_char+0xda>
    13d4:	2800      	cmp	r0, #0
    13d6:	d13a      	bne.n	144e <io_put_char+0x92>
    13d8:	4b30      	ldr	r3, [pc, #192]	; (149c <io_put_char+0xe0>)
    13da:	681b      	ldr	r3, [r3, #0]
    13dc:	2b00      	cmp	r3, #0
    13de:	d11d      	bne.n	141c <io_put_char+0x60>
    13e0:	2001      	movs	r0, #1
    13e2:	2192      	movs	r1, #146	; 0x92
    13e4:	4081      	lsls	r1, r0
    13e6:	f7ff ff6f 	bl	12c8 <sark_alloc>
    13ea:	1e04      	subs	r4, r0, #0
    13ec:	d102      	bne.n	13f4 <io_put_char+0x38>
    13ee:	200e      	movs	r0, #14
    13f0:	f7fe fe9c 	bl	12c <rt_error>
    13f4:	2307      	movs	r3, #7
    13f6:	7223      	strb	r3, [r4, #8]
    13f8:	2300      	movs	r3, #0
    13fa:	7263      	strb	r3, [r4, #9]
    13fc:	23ff      	movs	r3, #255	; 0xff
    13fe:	72a3      	strb	r3, [r4, #10]
    1400:	4b27      	ldr	r3, [pc, #156]	; (14a0 <io_put_char+0xe4>)
    1402:	889a      	ldrh	r2, [r3, #4]
    1404:	81a2      	strh	r2, [r4, #12]
    1406:	4a27      	ldr	r2, [pc, #156]	; (14a4 <io_put_char+0xe8>)
    1408:	6812      	ldr	r2, [r2, #0]
    140a:	72e2      	strb	r2, [r4, #11]
    140c:	881b      	ldrh	r3, [r3, #0]
    140e:	81e3      	strh	r3, [r4, #14]
    1410:	2340      	movs	r3, #64	; 0x40
    1412:	8223      	strh	r3, [r4, #16]
    1414:	230c      	movs	r3, #12
    1416:	80a3      	strh	r3, [r4, #4]
    1418:	4b20      	ldr	r3, [pc, #128]	; (149c <io_put_char+0xe0>)
    141a:	601c      	str	r4, [r3, #0]
    141c:	4b1f      	ldr	r3, [pc, #124]	; (149c <io_put_char+0xe0>)
    141e:	6818      	ldr	r0, [r3, #0]
    1420:	8883      	ldrh	r3, [r0, #4]
    1422:	18c2      	adds	r2, r0, r3
    1424:	3301      	adds	r3, #1
    1426:	041b      	lsls	r3, r3, #16
    1428:	0c1b      	lsrs	r3, r3, #16
    142a:	7215      	strb	r5, [r2, #8]
    142c:	8083      	strh	r3, [r0, #4]
    142e:	2d00      	cmp	r5, #0
    1430:	d005      	beq.n	143e <io_put_char+0x82>
    1432:	2d0a      	cmp	r5, #10
    1434:	d003      	beq.n	143e <io_put_char+0x82>
    1436:	2286      	movs	r2, #134	; 0x86
    1438:	0052      	lsls	r2, r2, #1
    143a:	4293      	cmp	r3, r2
    143c:	d12b      	bne.n	1496 <io_put_char+0xda>
    143e:	210a      	movs	r1, #10
    1440:	f7ff f946 	bl	6d0 <sark_msg_send>
    1444:	4b15      	ldr	r3, [pc, #84]	; (149c <io_put_char+0xe0>)
    1446:	220c      	movs	r2, #12
    1448:	681b      	ldr	r3, [r3, #0]
    144a:	809a      	strh	r2, [r3, #4]
    144c:	e023      	b.n	1496 <io_put_char+0xda>
    144e:	2802      	cmp	r0, #2
    1450:	d121      	bne.n	1496 <io_put_char+0xda>
    1452:	4e15      	ldr	r6, [pc, #84]	; (14a8 <io_put_char+0xec>)
    1454:	6833      	ldr	r3, [r6, #0]
    1456:	2b00      	cmp	r3, #0
    1458:	d105      	bne.n	1466 <io_put_char+0xaa>
    145a:	4b12      	ldr	r3, [pc, #72]	; (14a4 <io_put_char+0xe8>)
    145c:	69dc      	ldr	r4, [r3, #28]
    145e:	f7ff ff8d 	bl	137c <io_buf_init>
    1462:	65a0      	str	r0, [r4, #88]	; 0x58
    1464:	6030      	str	r0, [r6, #0]
    1466:	4a11      	ldr	r2, [pc, #68]	; (14ac <io_put_char+0xf0>)
    1468:	6834      	ldr	r4, [r6, #0]
    146a:	6813      	ldr	r3, [r2, #0]
    146c:	18e1      	adds	r1, r4, r3
    146e:	3301      	adds	r3, #1
    1470:	6013      	str	r3, [r2, #0]
    1472:	4a0b      	ldr	r2, [pc, #44]	; (14a0 <io_put_char+0xe4>)
    1474:	740d      	strb	r5, [r1, #16]
    1476:	6d12      	ldr	r2, [r2, #80]	; 0x50
    1478:	4293      	cmp	r3, r2
    147a:	d107      	bne.n	148c <io_put_char+0xd0>
    147c:	60e3      	str	r3, [r4, #12]
    147e:	f7ff ff7d 	bl	137c <io_buf_init>
    1482:	6833      	ldr	r3, [r6, #0]
    1484:	6020      	str	r0, [r4, #0]
    1486:	681b      	ldr	r3, [r3, #0]
    1488:	6033      	str	r3, [r6, #0]
    148a:	e004      	b.n	1496 <io_put_char+0xda>
    148c:	2d00      	cmp	r5, #0
    148e:	d001      	beq.n	1494 <io_put_char+0xd8>
    1490:	2d0a      	cmp	r5, #10
    1492:	d100      	bne.n	1496 <io_put_char+0xda>
    1494:	60e3      	str	r3, [r4, #12]
    1496:	bd70      	pop	{r4, r5, r6, pc}
    1498:	0040003c 	.word	0x0040003c
    149c:	00400030 	.word	0x00400030
    14a0:	e5007f00 	.word	0xe5007f00
    14a4:	00400044 	.word	0x00400044
    14a8:	00400034 	.word	0x00400034
    14ac:	00400038 	.word	0x00400038

000014b0 <io_put_fixed>:
    14b0:	b5f0      	push	{r4, r5, r6, r7, lr}
    14b2:	b08d      	sub	sp, #52	; 0x34
    14b4:	9001      	str	r0, [sp, #4]
    14b6:	1c15      	adds	r5, r2, #0
    14b8:	2b0c      	cmp	r3, #12
    14ba:	d900      	bls.n	14be <io_put_fixed+0xe>
    14bc:	230c      	movs	r3, #12
    14be:	1c0a      	adds	r2, r1, #0
    14c0:	2400      	movs	r4, #0
    14c2:	e008      	b.n	14d6 <io_put_fixed+0x26>
    14c4:	0c17      	lsrs	r7, r2, #16
    14c6:	3730      	adds	r7, #48	; 0x30
    14c8:	46bc      	mov	ip, r7
    14ca:	a805      	add	r0, sp, #20
    14cc:	3401      	adds	r4, #1
    14ce:	18c7      	adds	r7, r0, r3
    14d0:	4266      	negs	r6, r4
    14d2:	4660      	mov	r0, ip
    14d4:	55b8      	strb	r0, [r7, r6]
    14d6:	0412      	lsls	r2, r2, #16
    14d8:	0c12      	lsrs	r2, r2, #16
    14da:	200a      	movs	r0, #10
    14dc:	4342      	muls	r2, r0
    14de:	429c      	cmp	r4, r3
    14e0:	d1f0      	bne.n	14c4 <io_put_fixed+0x14>
    14e2:	0c12      	lsrs	r2, r2, #16
    14e4:	2004      	movs	r0, #4
    14e6:	4290      	cmp	r0, r2
    14e8:	4180      	sbcs	r0, r0
    14ea:	2601      	movs	r6, #1
    14ec:	4240      	negs	r0, r0
    14ee:	2200      	movs	r2, #0
    14f0:	46b4      	mov	ip, r6
    14f2:	2730      	movs	r7, #48	; 0x30
    14f4:	e00a      	b.n	150c <io_put_fixed+0x5c>
    14f6:	a805      	add	r0, sp, #20
    14f8:	5c16      	ldrb	r6, [r2, r0]
    14fa:	2e38      	cmp	r6, #56	; 0x38
    14fc:	d902      	bls.n	1504 <io_put_fixed+0x54>
    14fe:	5417      	strb	r7, [r2, r0]
    1500:	2001      	movs	r0, #1
    1502:	e002      	b.n	150a <io_put_fixed+0x5a>
    1504:	3601      	adds	r6, #1
    1506:	5416      	strb	r6, [r2, r0]
    1508:	2000      	movs	r0, #0
    150a:	3201      	adds	r2, #1
    150c:	429a      	cmp	r2, r3
    150e:	d202      	bcs.n	1516 <io_put_fixed+0x66>
    1510:	4666      	mov	r6, ip
    1512:	4230      	tst	r0, r6
    1514:	d1ef      	bne.n	14f6 <io_put_fixed+0x46>
    1516:	2b00      	cmp	r3, #0
    1518:	d003      	beq.n	1522 <io_put_fixed+0x72>
    151a:	242e      	movs	r4, #46	; 0x2e
    151c:	aa05      	add	r2, sp, #20
    151e:	54d4      	strb	r4, [r2, r3]
    1520:	1c5c      	adds	r4, r3, #1
    1522:	0c09      	lsrs	r1, r1, #16
    1524:	1841      	adds	r1, r0, r1
    1526:	a803      	add	r0, sp, #12
    1528:	f7fe eeb8 	blx	29c <sark_div10>
    152c:	9a04      	ldr	r2, [sp, #16]
    152e:	9903      	ldr	r1, [sp, #12]
    1530:	ab05      	add	r3, sp, #20
    1532:	3230      	adds	r2, #48	; 0x30
    1534:	54e2      	strb	r2, [r4, r3]
    1536:	1c66      	adds	r6, r4, #1
    1538:	2900      	cmp	r1, #0
    153a:	d001      	beq.n	1540 <io_put_fixed+0x90>
    153c:	1c34      	adds	r4, r6, #0
    153e:	e7f2      	b.n	1526 <io_put_fixed+0x76>
    1540:	9813      	ldr	r0, [sp, #76]	; 0x4c
    1542:	2800      	cmp	r0, #0
    1544:	d008      	beq.n	1558 <io_put_fixed+0xa8>
    1546:	222d      	movs	r2, #45	; 0x2d
    1548:	559a      	strb	r2, [r3, r6]
    154a:	1ca6      	adds	r6, r4, #2
    154c:	e004      	b.n	1558 <io_put_fixed+0xa8>
    154e:	9801      	ldr	r0, [sp, #4]
    1550:	9912      	ldr	r1, [sp, #72]	; 0x48
    1552:	f7ff ff33 	bl	13bc <io_put_char>
    1556:	3d01      	subs	r5, #1
    1558:	1c73      	adds	r3, r6, #1
    155a:	429d      	cmp	r5, r3
    155c:	d8f7      	bhi.n	154e <io_put_fixed+0x9e>
    155e:	3e01      	subs	r6, #1
    1560:	ab05      	add	r3, sp, #20
    1562:	5cf1      	ldrb	r1, [r6, r3]
    1564:	9801      	ldr	r0, [sp, #4]
    1566:	f7ff ff29 	bl	13bc <io_put_char>
    156a:	2e00      	cmp	r6, #0
    156c:	d1f7      	bne.n	155e <io_put_fixed+0xae>
    156e:	b00d      	add	sp, #52	; 0x34
    1570:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

00001574 <io_printf>:
    1574:	b40e      	push	{r1, r2, r3}
    1576:	b5f0      	push	{r4, r5, r6, r7, lr}
    1578:	b08c      	sub	sp, #48	; 0x30
    157a:	1c04      	adds	r4, r0, #0
    157c:	9d11      	ldr	r5, [sp, #68]	; 0x44
    157e:	2803      	cmp	r0, #3
    1580:	d100      	bne.n	1584 <io_printf+0x10>
    1582:	e145      	b.n	1810 <io_printf+0x29c>
    1584:	d903      	bls.n	158e <io_printf+0x1a>
    1586:	4aa5      	ldr	r2, [pc, #660]	; (181c <io_printf+0x2a8>)
    1588:	2300      	movs	r3, #0
    158a:	7003      	strb	r3, [r0, #0]
    158c:	6013      	str	r3, [r2, #0]
    158e:	ab12      	add	r3, sp, #72	; 0x48
    1590:	9305      	str	r3, [sp, #20]
    1592:	7829      	ldrb	r1, [r5, #0]
    1594:	2900      	cmp	r1, #0
    1596:	d100      	bne.n	159a <io_printf+0x26>
    1598:	e13a      	b.n	1810 <io_printf+0x29c>
    159a:	2925      	cmp	r1, #37	; 0x25
    159c:	d001      	beq.n	15a2 <io_printf+0x2e>
    159e:	3501      	adds	r5, #1
    15a0:	e053      	b.n	164a <io_printf+0xd6>
    15a2:	7869      	ldrb	r1, [r5, #1]
    15a4:	3502      	adds	r5, #2
    15a6:	2900      	cmp	r1, #0
    15a8:	d100      	bne.n	15ac <io_printf+0x38>
    15aa:	e131      	b.n	1810 <io_printf+0x29c>
    15ac:	2930      	cmp	r1, #48	; 0x30
    15ae:	d002      	beq.n	15b6 <io_printf+0x42>
    15b0:	2020      	movs	r0, #32
    15b2:	9003      	str	r0, [sp, #12]
    15b4:	e000      	b.n	15b8 <io_printf+0x44>
    15b6:	9103      	str	r1, [sp, #12]
    15b8:	2600      	movs	r6, #0
    15ba:	220a      	movs	r2, #10
    15bc:	e007      	b.n	15ce <io_printf+0x5a>
    15be:	4356      	muls	r6, r2
    15c0:	1876      	adds	r6, r6, r1
    15c2:	7829      	ldrb	r1, [r5, #0]
    15c4:	3e30      	subs	r6, #48	; 0x30
    15c6:	3501      	adds	r5, #1
    15c8:	2900      	cmp	r1, #0
    15ca:	d100      	bne.n	15ce <io_printf+0x5a>
    15cc:	e120      	b.n	1810 <io_printf+0x29c>
    15ce:	1c0b      	adds	r3, r1, #0
    15d0:	3b30      	subs	r3, #48	; 0x30
    15d2:	2b09      	cmp	r3, #9
    15d4:	d9f3      	bls.n	15be <io_printf+0x4a>
    15d6:	1c37      	adds	r7, r6, #0
    15d8:	2306      	movs	r3, #6
    15da:	292e      	cmp	r1, #46	; 0x2e
    15dc:	d110      	bne.n	1600 <io_printf+0x8c>
    15de:	7829      	ldrb	r1, [r5, #0]
    15e0:	2300      	movs	r3, #0
    15e2:	3501      	adds	r5, #1
    15e4:	200a      	movs	r0, #10
    15e6:	e004      	b.n	15f2 <io_printf+0x7e>
    15e8:	4343      	muls	r3, r0
    15ea:	185b      	adds	r3, r3, r1
    15ec:	3b30      	subs	r3, #48	; 0x30
    15ee:	7829      	ldrb	r1, [r5, #0]
    15f0:	3501      	adds	r5, #1
    15f2:	1c0a      	adds	r2, r1, #0
    15f4:	3a30      	subs	r2, #48	; 0x30
    15f6:	2a09      	cmp	r2, #9
    15f8:	d9f6      	bls.n	15e8 <io_printf+0x74>
    15fa:	2900      	cmp	r1, #0
    15fc:	d100      	bne.n	1600 <io_printf+0x8c>
    15fe:	e107      	b.n	1810 <io_printf+0x29c>
    1600:	296b      	cmp	r1, #107	; 0x6b
    1602:	d100      	bne.n	1606 <io_printf+0x92>
    1604:	e0b0      	b.n	1768 <io_printf+0x1f4>
    1606:	d80d      	bhi.n	1624 <io_printf+0xb0>
    1608:	2963      	cmp	r1, #99	; 0x63
    160a:	d01a      	beq.n	1642 <io_printf+0xce>
    160c:	d805      	bhi.n	161a <io_printf+0xa6>
    160e:	294b      	cmp	r1, #75	; 0x4b
    1610:	d100      	bne.n	1614 <io_printf+0xa0>
    1612:	e09a      	b.n	174a <io_printf+0x1d6>
    1614:	2952      	cmp	r1, #82	; 0x52
    1616:	d118      	bne.n	164a <io_printf+0xd6>
    1618:	e09e      	b.n	1758 <io_printf+0x1e4>
    161a:	2964      	cmp	r1, #100	; 0x64
    161c:	d036      	beq.n	168c <io_printf+0x118>
    161e:	2966      	cmp	r1, #102	; 0x66
    1620:	d113      	bne.n	164a <io_printf+0xd6>
    1622:	e092      	b.n	174a <io_printf+0x1d6>
    1624:	2975      	cmp	r1, #117	; 0x75
    1626:	d066      	beq.n	16f6 <io_printf+0x182>
    1628:	d805      	bhi.n	1636 <io_printf+0xc2>
    162a:	2972      	cmp	r1, #114	; 0x72
    162c:	d100      	bne.n	1630 <io_printf+0xbc>
    162e:	e09b      	b.n	1768 <io_printf+0x1f4>
    1630:	2973      	cmp	r1, #115	; 0x73
    1632:	d10a      	bne.n	164a <io_printf+0xd6>
    1634:	e00d      	b.n	1652 <io_printf+0xde>
    1636:	2978      	cmp	r1, #120	; 0x78
    1638:	d100      	bne.n	163c <io_printf+0xc8>
    163a:	e0a6      	b.n	178a <io_printf+0x216>
    163c:	297a      	cmp	r1, #122	; 0x7a
    163e:	d104      	bne.n	164a <io_printf+0xd6>
    1640:	e0ce      	b.n	17e0 <io_printf+0x26c>
    1642:	9b05      	ldr	r3, [sp, #20]
    1644:	6819      	ldr	r1, [r3, #0]
    1646:	1d1a      	adds	r2, r3, #4
    1648:	9205      	str	r2, [sp, #20]
    164a:	1c20      	adds	r0, r4, #0
    164c:	f7ff feb6 	bl	13bc <io_put_char>
    1650:	e79f      	b.n	1592 <io_printf+0x1e>
    1652:	9b05      	ldr	r3, [sp, #20]
    1654:	681e      	ldr	r6, [r3, #0]
    1656:	1d1a      	adds	r2, r3, #4
    1658:	1c33      	adds	r3, r6, #0
    165a:	9205      	str	r2, [sp, #20]
    165c:	781a      	ldrb	r2, [r3, #0]
    165e:	1b99      	subs	r1, r3, r6
    1660:	9103      	str	r1, [sp, #12]
    1662:	3301      	adds	r3, #1
    1664:	2a00      	cmp	r2, #0
    1666:	d1f9      	bne.n	165c <io_printf+0xe8>
    1668:	e004      	b.n	1674 <io_printf+0x100>
    166a:	1c20      	adds	r0, r4, #0
    166c:	2120      	movs	r1, #32
    166e:	f7ff fea5 	bl	13bc <io_put_char>
    1672:	3f01      	subs	r7, #1
    1674:	9a03      	ldr	r2, [sp, #12]
    1676:	4297      	cmp	r7, r2
    1678:	dcf7      	bgt.n	166a <io_printf+0xf6>
    167a:	e003      	b.n	1684 <io_printf+0x110>
    167c:	1c20      	adds	r0, r4, #0
    167e:	3601      	adds	r6, #1
    1680:	f7ff fe9c 	bl	13bc <io_put_char>
    1684:	7831      	ldrb	r1, [r6, #0]
    1686:	2900      	cmp	r1, #0
    1688:	d1f8      	bne.n	167c <io_printf+0x108>
    168a:	e782      	b.n	1592 <io_printf+0x1e>
    168c:	9b05      	ldr	r3, [sp, #20]
    168e:	6819      	ldr	r1, [r3, #0]
    1690:	1d1a      	adds	r2, r3, #4
    1692:	2300      	movs	r3, #0
    1694:	9205      	str	r2, [sp, #20]
    1696:	9303      	str	r3, [sp, #12]
    1698:	4299      	cmp	r1, r3
    169a:	da02      	bge.n	16a2 <io_printf+0x12e>
    169c:	202d      	movs	r0, #45	; 0x2d
    169e:	4249      	negs	r1, r1
    16a0:	9003      	str	r0, [sp, #12]
    16a2:	2700      	movs	r7, #0
    16a4:	a806      	add	r0, sp, #24
    16a6:	f7fe edfa 	blx	29c <sark_div10>
    16aa:	9a07      	ldr	r2, [sp, #28]
    16ac:	9906      	ldr	r1, [sp, #24]
    16ae:	ab08      	add	r3, sp, #32
    16b0:	3230      	adds	r2, #48	; 0x30
    16b2:	54fa      	strb	r2, [r7, r3]
    16b4:	3701      	adds	r7, #1
    16b6:	2900      	cmp	r1, #0
    16b8:	d1f4      	bne.n	16a4 <io_printf+0x130>
    16ba:	e001      	b.n	16c0 <io_printf+0x14c>
    16bc:	2f00      	cmp	r7, #0
    16be:	d003      	beq.n	16c8 <io_printf+0x154>
    16c0:	3f01      	subs	r7, #1
    16c2:	5cfa      	ldrb	r2, [r7, r3]
    16c4:	2a30      	cmp	r2, #48	; 0x30
    16c6:	d0f9      	beq.n	16bc <io_printf+0x148>
    16c8:	9903      	ldr	r1, [sp, #12]
    16ca:	2900      	cmp	r1, #0
    16cc:	d007      	beq.n	16de <io_printf+0x16a>
    16ce:	3701      	adds	r7, #1
    16d0:	55d9      	strb	r1, [r3, r7]
    16d2:	e004      	b.n	16de <io_printf+0x16a>
    16d4:	1c20      	adds	r0, r4, #0
    16d6:	2120      	movs	r1, #32
    16d8:	f7ff fe70 	bl	13bc <io_put_char>
    16dc:	3e01      	subs	r6, #1
    16de:	1c7b      	adds	r3, r7, #1
    16e0:	429e      	cmp	r6, r3
    16e2:	d8f7      	bhi.n	16d4 <io_printf+0x160>
    16e4:	ab08      	add	r3, sp, #32
    16e6:	5cf9      	ldrb	r1, [r7, r3]
    16e8:	1c20      	adds	r0, r4, #0
    16ea:	3f01      	subs	r7, #1
    16ec:	f7ff fe66 	bl	13bc <io_put_char>
    16f0:	1c79      	adds	r1, r7, #1
    16f2:	d1f7      	bne.n	16e4 <io_printf+0x170>
    16f4:	e74d      	b.n	1592 <io_printf+0x1e>
    16f6:	9b05      	ldr	r3, [sp, #20]
    16f8:	2700      	movs	r7, #0
    16fa:	6819      	ldr	r1, [r3, #0]
    16fc:	1d1a      	adds	r2, r3, #4
    16fe:	9205      	str	r2, [sp, #20]
    1700:	a806      	add	r0, sp, #24
    1702:	f7fe edcc 	blx	29c <sark_div10>
    1706:	9a07      	ldr	r2, [sp, #28]
    1708:	9906      	ldr	r1, [sp, #24]
    170a:	3230      	adds	r2, #48	; 0x30
    170c:	ab08      	add	r3, sp, #32
    170e:	54fa      	strb	r2, [r7, r3]
    1710:	3701      	adds	r7, #1
    1712:	2900      	cmp	r1, #0
    1714:	d1f4      	bne.n	1700 <io_printf+0x18c>
    1716:	e001      	b.n	171c <io_printf+0x1a8>
    1718:	2f00      	cmp	r7, #0
    171a:	d00a      	beq.n	1732 <io_printf+0x1be>
    171c:	3f01      	subs	r7, #1
    171e:	ab08      	add	r3, sp, #32
    1720:	5cfb      	ldrb	r3, [r7, r3]
    1722:	2b30      	cmp	r3, #48	; 0x30
    1724:	d105      	bne.n	1732 <io_printf+0x1be>
    1726:	e7f7      	b.n	1718 <io_printf+0x1a4>
    1728:	1c20      	adds	r0, r4, #0
    172a:	9903      	ldr	r1, [sp, #12]
    172c:	f7ff fe46 	bl	13bc <io_put_char>
    1730:	3e01      	subs	r6, #1
    1732:	1c7b      	adds	r3, r7, #1
    1734:	429e      	cmp	r6, r3
    1736:	d8f7      	bhi.n	1728 <io_printf+0x1b4>
    1738:	ab08      	add	r3, sp, #32
    173a:	5cf9      	ldrb	r1, [r7, r3]
    173c:	1c20      	adds	r0, r4, #0
    173e:	3f01      	subs	r7, #1
    1740:	f7ff fe3c 	bl	13bc <io_put_char>
    1744:	1c7a      	adds	r2, r7, #1
    1746:	d1f7      	bne.n	1738 <io_printf+0x1c4>
    1748:	e723      	b.n	1592 <io_printf+0x1e>
    174a:	9a05      	ldr	r2, [sp, #20]
    174c:	9803      	ldr	r0, [sp, #12]
    174e:	1d11      	adds	r1, r2, #4
    1750:	9105      	str	r1, [sp, #20]
    1752:	6811      	ldr	r1, [r2, #0]
    1754:	9000      	str	r0, [sp, #0]
    1756:	e005      	b.n	1764 <io_printf+0x1f0>
    1758:	9a05      	ldr	r2, [sp, #20]
    175a:	1d11      	adds	r1, r2, #4
    175c:	9105      	str	r1, [sp, #20]
    175e:	6811      	ldr	r1, [r2, #0]
    1760:	9a03      	ldr	r2, [sp, #12]
    1762:	9200      	str	r2, [sp, #0]
    1764:	2200      	movs	r2, #0
    1766:	e00a      	b.n	177e <io_printf+0x20a>
    1768:	9a05      	ldr	r2, [sp, #20]
    176a:	1d11      	adds	r1, r2, #4
    176c:	6812      	ldr	r2, [r2, #0]
    176e:	9105      	str	r1, [sp, #20]
    1770:	17d0      	asrs	r0, r2, #31
    1772:	1811      	adds	r1, r2, r0
    1774:	4041      	eors	r1, r0
    1776:	0049      	lsls	r1, r1, #1
    1778:	9803      	ldr	r0, [sp, #12]
    177a:	0fd2      	lsrs	r2, r2, #31
    177c:	9000      	str	r0, [sp, #0]
    177e:	9201      	str	r2, [sp, #4]
    1780:	1c20      	adds	r0, r4, #0
    1782:	1c32      	adds	r2, r6, #0
    1784:	f7ff fe94 	bl	14b0 <io_put_fixed>
    1788:	e703      	b.n	1592 <io_printf+0x1e>
    178a:	9b05      	ldr	r3, [sp, #20]
    178c:	210f      	movs	r1, #15
    178e:	1d1a      	adds	r2, r3, #4
    1790:	4823      	ldr	r0, [pc, #140]	; (1820 <io_printf+0x2ac>)
    1792:	681b      	ldr	r3, [r3, #0]
    1794:	2700      	movs	r7, #0
    1796:	468c      	mov	ip, r1
    1798:	9205      	str	r2, [sp, #20]
    179a:	4662      	mov	r2, ip
    179c:	401a      	ands	r2, r3
    179e:	5c81      	ldrb	r1, [r0, r2]
    17a0:	aa08      	add	r2, sp, #32
    17a2:	54b9      	strb	r1, [r7, r2]
    17a4:	091b      	lsrs	r3, r3, #4
    17a6:	3701      	adds	r7, #1
    17a8:	2b00      	cmp	r3, #0
    17aa:	d1f6      	bne.n	179a <io_printf+0x226>
    17ac:	e001      	b.n	17b2 <io_printf+0x23e>
    17ae:	2f00      	cmp	r7, #0
    17b0:	d00a      	beq.n	17c8 <io_printf+0x254>
    17b2:	3f01      	subs	r7, #1
    17b4:	ab08      	add	r3, sp, #32
    17b6:	5cfb      	ldrb	r3, [r7, r3]
    17b8:	2b30      	cmp	r3, #48	; 0x30
    17ba:	d105      	bne.n	17c8 <io_printf+0x254>
    17bc:	e7f7      	b.n	17ae <io_printf+0x23a>
    17be:	1c20      	adds	r0, r4, #0
    17c0:	9903      	ldr	r1, [sp, #12]
    17c2:	f7ff fdfb 	bl	13bc <io_put_char>
    17c6:	3e01      	subs	r6, #1
    17c8:	1c7b      	adds	r3, r7, #1
    17ca:	429e      	cmp	r6, r3
    17cc:	d8f7      	bhi.n	17be <io_printf+0x24a>
    17ce:	ab08      	add	r3, sp, #32
    17d0:	5cf9      	ldrb	r1, [r7, r3]
    17d2:	1c20      	adds	r0, r4, #0
    17d4:	3f01      	subs	r7, #1
    17d6:	f7ff fdf1 	bl	13bc <io_put_char>
    17da:	1c7a      	adds	r2, r7, #1
    17dc:	d1f7      	bne.n	17ce <io_printf+0x25a>
    17de:	e6d8      	b.n	1592 <io_printf+0x1e>
    17e0:	9b05      	ldr	r3, [sp, #20]
    17e2:	1e77      	subs	r7, r6, #1
    17e4:	1d1a      	adds	r2, r3, #4
    17e6:	681b      	ldr	r3, [r3, #0]
    17e8:	9303      	str	r3, [sp, #12]
    17ea:	4b0e      	ldr	r3, [pc, #56]	; (1824 <io_printf+0x2b0>)
    17ec:	9205      	str	r2, [sp, #20]
    17ee:	18f6      	adds	r6, r6, r3
    17f0:	00b6      	lsls	r6, r6, #2
    17f2:	e00a      	b.n	180a <io_printf+0x296>
    17f4:	9a03      	ldr	r2, [sp, #12]
    17f6:	230f      	movs	r3, #15
    17f8:	40f2      	lsrs	r2, r6
    17fa:	4013      	ands	r3, r2
    17fc:	4a08      	ldr	r2, [pc, #32]	; (1820 <io_printf+0x2ac>)
    17fe:	1c20      	adds	r0, r4, #0
    1800:	5cd1      	ldrb	r1, [r2, r3]
    1802:	f7ff fddb 	bl	13bc <io_put_char>
    1806:	3f01      	subs	r7, #1
    1808:	3e04      	subs	r6, #4
    180a:	2f00      	cmp	r7, #0
    180c:	daf2      	bge.n	17f4 <io_printf+0x280>
    180e:	e6c0      	b.n	1592 <io_printf+0x1e>
    1810:	b00c      	add	sp, #48	; 0x30
    1812:	bcf0      	pop	{r4, r5, r6, r7}
    1814:	bc08      	pop	{r3}
    1816:	b003      	add	sp, #12
    1818:	4718      	bx	r3
    181a:	46c0      	nop			; (mov r8, r8)
    181c:	0040003c 	.word	0x0040003c
    1820:	00001ac8 	.word	0x00001ac8
    1824:	3fffffff 	.word	0x3fffffff

00001828 <event_register_pkt>:
    1828:	2380      	movs	r3, #128	; 0x80
    182a:	b570      	push	{r4, r5, r6, lr}
    182c:	005b      	lsls	r3, r3, #1
    182e:	1c04      	adds	r4, r0, #0
    1830:	1c0e      	adds	r6, r1, #0
    1832:	4298      	cmp	r0, r3
    1834:	d821      	bhi.n	187a <event_register_pkt+0x52>
    1836:	1e43      	subs	r3, r0, #1
    1838:	4218      	tst	r0, r3
    183a:	d11e      	bne.n	187a <event_register_pkt+0x52>
    183c:	290f      	cmp	r1, #15
    183e:	d81c      	bhi.n	187a <event_register_pkt+0x52>
    1840:	4a10      	ldr	r2, [pc, #64]	; (1884 <event_register_pkt+0x5c>)
    1842:	008b      	lsls	r3, r1, #2
    1844:	189b      	adds	r3, r3, r2
    1846:	681d      	ldr	r5, [r3, #0]
    1848:	2d00      	cmp	r5, #0
    184a:	d116      	bne.n	187a <event_register_pkt+0x52>
    184c:	210c      	movs	r1, #12
    184e:	f7ff fd3b 	bl	12c8 <sark_alloc>
    1852:	4b0d      	ldr	r3, [pc, #52]	; (1888 <event_register_pkt+0x60>)
    1854:	6458      	str	r0, [r3, #68]	; 0x44
    1856:	2800      	cmp	r0, #0
    1858:	d00f      	beq.n	187a <event_register_pkt+0x52>
    185a:	1c1a      	adds	r2, r3, #0
    185c:	323c      	adds	r2, #60	; 0x3c
    185e:	2101      	movs	r1, #1
    1860:	3302      	adds	r3, #2
    1862:	7011      	strb	r1, [r2, #0]
    1864:	87dc      	strh	r4, [r3, #62]	; 0x3e
    1866:	1c30      	adds	r0, r6, #0
    1868:	4b08      	ldr	r3, [pc, #32]	; (188c <event_register_pkt+0x64>)
    186a:	2117      	movs	r1, #23
    186c:	1c2a      	adds	r2, r5, #0
    186e:	f7ff fb53 	bl	f18 <sark_vic_set>
    1872:	2380      	movs	r3, #128	; 0x80
    1874:	059b      	lsls	r3, r3, #22
    1876:	601d      	str	r5, [r3, #0]
    1878:	e002      	b.n	1880 <event_register_pkt+0x58>
    187a:	2011      	movs	r0, #17
    187c:	f7fe fc56 	bl	12c <rt_error>
    1880:	bd70      	pop	{r4, r5, r6, pc}
    1882:	46c0      	nop			; (mov r8, r8)
    1884:	2f000200 	.word	0x2f000200
    1888:	00400080 	.word	0x00400080
    188c:	00001168 	.word	0x00001168

00001890 <pkt_tx_kd>:
    1890:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1892:	1c0d      	adds	r5, r1, #0
    1894:	1c04      	adds	r4, r0, #0
    1896:	f7fe ec88 	blx	1a8 <cpu_int_disable>
    189a:	4b1a      	ldr	r3, [pc, #104]	; (1904 <pkt_tx_kd+0x74>)
    189c:	1c1e      	adds	r6, r3, #0
    189e:	1c9a      	adds	r2, r3, #2
    18a0:	363e      	adds	r6, #62	; 0x3e
    18a2:	8fd1      	ldrh	r1, [r2, #62]	; 0x3e
    18a4:	7837      	ldrb	r7, [r6, #0]
    18a6:	1c1a      	adds	r2, r3, #0
    18a8:	428f      	cmp	r7, r1
    18aa:	d303      	bcc.n	18b4 <pkt_tx_kd+0x24>
    18ac:	f7fe ec84 	blx	1b8 <cpu_int_restore>
    18b0:	2000      	movs	r0, #0
    18b2:	e026      	b.n	1902 <pkt_tx_kd+0x72>
    18b4:	7833      	ldrb	r3, [r6, #0]
    18b6:	2b00      	cmp	r3, #0
    18b8:	d103      	bne.n	18c2 <pkt_tx_kd+0x32>
    18ba:	2680      	movs	r6, #128	; 0x80
    18bc:	4b12      	ldr	r3, [pc, #72]	; (1908 <pkt_tx_kd+0x78>)
    18be:	0436      	lsls	r6, r6, #16
    18c0:	601e      	str	r6, [r3, #0]
    18c2:	1c13      	adds	r3, r2, #0
    18c4:	333e      	adds	r3, #62	; 0x3e
    18c6:	781e      	ldrb	r6, [r3, #0]
    18c8:	3204      	adds	r2, #4
    18ca:	3601      	adds	r6, #1
    18cc:	701e      	strb	r6, [r3, #0]
    18ce:	781e      	ldrb	r6, [r3, #0]
    18d0:	8fd7      	ldrh	r7, [r2, #62]	; 0x3e
    18d2:	42b7      	cmp	r7, r6
    18d4:	d201      	bcs.n	18da <pkt_tx_kd+0x4a>
    18d6:	781b      	ldrb	r3, [r3, #0]
    18d8:	87d3      	strh	r3, [r2, #62]	; 0x3e
    18da:	4e0a      	ldr	r6, [pc, #40]	; (1904 <pkt_tx_kd+0x74>)
    18dc:	270c      	movs	r7, #12
    18de:	1c33      	adds	r3, r6, #0
    18e0:	333c      	adds	r3, #60	; 0x3c
    18e2:	781a      	ldrb	r2, [r3, #0]
    18e4:	6c76      	ldr	r6, [r6, #68]	; 0x44
    18e6:	437a      	muls	r2, r7
    18e8:	3901      	subs	r1, #1
    18ea:	18b2      	adds	r2, r6, r2
    18ec:	2602      	movs	r6, #2
    18ee:	6016      	str	r6, [r2, #0]
    18f0:	6055      	str	r5, [r2, #4]
    18f2:	6094      	str	r4, [r2, #8]
    18f4:	781a      	ldrb	r2, [r3, #0]
    18f6:	3201      	adds	r2, #1
    18f8:	4011      	ands	r1, r2
    18fa:	7019      	strb	r1, [r3, #0]
    18fc:	f7fe ec5c 	blx	1b8 <cpu_int_restore>
    1900:	2001      	movs	r0, #1
    1902:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1904:	00400080 	.word	0x00400080
    1908:	2f000010 	.word	0x2f000010

0000190c <__aeabi_uidiv>:
    190c:	e2512001 	subs	r2, r1, #1
    1910:	012fff1e 	bxeq	lr
    1914:	3a000036 	bcc	19f4 <__aeabi_uidiv+0xe8>
    1918:	e1500001 	cmp	r0, r1
    191c:	9a000022 	bls	19ac <__aeabi_uidiv+0xa0>
    1920:	e1110002 	tst	r1, r2
    1924:	0a000023 	beq	19b8 <__aeabi_uidiv+0xac>
    1928:	e311020e 	tst	r1, #-536870912	; 0xe0000000
    192c:	01a01181 	lsleq	r1, r1, #3
    1930:	03a03008 	moveq	r3, #8
    1934:	13a03001 	movne	r3, #1
    1938:	e3510201 	cmp	r1, #268435456	; 0x10000000
    193c:	31510000 	cmpcc	r1, r0
    1940:	31a01201 	lslcc	r1, r1, #4
    1944:	31a03203 	lslcc	r3, r3, #4
    1948:	3afffffa 	bcc	1938 <__aeabi_uidiv+0x2c>
    194c:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
    1950:	31510000 	cmpcc	r1, r0
    1954:	31a01081 	lslcc	r1, r1, #1
    1958:	31a03083 	lslcc	r3, r3, #1
    195c:	3afffffa 	bcc	194c <__aeabi_uidiv+0x40>
    1960:	e3a02000 	mov	r2, #0
    1964:	e1500001 	cmp	r0, r1
    1968:	20400001 	subcs	r0, r0, r1
    196c:	21822003 	orrcs	r2, r2, r3
    1970:	e15000a1 	cmp	r0, r1, lsr #1
    1974:	204000a1 	subcs	r0, r0, r1, lsr #1
    1978:	218220a3 	orrcs	r2, r2, r3, lsr #1
    197c:	e1500121 	cmp	r0, r1, lsr #2
    1980:	20400121 	subcs	r0, r0, r1, lsr #2
    1984:	21822123 	orrcs	r2, r2, r3, lsr #2
    1988:	e15001a1 	cmp	r0, r1, lsr #3
    198c:	204001a1 	subcs	r0, r0, r1, lsr #3
    1990:	218221a3 	orrcs	r2, r2, r3, lsr #3
    1994:	e3500000 	cmp	r0, #0
    1998:	11b03223 	lsrsne	r3, r3, #4
    199c:	11a01221 	lsrne	r1, r1, #4
    19a0:	1affffef 	bne	1964 <__aeabi_uidiv+0x58>
    19a4:	e1a00002 	mov	r0, r2
    19a8:	e12fff1e 	bx	lr
    19ac:	03a00001 	moveq	r0, #1
    19b0:	13a00000 	movne	r0, #0
    19b4:	e12fff1e 	bx	lr
    19b8:	e3510801 	cmp	r1, #65536	; 0x10000
    19bc:	21a01821 	lsrcs	r1, r1, #16
    19c0:	23a02010 	movcs	r2, #16
    19c4:	33a02000 	movcc	r2, #0
    19c8:	e3510c01 	cmp	r1, #256	; 0x100
    19cc:	21a01421 	lsrcs	r1, r1, #8
    19d0:	22822008 	addcs	r2, r2, #8
    19d4:	e3510010 	cmp	r1, #16
    19d8:	21a01221 	lsrcs	r1, r1, #4
    19dc:	22822004 	addcs	r2, r2, #4
    19e0:	e3510004 	cmp	r1, #4
    19e4:	82822003 	addhi	r2, r2, #3
    19e8:	908220a1 	addls	r2, r2, r1, lsr #1
    19ec:	e1a00230 	lsr	r0, r0, r2
    19f0:	e12fff1e 	bx	lr
    19f4:	e3500000 	cmp	r0, #0
    19f8:	13e00000 	mvnne	r0, #0
    19fc:	ea000007 	b	1a20 <__aeabi_idiv0>

00001a00 <__aeabi_uidivmod>:
    1a00:	e3510000 	cmp	r1, #0
    1a04:	0afffffa 	beq	19f4 <__aeabi_uidiv+0xe8>
    1a08:	e92d4003 	push	{r0, r1, lr}
    1a0c:	ebffffbe 	bl	190c <__aeabi_uidiv>
    1a10:	e8bd4006 	pop	{r1, r2, lr}
    1a14:	e0030092 	mul	r3, r2, r0
    1a18:	e0411003 	sub	r1, r1, r3
    1a1c:	e12fff1e 	bx	lr

00001a20 <__aeabi_idiv0>:
    1a20:	e12fff1e 	bx	lr
    1a24:	65756c62 	.word	0x65756c62
    1a28:	64657200 	.word	0x64657200
    1a2c:	73252300 	.word	0x73252300
    1a30:	6966233b 	.word	0x6966233b
    1a34:	233b6c6c 	.word	0x233b6c6c
    1a38:	74696877 	.word	0x74696877
    1a3c:	64253b65 	.word	0x64253b65
    1a40:	2023000a 	.word	0x2023000a
    1a44:	656d6974 	.word	0x656d6974
    1a48:	72705f72 	.word	0x72705f72
    1a4c:	2520636f 	.word	0x2520636f
    1a50:	74612064 	.word	0x74612064
    1a54:	0a642520 	.word	0x0a642520
    1a58:	41202300 	.word	0x41202300
    1a5c:	22207070 	.word	0x22207070
    1a60:	20227325 	.word	0x20227325
    1a64:	63206e6f 	.word	0x63206e6f
    1a68:	2065726f 	.word	0x2065726f
    1a6c:	28206425 	.word	0x28206425
    1a70:	49707041 	.word	0x49707041
    1a74:	64252044 	.word	0x64252044
    1a78:	54000a29 	.word	0x54000a29
    1a7c:	696d7265 	.word	0x696d7265
    1a80:	6574616e 	.word	0x6574616e
    1a84:	202d2064 	.word	0x202d2064
    1a88:	25204352 	.word	0x25204352
    1a8c:	00000a64 	.word	0x00000a64

00001a90 <build_name>:
    1a90:	676e6972 00000000                       ring....

00001a98 <build_date>:
    1a98:	5436c162 4b524153 6970532f 6b614e4e     b.6TSARK/SpiNNak
    1aa8:	04007265                                         er.

00001aab <vic_bit>:
    1aab:	011c1804 00000c1d 00103800                       .........

00001ab4 <queue_events>:
    1ab4:	00001038 00001080 000010b0 000010f0     8...............
    1ac4:	00001000                                ....

00001ac8 <hex>:
    1ac8:	33323130 37363534 62613938 66656463     0123456789abcdef
	...
